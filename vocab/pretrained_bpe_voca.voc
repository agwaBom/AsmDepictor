#version: 0.2
f f
_ r
ff ff
0 x
o v
m ov
[ r
_ [r
a x
_ e
o r
_ 0x
t r
p tr
_ ptr
_ptr _[r
w or
wor d
word _ptr_[r
] ,</w>
ffff ffff
mov _r
+ 0x
_ q
_q word_ptr_[r
_e ax
p +0x
_0x ffffffff
d i
d x
b p
_r 1
a l
_0xffffffff ffff
s i
_r ax
m p
t e
c al
cal l
_ d
b x
_d word_ptr_[r
8 ],</w>
mov _e
0 ,</w>
s p+0x
e a
e _0x
c x
l ea
0 ],</w>
_rax ,</w>
_eax ,</w>
s t
te st
bp -
i p+0x
mov_r di
mov_r ax
1 ,</w>
bp- 0x
c mp
mov _qword_ptr_[r
mov_rax _qword_ptr_[r
lea _r
] _
2 ,</w>
j mp
x or
d ,</w>
j e_0x
call _0xffffffffffff
8 ,</w>
s p
j n
4 ,</w>
s h
bx ,</w>
3 ,</w>
_eax _eax,</w>
p o
po p
bp ,</w>
d d
jmp _0xffffffffffff
dx ,</w>
_r bx,</w>
a dd
p u
pu sh
_[r ip+0x
5 ,</w>
mov _eax
_r bp,</w>
mov _dword_ptr_[r
_ b
ff f
y te
yte _ptr_[r
mov_r 1
_b yte_ptr_[r
8 ]
_0x 1
]_ 0,</w>
m m
mov_r si
e _0xffffffffffff
x mm
call _0xffffffff
jn e_0x
_ 1,</w>
call_0xffffffff fff
mov_e dx
+0x 1
mov_r dx
_r1 2,</w>
_r sp
sp+0x 1
7 ,</w>
_ xmm
9 ,</w>
e ,</w>
mov_e si
6 ,</w>
0 ]
b ,</w>
_e cx
ip+0x 2
test _eax_eax,</w>
u b
s ub
_r di
c ,</w>
jmp_0xffffffffffff f
f ,</w>
si ,</w>
xor _eax_eax,</w>
a ,</w>
_r dx,</w>
_0x 4
mov_eax _dword_ptr_[r
mov_rax_qword_ptr_[r bp-0x
mov_e di
4 ],</w>
_0x 2
_e dx
mov_rdi _qword_ptr_[r
_r1 3,</w>
+ 8],</w>
z x
mov zx
2 8],</w>
_e dx,</w>
lea_r si
_r cx
r e
+ r
jn e_0xffffffffffff
mov_rdx _qword_ptr_[r
mov_r cx
1 2
ax +0x
mov_e cx
_r1 4,</w>
call _0x
_r1 2
_rdi ,</w>
jmp_0xffffffffffff ff
_e di
c ],</w>
je_0x 1
mov_qword_ptr_[r sp+0x
_ al
mov_rdi _rax,</w>
call_0xffffffffffff f
8 d
n d
1 ],</w>
ax ],</w>
lea_rsi _[rip+0x
1 5
lea_r di
bx +0x
1 3
_r1 5,</w>
8] _rax,</w>
lea_r dx
2 0],</w>
_r si,</w>
_r dx
_ 8,</w>
0 0
_rax _rax,</w>
mov_rsi _qword_ptr_[r
mov_r bx
_r1 3
j e_0xffffffffffff
1 4
test _rax_rax,</w>
_ecx ,</w>
_rcx ,</w>
lea _rax
sub _rsp
mov s
mov_qword_ptr_[r bp-0x
pop _rbx,</w>
a nd
add _rsp
t ,</w>
re t,</w>
_r1 4
mov_r bp
mov_r1 2
mov _byte_ptr_[r
pop _rbp,</w>
mov_rdi _rbx,</w>
_e si
8 ]_0,</w>
_e si,</w>
mov_rcx _qword_ptr_[r
jne_0xffffffffffff ff
push _rbp,</w>
b p+0x
_0x 3
movzx _eax
cmp _eax
9 d
_[r sp+0x
_r1 5
mov_rdi _rbp,</w>
3 0],</w>
movs x
call_0xfffffffffff e
]_ 1,</w>
mov_edx _dword_ptr_[r
0 ]_0,</w>
_ptr _
word _ptr_
ax +0x1
f s
fs :
word_ptr_ fs:
push _rbx,</w>
0] _rax,</w>
[ 0x
_q word_ptr_fs:
_r 8
_qword_ptr_fs: [0x
_qword_ptr_fs:[0x 28],</w>
je_0x 2
sp +
_ word_ptr_[r
cmp _dword_ptr_[r
lea_rdi _[rip+0x
1 0
_edx _edx,</w>
sp +8],</w>
pop _r12,</w>
cmp _qword_ptr_[r
mov_dword_ptr_[r sp+0x
l ,</w>
_ 0,</w>
add _rax
_e bx,</w>
_edi ,</w>
test _r
_ 2,</w>
jmp_0xfffffffffffff e
3 8],</w>
2 ],</w>
call_0xffffffffffff e
mov_r1 3
jne_0x 1
_al ,</w>
_[r ax
] _eax,</w>
e _
ip+0x2 0
_xmm word_ptr_[r
movsx d
4 0],</w>
lea_r cx
_0x1 0,</w>
- 0x
1 8],</w>
f e
bx +0x1
_ 4,</w>
movzx_eax _byte_ptr_[r
j a
mov_r1 4
mov_r 8d
push _r12,</w>
9 ],</w>
_e bp,</w>
sp+0x1 0],</w>
_r12 d,</w>
mov_qword_ptr_[r sp+0x1
_e bx
_r8 d,</w>
_ 3,</w>
mov_dword_ptr_[r bp-0x
lea_rdx _[rip+0x
mov_r1 5
re t</w>
_0x 6
call _0x1
je_0xffffffffffff ff
j b
+ 1],</w>
mov_ecx _dword_ptr_[r
d q
lea_rax _[r
pop _r13,</w>
mov_r 8
xor _edx_edx,</w>
1 0],</w>
_qword_ptr_[r sp+0x
cmp _byte_ptr_[r
je_0x 3
_0x 5
di +0x
sp+0x1 8],</w>
1 d
_esi _esi,</w>
2 0
mov_rdi _r12,</w>
_r1 0
mov_rax_qword_ptr_[r sp+0x
_ecx _ecx,</w>
_0x2 0,</w>
mov a
sh l
mov_esi _1,</w>
4 8],</w>
]_ xmm
xor _r
call_0xffffffffffff d
_rsp ,</w>
6 ],</w>
d _eax,</w>
5 8],</w>
_r 9
5 0],</w>
mov_esi _0x4
p s
] _rax,</w>
_xmm 0
3 ],</w>
0 0,</w>
push _r13,</w>
a ],</w>
_dword_ptr_[r sp+0x
_e bp
_r 8,</w>
_r13 d,</w>
_0x 8
call_0xfffffffffff d
mov_e bx
7 ],</w>
5 ],</w>
4 ]
test _byte_ptr_[r
j l
mov_eax_dword_ptr_[r bp-0x
jne_0x 2
j e_
e ],</w>
7 0],</w>
_edi _edi,</w>
_ 5,</w>
b b
6 0],</w>
bx ],</w>
mov_rdi_qword_ptr_[r sp+0x
call_0xffffffffffff c
_0x 7
cmp _rax
f ],</w>
_r12 d
6 4,</w>
_0xffffffff ,</w>
bp- 8],</w>
pop _r14,</w>
+r ax
lea_rdx _[r
mov_qword_ptr_[r sp+
xor _esi_esi,</w>
mov_r 9
_0x ffff
test _al
f d
jmp_0xfffffffffffff d
sub_rsp _8,</w>
mov_rax _qword_ptr_fs:[0x28],</w>
s e
b ],</w>
sp ],</w>
mov_edi _0x4
mov_eax _0,</w>
ps _xmmword_ptr_[r
- 1,</w>
_0x1 8,</w>
_r14 d,</w>
je_0x 4
mov_r 9d
1 1
add _r
mov_rax_qword_ptr_[r ip+0x2
mov_rdi _r13,</w>
lea_r 8
c mov
xor _ecx_ecx,</w>
call _0x2
mov_rbx _qword_ptr_[r
+0x1 0],</w>
mov_e bp
12 +0x
and _eax
c ]
jmp _0x1
15 +0x
_r9 d,</w>
sh r
add_rsp _8,</w>
8d _r8d,</w>
di ],</w>
push _r14,</w>
movzx _edx
+ 4],</w>
mov_rdx _rax,</w>
_r15 d,</w>
lea_rax _[rip+0x
lea_rcx _[rip+0x
mov_qword_ptr_[rsp+0x 2
mov_rax_qword_ptr_[r ax+0x
_qword_ptr_[r bp-0x
+r dx
_rdi _rdi,</w>
call_0xfffffffffff c
_r13 d
lea_rsi _[r
test _rdi_rdi,</w>
ax ]
mov_rdx_qword_ptr_[r bp-0x
6 8],</w>
xor _edi_edi,</w>
mov_rsi _rax,</w>
2 4
f c
8 0],</w>
call_0xffffffffffff b
1 c
lea_rdi _[r
_r 9,</w>
mov_rax_qword_ptr_[rbp-0x 18],</w>
mov_rdi _r14,</w>
mov_edi _1,</w>
3 4
mov_rax_qword_ptr_[r bp-8],</w>
mov_r1 0
8] _rdx,</w>
mov_rdi _r15,</w>
d ],</w>
mov dq
_ -1,</w>
7 0
b r
nd br
ndbr 64,</w>
e ndbr64,</w>
3 0
ax +8],</w>
j g
pop _r15,</w>
2 8
mov_dword_ptr_[r sp+0x1
mov_esi _dword_ptr_[r
jb e_0x
_r14 d
mov_rax_qword_ptr_[r ax],</w>
_ c
mov_edi _dword_ptr_[r
13 +0x
je_0x 5
test_al _al,</w>
mova ps_xmmword_ptr_[r
14 +0x
_ 7,</w>
7 8],</w>
si _rsi,</w>
3 c
jl e_0x
2 c
cmp _r
1 8
test_r si_rsi,</w>
3 8
5 a
00 0,</w>
_d l,</w>
mov_rbx _rax,</w>
1 a
call_0xffffffffffff a
mov_rsi _rbp,</w>
e c
jmp_0xfffffffffffff c
_0x a,</w>
lea_r8 _[rip+0x
xor_r 8d_r8d,</w>
n e
mov _word_ptr_[r
1 6
dx +0x
4 0
je_ 7,</w>
1 b
mov_rbp _rsp,</w>
1 9
jne_0x 3
mov_r12 d
push _r15,</w>
8] _eax,</w>
8 0
e 0],</w>
_xmm 1
+rax *
mov_rsi_qword_ptr_[r sp+0x
5 0
call _qword_ptr_[r
_r15 d
mov_rbx _rdi,</w>
mov_qword_ptr_[rsp+0x 3
_r1 1
call_0xfffffffffff b
add_rax _rdx,</w>
f b
mov_qword_ptr_[r sp
mov_rsi _rbx,</w>
cmp _al
8] _rdi,</w>
1 7
6 0
2 2
mov_rdx_qword_ptr_[r sp+0x
jmp _0x
6 c
bp ],</w>
j s
9 0],</w>
_0xffffffffffff ff
ax+0x1 0],</w>
5 c
add _rdx
cmp _edx
4 a
3 a
cmp_dword_ptr_[r bp-0x
]_xmm 0,</w>
u l
m ul
8 6
_ebx _ebx,</w>
ax +
9 0
lea_rcx _[r
call_0xfffffffffff a
mov_eax_dword_ptr_[r sp+0x
4 c
test _edx_edx,</w>
+0x1 8],</w>
si +0x
mov_rsi _r12,</w>
f a
1 e
call _0x4
add _eax
_0x4 0,</w>
_rdx _rdx,</w>
mov_qword_ptr_[rsp+0x 4
3 7
3 6
2 0]
s d
2 a
_0x3 0,</w>
se t
c dq
_[rax +1],</w>
mov_edx _5,</w>
9 c
5 4
mov_qword_ptr_[rbp-0x 1
3 d
- 1],</w>
test _rdx_rdx,</w>
_ 6,</w>
al ,</w>
]_ al,</w>
jne_0xffffffffffffff e
9 a
movsxd _rdx
5 8
9 b
je_0x 6
mov_r8 _qword_ptr_[r
mov_edx _1,</w>
_d l
3 b
cmp _rdi
mov_eax _1,</w>
jne_0xffffffffffff fe
2 6
9 8],</w>
9 4
mov_eax_dword_ptr_[r ip+0x2
2 7
jne_0x 4
1 4],</w>
_r12d _r12d,</w>
_xmm0 _xmm
8 8],</w>
sub _eax
3 e
12 ],</w>
cdq e,</w>
lea_rax _[rsp+0x
_0x2 8,</w>
movzx_edx _byte_ptr_[r
8 8
_r si
_r1 0,</w>
mov_edi _eax,</w>
mov_dword_ptr_[r sp+
2 d
5 7
_ebp _ebp,</w>
6 6
]_ 2,</w>
9 7
bx +8],</w>
2 b
5 b
_dword_ptr_[r bp-0x
5 d
+r cx
mov_r13 d
mov_edx _eax,</w>
je_0x 7
_r10 d,</w>
0] _rdx,</w>
mov_rax_qword_ptr_[rbp-0x 28],</w>
lea_r 9
4 7
mov_rbp _rax,</w>
9 6
9 e
9 8
5 e
cmp_qword_ptr_[r bp-0x
mov_qword_ptr_[rsp+ 8]_rax,</w>
je_0xffffffffffff fe
lea _eax
4 8
mov_qword_ptr_[r bx+0x
movaps_xmmword_ptr_[r sp+0x
f 7
jmp _0x2
mov_rsi _rdx,</w>
lea_rax_[r bp-0x
2 e
movdq a
movzx _ecx
cmov e
5 6
mov_rcx_qword_ptr_[r sp+0x
mov_edx _0x4
mov_edx _0x1
movzx_eax_byte_ptr_[r ax],</w>
ax+0x1 8],</w>
4 b
mov_qword_ptr_[r bp-
mov_dword_ptr_[r ip+0x2
9d _r9d,</w>
sub _rax
c c
ax ,</w>
f 0],</w>
bx _rbx,</w>
movzx_eax _word_ptr_[r
b s
8 0,</w>
si ],</w>
a 0],</w>
mov_qword_ptr_[r ax+0x
mov_qword_ptr_[r ip+0x2
mov_r14 d
test_r bx_rbx,</w>
jmp_0xfffffffffffff b
2 4],</w>
movs d
* 8],</w>
v e,</w>
lea ve,</w>
shl _rax
0] _eax,</w>
ax ]_0,</w>
movsxd _rax
mov_rbp _rdi,</w>
se te
call_0xffffffffffff 7
mov_rbp _qword_ptr_[r
13 ],</w>
4 4
mov_rsi _r13,</w>
cmp _rdx
_c l,</w>
i mul
lea_eax _[r
1 f
test _
a a
mov_r8d _dword_ptr_[r
bx +
i n
8 c
lea _edx
e d
dx ],</w>
4 d
ff ,</w>
6 d
s a
sa r
00 00
di +0x1
in c
1 0,</w>
8 a
8] _rcx,</w>
5 5
8 7
6 b
_xmm 2
_r13d _r13d,</w>
bx+0x1 0],</w>
3 f
e e
6 a
add_r bx
b 0],</w>
15 ],</w>
mov_r12 _qword_ptr_[r
_0x8 0,</w>
xor _rcx
xor _rax
9 9
_0xffff fff
mov_r15 d
8 b
jne_0xffffffffffffff d
xor_rcx _qword_ptr_fs:[0x28],</w>
_r1 1,</w>
mov_rax_qword_ptr_[rbp-0x 10],</w>
6 7
push _rax,</w>
e b
mov_ebx _eax,</w>
s bb
3 5
mov_rcx _rax,</w>
f 0
mov_eax_dword_ptr_[r ax],</w>
mov_rax_qword_ptr_[r bx+0x
lea_r bx
mov_r12 _rax,</w>
]_ 4,</w>
* 4],</w>
mov_r12 d_eax,</w>
mov_r10 d
ja e_0x
add_rsp _0x18,</w>
cx +0x
i p
call_0xffffffff ff
mov_rax_qword_ptr_[r sp+8],</w>
_ 9,</w>
lea_rsi _[rsp+0x
_r10 d
_r11 d,</w>
3 2
lea _r12
ip -0x
6 4
9 8,</w>
jmp_0xffffffffffffff a
mov_rax_qword_ptr_[rbp-0x 38],</w>
c 0
jmp_0xffffffffffffff b
2 c],</w>
xor_rax _qword_ptr_fs:[0x28],</w>
re p
c 0],</w>
mov_rdx _r12,</w>
mov_qword_ptr_[rsp+0x 5
test _ecx_ecx,</w>
9 0,</w>
jmp_0xffffffffffffff c
_r14d _r14d,</w>
9 f
p cmp
mov_r9 _qword_ptr_[r
jne_0x 5
lea _r13
cmp_eax _1,</w>
b 8],</w>
xor _ebx_ebx,</w>
lea_rdi _[rsp+0x
mov_rdx _rbx,</w>
3 4],</w>
8 e
8 4
_r15d _r15d,</w>
mov_edx _0x
6 e
7 c
+r ax],</w>
_r 8d
lea_r bp
7 d
mov_edx_dword_ptr_[r bp-0x
ax +r
cmp _ecx
+ 2],</w>
mov_dword_ptr_[r bx+0x
lea_rdx _[rax
_0x3 8,</w>
mov_rsi _r14,</w>
2 5
jmp_0xfffffffffffff a
xor_r 9d_r9d,</w>
9 5
call_0xfffffffffffff d
ea ,</w>
cmp _ebx
mov_esi_0x4 0
lea_rdx _[rsp+0x
je_0x a
movdq u
]_ 8,</w>
mov_rax_qword_ptr_[rbp-0x 20],</w>
mov_ecx _eax,</w>
mov_rax_qword_ptr_[r ip+0x20
2 0,</w>
7 a
jn e_
add _rdi
3 3
mov_r1 1d
jne_0xffffffffffff f
0] _rsi,</w>
4 ]_eax,</w>
2 f
sub _rdx
mov_eax _0xffffffff,</w>
p xor
mov_rdi_qword_ptr_[r ip+0x2
mov_qword_ptr_[rbp-0x 2
mov_qword_ptr_[rbp- 8]_rax,</w>
a 8],</w>
mov_qword_ptr_[rsp+0x1 8]_rax,</w>
and _edx
_0x c,</w>
mov_rax_qword_ptr_[rbp-0x 58],</w>
7 b
mov_r13 _qword_ptr_[r
mov_eax_dword_ptr_[r ax+0x
jmp_0xffffffffffffff d
1 8,</w>
mova bs
mov_rax_qword_ptr_[r bp+0x
d 0],</w>
4 ]_0,</w>
test _r12
e 0
mov_rsi _rcx,</w>
xor _r12d_r12d,</w>
mov_qword_ptr_[r ax]
bp _rbp,</w>
8 ]_1,</w>
mov_byte_ptr_[r sp+0x
6 f
8 +0x
jmp _0x3
dx +0x1
bx+0x1 8],</w>
mov_qword_ptr_[rbp-0x 4
test_r bp_rbp,</w>
2 3
movzx _esi
b 0
9 3
lea _r14
mov_ebp _eax,</w>
1 ]
xor _ebp_ebp,</w>
je_0xffffffffffff f
mov_qword_ptr_[r ax+0x1
a 0
cmov ne
0] _rcx,</w>
_r1 1d
cmp _
or _eax
_c l
mov_rdx _rbp,</w>
test _esi_esi,</w>
8 f
c 8],</w>
5 f
4 e
_xmm1 _xmm
c 0,</w>
cmp_eax _-1,</w>
_rcx _rcx,</w>
7 7
jmp_0xffffffffffffff 9
e_0xffffffffffff ff
sub _edx
call_0xfffffffffffff c
mov_rdi_qword_ptr_[r sp+8],</w>
je_0x b
add _dword_ptr_[r
6 0,</w>
mov_r1 1
jmp_0xffffffffffffff 8
mov_rax_qword_ptr_[r ax+8],</w>
mov_edx_dword_ptr_[r sp+0x
mov_r14 _qword_ptr_[r
lea _ecx
movzx_eax _al,</w>
9 2
mov_dword_ptr_[r ax+0x
c ]_eax,</w>
jmp_0xffffffffffff e
jmp_0xffffffffffffff 7
12 +0x1
mov_r15 d_eax,</w>
_r bx
jne_0xffffffffffff fd
_byte_ptr_[r si
mov_esi _0x1
mov_qword_ptr_[rsp ]
]_ ax,</w>
mov_dword_ptr_[r sp
mov_r15 _qword_ptr_[r
jne_0x 7
4 0,</w>
3 c],</w>
add_r si
3 8,</w>
mov_qword_ptr_[rsp+ 8]
e 8,</w>
mov_esi _eax,</w>
mov_rcx_qword_ptr_[r bp-0x
3 0,</w>
sub_rsp _0x18,</w>
mov_qword_ptr_[rbp-0x 3
bp +8],</w>
_0x f
cmp_r bx
_r 9d
jne_0x 6
2 8,</w>
je_0x 9
add _rcx
di v
e 0,</w>
mov_qword_ptr_[rsp+0x 6
mov_rdx _r13,</w>
jne_0xffffffffffff fff
_xmm0_xmm 0,</w>
mov_rax_qword_ptr_[r sp+0x18],</w>
call_0xfffffffffffff b
jne_0xffffffffffffff c
8 5
test _rcx_rcx,</w>
mov_eax _edx,</w>
4 6
2 0]_0,</w>
mov_rax_qword_ptr_[r sp+0x10],</w>
mov u
movzx_ecx _byte_ptr_[r
sub_rsp _0x10,</w>
test_r12 _r12,</w>
c a
je_0x 8
jn s
2 9
15 +0x1
mov_rax _rdx,</w>
mov_rsi _r15,</w>
4 f
mov_dword_ptr_[r ip+0x
lea_r9 _[rip+0x
mov_rbp _rsi,</w>
_[r dx
test _edi_edi,</w>
add_rax _1,</w>
_0xffffffffffff fff
_xmm0 _xmmword_ptr_[r
mov_r9d _dword_ptr_[r
1 c,</w>
call_0xfffffffffffff a
1 d,</w>
mov_edi_0x4 0
je_0xffffffffffff fd
1 4,</w>
jmp_0xffffffffffffff 5
mov_qword_ptr_[r bp+0x
mov_r13 _rax,</w>
mov_rax_qword_ptr_[r ip+0x
_0x4 0
test _ebx_ebx,</w>
call_0x a
7 e
1 b,</w>
mov_edx _0x2
call_0xffffffffffff ff
add _qword_ptr_[rbp-0x
1 1,</w>
je_0x c
_0x3 f,</w>
cmp _esi
di +8],</w>
d 0
call_0x 3
movu ps_xmmword_ptr_[r
cmp _ebp
1 3,</w>
1 2,</w>
1 6,</w>
set ne
1 e,</w>
4 5
mov_rbx _rsi,</w>
]_ b
1 9,</w>
1 5,</w>
8] _edx,</w>
s b
test _r13
d 8,</w>
mov_rdi_qword_ptr_[r ax],</w>
cmp _dl
_0x1 6,</w>
6 8
movdqa _xmm
mov_ecx_dword_ptr_[r sp+0x
1 f,</w>
jmp _0xffffffff
mov_qword_ptr_[rsp+0x1 0]_rax,</w>
mov_qword_ptr_[r bx+0x1
mov_edi _3,</w>
6 5
je_ 9,</w>
mov_dword_ptr_[rsp+0x 3
_0x f,</w>
jmp_0xffffffffffffff 6
_0x a
1 7,</w>
je_0x a,</w>
call_0x b
call_0xfffffffffffff e
e 8],</w>
mov_rdi_qword_ptr_[r ip+0x
1 c],</w>
si +0x1
7 f
d 8],</w>
ax +4],</w>
9 c,</w>
add_rsp _0x10,</w>
_qword_ptr_[r ip+0x
pxor _xmm0_xmm0,</w>
mov_rax_qword_ptr_[rbp-0x 48],</w>
sp+ 4],</w>
jmp _0x4
mov_rdx_qword_ptr_[r ip+0x2
add _edx
lea _r15
movsxd_rax _dword_ptr_[r
call_0xffffffffffff 0
1 a,</w>
shl _rdx
test _r12d_r12d,</w>
c ]_0,</w>
9 d,</w>
mov_eax _ebx,</w>
jmp_0xffffffff fff
test _dl
xor _r13d_r13d,</w>
mov_qword_ptr_[r bx
mov_rax_qword_ptr_[rbp-0x 30],</w>
v t
c vt
9 b,</w>
9 4,</w>
add_r bp
9 7,</w>
je_0x d
bp+0x 10],</w>
4 8,</w>
9 2,</w>
e _8,</w>
f 4,</w>
_0x2 f,</w>
mov_byte_ptr_[r bp-0x
9 f,</w>
9 a,</w>
_0x1 0
w ,</w>
9 9,</w>
4 2
lea_rdx_[r bp-0x
mov_qword_ptr_[r ip+0x
9 6,</w>
je_0x c,</w>
push _0,</w>
call_0xffffffffffff 8
mov_rdx_qword_ptr_[r ax],</w>
jne_0xffffffffffffff b
9 1,</w>
mov_rdx_qword_ptr_[r ax+0x
9 5,</w>
9 e,</w>
mov_rdi_qword_ptr_[r bx+0x
9 3,</w>
mov_dword_ptr_[r ax]
c 8,</w>
b e
mov_rbx _qword_ptr_[rsp+0x
5 0,</w>
test _ebp_ebp,</w>
si l,</w>
3 c,</w>
mov_rdi_qword_ptr_[r ip+0x20
si +
mov_r12 _rdi,</w>
_0x1 f,</w>
mov_rcx _rbx,</w>
call_0x 7
1 ]_0,</w>
]_b yte_ptr_[r
14 +0x1
mov_qword_ptr_[r dx
mov_qword_ptr_[rsp+0x 7
cmp _r12d
mov_rax_qword_ptr_[r sp],</w>
mov_qword_ptr_[r di
3 d,</w>
fff ,</w>
c b
mov_rax_qword_ptr_[r bx],</w>
call_0xffffffffffff 9
5 8,</w>
je_0x b,</w>
sb _byte_ptr_[rsi
sb_byte_ptr_[rsi ]_byte_ptr_[r
sb_byte_ptr_[rsi]_byte_ptr_[r di],</w>
rep e_
repe_ cmp
repe_cmp sb_byte_ptr_[rsi]_byte_ptr_[rdi],</w>
13 +0x1
mov_edx _2,</w>
c d
4 c],</w>
cmp _edi
jmp_0xffffffffffffff 4
sub_rsp _0x20,</w>
_0xffff ff
3 3,</w>
3 5,</w>
e f
di +0x10],</w>
3 4,</w>
3 7,</w>
mov_rdi_qword_ptr_[r sp+0x10],</w>
mov_rax_qword_ptr_[r ax+0x10],</w>
6 8,</w>
2 c,</w>
3 9,</w>
8 8,</w>
3 6,</w>
cmp_qword_ptr_[r sp+0x
jne_0x a
cmp_dword_ptr_[r sp+0x
mov_rdx _r14,</w>
or _dword_ptr_[r
e b,</w>
b a
cmp _rcx
3 f,</w>
b 8,</w>
3 2,</w>
3 1,</w>
test _r14
je_0x f,</w>
mov_qword_ptr_[r bp
]_ -1,</w>
cmp_rdi _rax,</w>
cmp_rax _qword_ptr_[rbp-0x
mov_rcx_qword_ptr_[r sp+8],</w>
3 b,</w>
3 a,</w>
e f,</w>
test _r15
mov_r14 _rax,</w>
mov_dword_ptr_[rsp+0x 2
mov_eax_dword_ptr_[r bx+0x
2 d,</w>
mov_qword_ptr_[rsp ]_rax,</w>
2 4,</w>
+rdx *
+rdx ],</w>
cmp _r12
7 4
d a
mov_rsi_qword_ptr_[r ax],</w>
3 e,</w>
- 8],</w>
8] _rsi,</w>
sp+0x1 c],</w>
and _ecx
2 e,</w>
mov_qword_ptr_[rsp+0x2 8]_rax,</w>
_0x b,</w>
mov_eax _r12d,</w>
mov_r10 _qword_ptr_[r
mov_rcx _r12,</w>
xor _r15d_r15d,</w>
2 1,</w>
mov_r12 _rsi,</w>
f 0,</w>
2 9,</w>
2 6,</w>
4] _edx,</w>
sp+0x1 0
movzx _edi
call_0x 6
test_r13 _r13,</w>
7 8
test_r 8d_r8d,</w>
lea_rdi _[rax
jne_0xffffffffffff fc
_ ax,</w>
5 4],</w>
d 0,</w>
2 5,</w>
je_0x e,</w>
mov_rcx _rdx,</w>
e 9,</w>
jne_0x c,</w>
add_rsp _0x28,</w>
e 2,</w>
mov_dword_ptr_[r bp+0x
_0x d,</w>
2 b,</w>
mov_r15 _rax,</w>
7 6
2 a,</w>
sp+0x1 4],</w>
call_0x 5
sete _al,</w>
2 3,</w>
dx +8],</w>
2 2,</w>
e 6,</w>
b _xmm
xor _r14d_r14d,</w>
4 4],</w>
mov_rsi_qword_ptr_[r sp+8],</w>
+rcx ],</w>
mov_dword_ptr_[rsp+0x c]
movzx_edx _word_ptr_[r
call_0xffffffffffff 6
mov_byte_ptr_[r ax]
2 f,</w>
mov_rdi_qword_ptr_[r sp+0x18],</w>
mov_esi _0x2
e d,</w>
add_eax _1,</w>
mov_ecx _1,</w>
mov_r14 d_eax,</w>
mov_eax_dword_ptr_[r ip+0x
si -0x
ja _0x1
2 7,</w>
mov_qword_ptr_[r ax+
e 3,</w>
mov_rax_qword_ptr_[rbp-0x 40],</w>
add_rsp _0x20,</w>
d c
test _r13d_r13d,</w>
lea_edx _[r
lea_rdx _[rax+1],</w>
mov_rax _rbx,</w>
8] _ecx,</w>
add _r12
e 5,</w>
mov_rdi_qword_ptr_[r bx],</w>
f 8,</w>
di l,</w>
call _rax,</w>
4 ]_1,</w>
mov_dword_ptr_[r ip+0x20
jmp _7,</w>
_0x4 8,</w>
12 +8],</w>
d b
e 1,</w>
mov_rdi _rdx,</w>
je_0x1 2,</w>
7 0,</w>
jmp _0x5
7 5
je_0x1 0
f 8],</w>
p and
ne g
d 2,</w>
lea_r12 _[r
f 6,</w>
mov_eax _ebp,</w>
movsxd _rcx
e 7,</w>
call_0xfffffffffff ea
_xmm 1,</w>
ja _0xffffffffffffff
7 8,</w>
mov_qword_ptr_[r 12
pcmp g
pcmpg t
call_0x c
movsxd_rdx _eax,</w>
pcmpgt b_xmm
_xmm 0,</w>
mov_rax_qword_ptr_[r di+0x
o t
n ot
mov_rax_qword_ptr_[r di],</w>
]_ 3,</w>
jmp_0xffffffffffffff 0
di l
e c,</w>
movsx _eax
test _r14d_r14d,</w>
call_qword_ptr_[r ax+0x
jne_0xffffffffffffff a
mov_qword_ptr_[rax] _rdx,</w>
00 00,</w>
mov_esi _0,</w>
b 0,</w>
2 8]_0,</w>
e e,</w>
8 1,</w>
je_0xffffffffffff fc
mov_rax_qword_ptr_[rsp+0x 28],</w>
mov_r13 d_eax,</w>
+rax* 4],</w>
mov_qword_ptr_[r ip+0x20
cx ],</w>
mov_edi _0x6
e 4,</w>
pop _rdx,</w>
mov_eax_dword_ptr_[r ip+0x20
cmp _r14d
8 d,</w>
call_0xfffffffffff 9
mov_rdi_qword_ptr_[r bp-0x
je_0x d,</w>
dx +
d ec
sd _xmm0
d f,</w>
lea_rcx _[rsp+0x
mov_esi _0x5
a h
je_0x 12
jmp _rax,</w>
mov_rdi_qword_ptr_[r sp],</w>
mov_r10d _dword_ptr_[r
mov_ebx _dword_ptr_[r
_0x5 8,</w>
cmp_eax _2,</w>
_ -0x
_r10d _r10d,</w>
c l,</w>
set a
si l
_b l
je_0x1 1,</w>
_r bp
mov_rsi_qword_ptr_[r bp-0x
8 7,</w>
cmp _r13d
_xmm 3
mov_dword_ptr_[r ax+0x1
mov_esi _dword_ptr_[rsp+0x
_qword_ptr_[rsp+0x 20],</w>
8 9,</w>
movzx_esi _byte_ptr_[r
mov_rax_qword_ptr_[r ax+0x18],</w>
6 d,</w>
8 a,</w>
shl_rax _4,</w>
8 6,</w>
sub _rcx
8 b,</w>
8 c,</w>
lea_rbx _[r
mov_qword_ptr_[rsp+0x1 0]
0] _edx,</w>
test_r15 _r15,</w>
8 f,</w>
8 e,</w>
mov_ecx _0xffffffff,</w>
xor _eax
6 c,</w>
f e,</w>
test_r14 _r14,</w>
_0xffff 86
mov_dword_ptr_[rsp+0x 4
sub_eax _1,</w>
lea_rbp _[r
mov_r8d _eax,</w>
cmp _word_ptr_[r
cmp_r si
call_0x1 0
cmp _r13
8 5,</w>
5 c],</w>
mov_rax_qword_ptr_[rsp+0x 20],</w>
test_dl _dl,</w>
add _qword_ptr_[r
c d,</w>
5 d,</w>
f d,</w>
4 f,</w>
di +
8 3,</w>
mov_edi _7,</w>
sub_rsp _0x28,</w>
call_0xfffffffffffe d
lea_r13 _[r
8 4,</w>
lea_r8 _[r
6 1,</w>
lea _esi
5 5,</w>
pcmp e
pcmpe q
5 c,</w>
push _rdx,</w>
+rax* 8],</w>
_0x6 8,</w>
6 3,</w>
] _edx,</w>
5 3,</w>
f 7,</w>
call_0x d
sub_rsp _0x
cmp_rdx _rax,</w>
cmp_r bp
4 c,</w>
5 6,</w>
mov_edx _0,</w>
pand _xmm
mov_qword_ptr_[rsp+0x 8
mov_ecx _0x1
mov_rdx_qword_ptr_[r sp+8],</w>
call_0x 8
6 5,</w>
4 1,</w>
mov_qword_ptr_[rbp-0x 5
add _ecx
mov_edx_dword_ptr_[r ax+0x
4 d,</w>
6 9,</w>
5 a,</w>
b d
b f,</w>
5 1,</w>
call_0xfffffffffffff 0
5 b,</w>
5 4,</w>
test _r15d_r15d,</w>
4 4,</w>
5 e,</w>
5 9,</w>
6 e,</w>
5 f,</w>
4 2,</w>
je_0x1 8,</w>
mov_ecx _0x4
call_0xfffffffffff 8
6 4],</w>
mov_dword_ptr_[rbp-0x 4
4 5,</w>
f 9,</w>
15 +8],</w>
6 b,</w>
6 7,</w>
mov_rax_qword_ptr_[rax+0x 70],</w>
mov_byte_ptr_[r ax]_0,</w>
f a,</w>
f b,</w>
lea_r9 _[r
7 f,</w>
f 1,</w>
7 d,</w>
6 6,</w>
_0x e,</w>
4 9,</w>
8 2,</w>
6 2,</w>
4 6,</w>
* 4
f 5,</w>
4 b,</w>
5 2,</w>
4 e,</w>
6 f,</w>
6 c],</w>
7 5,</w>
b c
f 2,</w>
mov_edx _0x3
6 a,</w>
f c,</w>
7 9,</w>
_xmm0_xmm 1,</w>
13 +8],</w>
call_0xffffffffffff 4
mov_rcx _rbp,</w>
4 a,</w>
8] _r9,</w>
add _ebx
mov_qword_ptr_[rbp-0x1 8]_rdi,</w>
d e,</w>
si 2
cvt si2
_qword_ptr_[rsp+0x 28],</w>
7 2,</w>
f 3,</w>
b d,</w>
5 7,</w>
4 3,</w>
mov_rdx_qword_ptr_[r bx+0x
7 3,</w>
call_0xfffffffffffe c
7 c,</w>
c f,</w>
jg _0xffffffffffffff
movsxd _rsi
-0x 18],</w>
7 e,</w>
mov_rsi _rsp,</w>
4 7,</w>
7 1,</w>
call_0xfffffffffffe e
7 b,</w>
lea_r14 _[r
_xmm1 _xmmword_ptr_[r
7 4,</w>
je_0x1 0,</w>
mov_rdx _r15,</w>
add _r13
and_eax _1,</w>
7 a,</w>
movsxd_rdx _edx,</w>
a 0,</w>
14 +8],</w>
jg e_0x
7 6,</w>
mov_r8d _dword_ptr_[rsp+0x
movabs _rax
b 9,</w>
jmp_0xffffffffffff d
]_ cl,</w>
jmp_0xfffffffffffff ea
sub _ecx
_dword_ptr_[r ip+0x
mov_qword_ptr_[rbp-0x1 8]_rax,</w>
d b,</w>
* 8+0x
di -0x
jmp _0x6
3 8]_0,</w>
setne _al,</w>
c c,</w>
mov_rdi_qword_ptr_[r bp+0x
mov_qword_ptr_[rbp-0x1 0]_rax,</w>
movzx _r8d
_xmm 2,</w>
movsd _xmm0
3 0]_0,</w>
d c,</w>
ax+0x 20],</w>
c e,</w>
mov_rcx _r13,</w>
7 7,</w>
jne_ 9,</w>
mov_rsi_qword_ptr_[r sp+0x10],</w>
pcmpeq b
bp +
c 2,</w>
b 5,</w>
mov_rdi_qword_ptr_[rsp+0x 20],</w>
mov_eax _ecx,</w>
je_0x1 6,</w>
test _r8
mov_qword_ptr_[rsp+0x2 0]_rax,</w>
j e_8,</w>
mov_qword_ptr_[r cx
b 7,</w>
_0x2 d,</w>
c 7,</w>
c 9,</w>
b c,</w>
mov_rdi _rcx,</w>
c a,</w>
b 4,</w>
b 6,</w>
3 9
] _dl,</w>
_dword_ptr_[r ip+0x2
6 8]_0,</w>
add _dword_ptr_[rbp-0x
c 5,</w>
c 1,</w>
shl _eax
c 4,</w>
mova ps
call_0xffffffffffff ea
8] _rbx,</w>
b 2,</w>
c 6,</w>
je_0x1 5,</w>
]_ dx,</w>
1 1],</w>
c 3,</w>
je_0x1 3,</w>
b a,</w>
b b,</w>
mov_r12 _rdx,</w>
xor_r bx
mov_r8 _rax,</w>
d 6,</w>
call_0xffffffffffff 5
w a
mov_qword_ptr_[rsp+0x 9
_0x2 2,</w>
d a,</w>
add_rdx _rax,</w>
wa p
bs wap
mov_dword_ptr_[rsp+ 8]
]_xmm 1,</w>
add_rsp _0x
_b l,</w>
shr _eax
mov_dword_ptr_[r bx
lea_rsi_[rip+0x 4
b 1,</w>
mov_rsi_qword_ptr_[r sp+0x18],</w>
12 +0x10],</w>
mov_word_ptr_[r sp+0x
b 3,</w>
b e,</w>
c b,</w>
bx +1],</w>
xor_rbx _qword_ptr_fs:[0x28],</w>
mov_rax _rcx,</w>
ja _0xffffffffffff
je_0x1 4,</w>
mov_qword_ptr_[r di+0x
movsxd _rdi
add _r14
shr _edx
d d,</w>
2 0]_rax,</w>
mov_rax_qword_ptr_[r bp],</w>
lea_rax_[r ip-0x
test_r 9d_r9d,</w>
mov_edi_dword_ptr_[r ax],</w>
mov_dword_ptr_[r ax
call_0xfffffffffffe b
mov_rcx_qword_ptr_[r ip+0x2
d 4,</w>
0] _r8,</w>
ax+0x 28],</w>
sub_rdx _rax,</w>
] _rdx,</w>
d 7,</w>
8 _xmm
call_0xfffffffffff 7
si +8],</w>
mov_edi _ebp,</w>
mov_edi _ebx,</w>
cmp _r14
rep _
lea_rsi_[rip+0x 2
je_0x1 7,</w>
a 8,</w>
mov_eax_dword_ptr_[r bp+0x
d 1,</w>
mov_rdx _rcx,</w>
je_0x1 b,</w>
_0x7 f,</w>
_0x1 000,</w>
d 3,</w>
cmp _cl
d 5,</w>
d 9,</w>
je_0x1 a,</w>
0 ]_1,</w>
bx +r
mov_dword_ptr_[rsp+0x 5
mov_r11 _qword_ptr_[r
mov_edi _2,</w>
cmp_qword_ptr_[r bx+0x
mov_esi _2,</w>
00 0
pop _rcx,</w>
mov_rax_qword_ptr_[rbp-0x 68],</w>
js _0x1
lea_edx _[rax
mov_qword_ptr_[r 13
mov_rbx _rdx,</w>
mov_byte_ptr_[r dx
mov_rcx_qword_ptr_[r sp+0x18],</w>
or _edx
8 70
sub _rsi
8] _r8,</w>
je_0x1 d,</w>
_0x5 0,</w>
mov_rdi _rsp,</w>
mov_ecx _edx,</w>
mov_rax _r12,</w>
15 +0x10],</w>
cmp _r15d
add _r15
cmp _r15
jb _0xffffffffffffff
mov_qword_ptr_[rsp+0x3 8]_rax,</w>
bx+0x 20],</w>
r o
mov_rax_qword_ptr_[rax+0x 20],</w>
jmp _3,</w>
_qword_ptr_[rsp+0x 30],</w>
mov_dword_ptr_[r bx+0x1
mov_esi _edx,</w>
bx+0x 28],</w>
lea _edi
_0x7 8,</w>
je_0x1 c,</w>
f 2
7 4],</w>
1 0]_0,</w>
ax+0x 4
_r11d _r11d,</w>
mov_r11d _dword_ptr_[r
add_rsp _0x38,</w>
mov_dword_ptr_[r ax+
mov_r13 _rsi,</w>
jne_0x 10
mov_rdi_qword_ptr_[r sp+0x1
lea_edx _[rax+1],</w>
mov_edi _dword_ptr_[rsp+0x
mov_rbp _rdx,</w>
bp- 4],</w>
jne_0xffffffffffff fb
_0x3 a,</w>
mov_edx _r12d,</w>
shr _rax
mov_edi _0x5
mov_qword_ptr_[r 12+0x
mov_dword_ptr_[r bp-
test_ dil
call_0xfffffffffffe f
jb e_0xffffffffffffff
_xmm2 _xmmword_ptr_[r
mov_rdi_qword_ptr_[rsp+0x 28],</w>
ro l
dx +r
mov_rsi_qword_ptr_[r ip+0x2
mov_rdx _rsi,</w>
movsxd_rdx _dword_ptr_[r
jne_0x1 3,</w>
test _cl
mov_r13 _rdi,</w>
jb e_0xffffffffffff
mov_rax_qword_ptr_[rsp+0x 38],</w>
5a 4],</w>
add_eax _edx,</w>
mov_rdi _rsi,</w>
]_xmm 2,</w>
mov_rax_qword_ptr_[rsp+0x 30],</w>
and _rax
9 c],</w>
lea_rsi_[rip+0x a
di ]
+ 8]_rax,</w>
_0xffff 870
je_0x1 9,</w>
mov_qword_ptr_[rsp ]_0,</w>
mov_esi _ebp,</w>
r or
mov_r8d _1,</w>
mov_edx _0x5
- 4],</w>
*4 +0x
add_rbx _1,</w>
mov_rax_qword_ptr_[rbp-0x 1
movzx_ecx _word_ptr_[r
p al
pal i
pali g
palig n
palign r
lea_rax _[rax
cx ,</w>
movzx_eax_byte_ptr_[r bp-0x
and _esi
_ sil,</w>
mov_qword_ptr_[rbp- 8]_rdi,</w>
_0x4 00,</w>
a b,</w>
mov_qword_ptr_[rsp+0x3 0]_rax,</w>
+rdx *4],</w>
mov_esi _0x
jne_ 7,</w>
mov_qword_ptr_[r bx+
_ dil,</w>
c] _edx,</w>
add_rax _qword_ptr_[r
bp +r
mov_dword_ptr_[rsp ]
jmp _0x7
mov_eax_dword_ptr_[rsp+0x c],</w>
cmp_eax _0x1
mov_edx_dword_ptr_[r ip+0x2
_0x8 0
call_0x e
mov_rbx_qword_ptr_[r ip+0x2
movdqu _xmm0_xmmword_ptr_[r
mov_rsi_qword_ptr_[r sp],</w>
mov_qword_ptr_[rbx ]_rax,</w>
lea_rsi_[rip+0x 7
mov_r12d _dword_ptr_[r
_qword_ptr_[rsp+0x 38],</w>
3 4]
cmp_rax _-1,</w>
bx +4],</w>
lea_rdi_[rip+0x 2
lea_rsi_[rip+0x 3
a 5,</w>
cx +r
test_byte_ptr_[r ax+0x1
mov_edx _0xa,</w>
mov_rsi_qword_ptr_[rsp+0x 20],</w>
mov_eax _0x4
mov_edi _0xa,</w>
mov_r9 _rax,</w>
test_ ah
mov_esi _0x6
mov_esi _ebx,</w>
lea_r13 _[rsp+0x
call_0xffffffffff e
mov_rdx_qword_ptr_[r sp+0x18],</w>
je_0xffffffffffff fb
lea_rsi_[rip+0x 5
9 4],</w>
mov_qword_ptr_[rbp-0x 6
mov_rax_qword_ptr_[r 15+0x
lea_rdi_[rax -0x18],</w>
mov_dword_ptr_[r 12
mov_dword_ptr_[r dx
]_ 5,</w>
s k
mov m
movm sk
7 c],</w>
mov_byte_ptr_[r sp+0x1
lea_rax_[rip+0x 2
mov_dword_ptr_[r ax]_0,</w>
cx +0x1
p movmsk
pmovmsk b
c k
* 2],</w>
lea_rsi_[rip+0x 6
1 8]_0,</w>
a 4,</w>
2 +
mov_edx_0x4 0
mov_qword_ptr_[rsp+ 8]_0,</w>
mov_r13 _rdx,</w>
a 1,</w>
p or
_r8 b,</w>
movzx _ebx
lea _r10
mov_ebp _dword_ptr_[r
je_0x1 e,</w>
mov_ecx_dword_ptr_[r bp-0x
c ]_1,</w>
8 4],</w>
cmp_edx _1,</w>
call_0x 9
sub_rsp _0x38,</w>
cmp_r 8d
a c,</w>
sub_rsp _0x30,</w>
_0xfffffff e,</w>
mov_rax_qword_ptr_[rbp-0x 50],</w>
q _qword_ptr_[r
a 3,</w>
test _bl
di +0x18],</w>
pop _rax,</w>
mov_rcx_qword_ptr_[r ax],</w>
mov _eax_eax,</w>
mov_rdx_qword_ptr_[r sp+0x10],</w>
jne_0x1 0,</w>
mov_qword_ptr_[rsp+0x a
mov_qword_ptr_[r 15+0x
mov_dword_ptr_[rsp+0x1 0]
st o
a a,</w>
mov_rsi _rdi,</w>
_0x1 00,</w>
2 8]_rax,</w>
13 +0x10],</w>
a d,</w>
si +0x10],</w>
mov_edi _0,</w>
_r12 b,</w>
add_rax _0x10,</w>
lea_ecx _[r
mov_edx _0x6
pop _rsi,</w>
jne_0x b,</w>
a 6,</w>
lea_r15 _[r
jne_0x1 1,</w>
14 ]
mov_qword_ptr_[rsp+0x2 0]
rep_ sto
je_0x2 0,</w>
mov_dword_ptr_[rsp+0x 20]
12 +r
mov_rdx_qword_ptr_[r sp],</w>
shl_rdx _3,</w>
ja _0x
mov_qword_ptr_[rbp-0x 20]
mov_rdx _rsp,</w>
call_0xffffffffffffe d
je_0x1 f,</w>
a f,</w>
jne_0x 12
mov_r9d _dword_ptr_[rsp+0x
_0x2 e,</w>
mov_rax_qword_ptr_[rbp-0x 2
bp l,</w>
add_rax _rcx,</w>
8 +8],</w>
mov_rax_qword_ptr_[rax+0x 38],</w>
bp+0x 18],</w>
jne_0x d,</w>
mov_dword_ptr_[rsp+0x c]_eax,</w>
2 ]_0,</w>
a e,</w>
jne_0x a,</w>
a 9,</w>
cmp_eax _dword_ptr_[rbp-0x
10 _xmm
mov_rax_qword_ptr_[r 14+0x
mov_qword_ptr_[r ax]_0,</w>
a 2,</w>
movzx_edi _byte_ptr_[r
add _ebp
3 0]
4 0]_0,</w>
mov_dword_ptr_[rsp+ 4]
a 7,</w>
]_xmm 4,</w>
shl_rax _3,</w>
call_0xfffffffffffe 0
push _qword_ptr_[r
call_0xffffffffffff dd
8 c],</w>
test _r10d_r10d,</w>
movdqu _xmmword_ptr_[r
jne_0x e,</w>
mov_edx _ebx,</w>
mov_rdi_qword_ptr_[r bp],</w>
mov_rcx _r14,</w>
p d
mov_ebx _1,</w>
mov_rax_qword_ptr_[rbp-0x 60],</w>
di ]_rax,</w>
_0x1 4,</w>
movsd _qword_ptr_[r
15 +
call_0xffffffffffffe c
lea_rdx_[rax *8],</w>
cmp_rax _qword_ptr_[r
lea_ecx _[rdx
sar _eax
ffff fff,</w>
cmp_edx _eax,</w>
test_r8 _r8,</w>
cmp_rax _rdx,</w>
mov_rax_qword_ptr_[rbp-0x 10
je_0x2 2,</w>
mov_dword_ptr_[r di+0x
call_0xffffffffffffe 0
mov_qword_ptr_[rsp+0x1 0]_0,</w>
c 9
test _eax
lea_r12 _[rsp+0x
mov_rax_qword_ptr_[r 12+0x
+rax* 2],</w>
movzx _r9d
4 3
mov_qword_ptr_[rsp+0x1 8]_0,</w>
call_0xffffffffffff 3
2 ]
ja _0x2
c] _esi,</w>
cmp_qword_ptr_[r bp-
mov_r12d _1,</w>
mov_rdx_qword_ptr_[rbp-0x 18],</w>
14 +0x10],</w>
jne_0x 13
]_xmm 3,</w>
mov_dword_ptr_[r bp
jg _0xffffffffffff
mov_qword_ptr_[r dx+0x
a b
je_0x2 1,</w>
lea_rax_[r dx
cmp_ ax
mov_rdi_qword_ptr_[r bx+8],</w>
mov_rdi_qword_ptr_[rsp+0x 30],</w>
mov_rax_qword_ptr_[rbp-0x 78],</w>
o ck
l ock
10 10
o m
lea_rcx_[r bp-0x
call_0xffffffffffffe b
je_0x2 5,</w>
seta _al,</w>
di ]_0,</w>
c om
jl e_0xffffffffffffff
mov_rax_qword_ptr_[rbp-0x b8],</w>
2 8]
ax+0x 30],</w>
mov_edi _6,</w>
add_rsp _0x30,</w>
add_ebx _1,</w>
a d
jne_0xffffffffffff fa
mov_rax_qword_ptr_[rsp+0x 40],</w>
mov_edx _ebp,</w>
mov_edx_dword_ptr_[r ax],</w>
cmp_byte_ptr_[r bp-0x
a c
di +r
shr _ecx
mov_edx _4,</w>
bp l
mov_rdi _r8,</w>
mov_dword_ptr_[r 15+0x
lea_rbp _[rsp+0x
- 2],</w>
com i
mov_qword_ptr_[rsp+0x4 0]_0,</w>
mov_esi _r12d,</w>
4] _ecx,</w>
0 8,</w>
bx ]_0,</w>
call_0xfffffffffff 6
mov_qword_ptr_[rsp+0x2 0]_0,</w>
_0x ff,</w>
1 9],</w>
mov_rcx_qword_ptr_[r ip+0x20
movaps_xmmword_ptr_[r bp-0x
cmp _r8
mov_dword_ptr_[rsp+ 8]_eax,</w>
mov_qword_ptr_[r si
dx +0x10],</w>
cmp_dword_ptr_[r ip+0x2
5 0]_0,</w>
call_0xffffffffffffe e
4] _edi,</w>
]_xmm 5,</w>
je_ 6,</w>
9 +0x
je_0x2 a,</w>
mov_dword_ptr_[r si
mov_rax _rsi,</w>
add _esi
5 9
xor _rdx
0 1,</w>
mov_rax _rbp,</w>
mov_qword_ptr_[rsp+0x4 8]_rax,</w>
je_0x2 8,</w>
13 +r
je_0xffffffffffff fa
add_rdx _1,</w>
cmp_byte_ptr_[r sp+0x
mov_edx _r13d,</w>
s q_qword_ptr_[r
sq_qword_ptr_[r di]_rax,</w>
_r13 b,</w>
rep_sto sq_qword_ptr_[rdi]_rax,</w>
mov_rsi_qword_ptr_[rsp+0x 28],</w>
jne_0x 14
mov_r10d _dword_ptr_[rsp+0x
_qword_ptr_[rsp+0x 40],</w>
mov_eax _0x1
8] _rbp,</w>
mov_edx_dword_ptr_[r bx+0x
lea_esi _[r
cmp_eax _3,</w>
mov_dword_ptr_[rsp+0x 6
20 0],</w>
14 +r
sub _ebx
lea_rbx _[rsp+0x
mov_rax_qword_ptr_[r sp+0x1
_xmm1_xmm 0,</w>
l dq
cmp_eax _dword_ptr_[r
sub_edx _eax,</w>
je_0x3 9,</w>
s s
mov_ecx _0,</w>
je_0x2 3,</w>
sub_rsp _0x1
+rdx *8],</w>
mov_qword_ptr_[rbp-0x 7
or _ecx
test_cl _cl,</w>
14 ]_0,</w>
jmp_0xfffffffffffff dd
mov_r13d _dword_ptr_[r
_d word_ptr_fs:
6 9
test_ sil
cmp_eax _0xffff86
15 +0x18],</w>
_xmm 4
0] _rbx,</w>
lea _r11
lea_rdx_[r ip-0x
c e
mov_qword_ptr_[rsp+0x5 8]_rax,</w>
lea_rsi_[rip+0x b
cmp_qword_ptr_[rbp- 8]_0,</w>
_0xfffffffffffffff 0,</w>
mov_rax_qword_ptr_[rbp-0x 4
]_ sil,</w>
mov_qword_ptr_[r 13+0x
8] _r12,</w>
lea_r8 _[rsp+0x
lea_rsi_[rip+0x 10
mov_eax _r13d,</w>
mov_qword_ptr_[rsp+0x b
sete _dl,</w>
imul _rax
_0x8 8,</w>
mov_eax_dword_ptr_[r di+0x
mov_eax_dword_ptr_[r bp-4],</w>
_ x
mov_rdi_qword_ptr_[rsp+0x 38],</w>
lea_rcx_[r dx
call_0xffffffffffff 2
15 +r
jne_0x1 2,</w>
lea_rsi_[rip+0x d
add_rax _8,</w>
mov_r14d _dword_ptr_[r
_0x2 00,</w>
ax *8+0x
14 +
mov_rsi_qword_ptr_[r bx],</w>
je_0x2 4,</w>
_qword_ptr_[r sp+8],</w>
movdqa _xmm1_xmmword_ptr_[r
je_0x2 9,</w>
cmp_qword_ptr_[r ax+0x
je_0x2 6,</w>
lea_eax_[r dx
mov_eax_dword_ptr_[r ax+0x1
je_0x2 d,</w>
lea_r14 _[rsp+0x
0 a,</w>
mov_rax_qword_ptr_[r 13+0x
mov_rax_qword_ptr_[r bx+8],</w>
mov_rdi_qword_ptr_[rsp+0x 40],</w>
add _rax_rax,</w>
20 ]_1,</w>
jne_0x 15
3 0]_rax,</w>
]_ cx,</w>
8] _r10,</w>
mov_eax_dword_ptr_[rbp-0x 14],</w>
lea_rsi_[rip+0x 8
_0x1 1,</w>
call_0xfffffffffff dd
mov_rax_qword_ptr_[rbp-0x 88],</w>
mov_edi_dword_ptr_[r ip+0x2
mov_ecx _r12d,</w>
]_xmm 6,</w>
n e_
lea_rsi_[rip+0x 14
add _r10
_0x5 c,</w>
0 2,</w>
0] _rdi,</w>
mov_dword_ptr_[rsp+0x1 8]
movsx_eax _al,</w>
_al _0,</w>
movzx_eax _ax,</w>
12 +0x18],</w>
shr _rdx
sbb _al_0,</w>
mov_r14 _rdi,</w>
mov_rdx_qword_ptr_[r bp+0x
mov_esi _4,</w>
test _r11d_r11d,</w>
test_byte_ptr_[r bx+0x
je_0xffffffffffff fff
mov_qword_ptr_[rsp+ 8]_rdx,</w>
call_0xffffffffffffd a
mov_rsi_qword_ptr_[r bx+0x
call_0xffffffffffffe f
mov_rdi_qword_ptr_[r di+0x
mov_qword_ptr_[rbp-0x20] _rsi,</w>
jne_0x1 5,</w>
2 1
mov_dword_ptr_[rsp+0x 7
mov_rdx_qword_ptr_[r bp-8],</w>
si +r
a e
0 5,</w>
mov_rdx_qword_ptr_[r ax+8],</w>
lea_r9 _[rsp+0x
cmp_qword_ptr_[r bp+0x
_0x7 0,</w>
mov_esi_dword_ptr_[r bp-0x
mov_byte_ptr_[r ax+
] _rcx,</w>
4 9
cx +8],</w>
mov_qword_ptr_[rbp-0x 8
13 +
sub _esi
mov_edi _r12d,</w>
_0x8 00,</w>
4 8]_0,</w>
5 3
mov_rdx_qword_ptr_[rsp+0x 20],</w>
u comi
]_xmm 7,</w>
cmp_qword_ptr_[r sp+0x1
mov_qword_ptr_[rbp-0x2 0]_rax,</w>
mov_edi _4,</w>
mov_byte_ptr_[r cx
-0x 10],</w>
movsd _xmm1
0 4,</w>
_0xfffffffffffffff a,</w>
je_0x2 7,</w>
7 9
and _edi
12 +
0 3,</w>
0 6,</w>
mov_rdx _rdi,</w>
mov_esi _3,</w>
mov_rdx_qword_ptr_[rsp+0x 28],</w>
mov_ecx _2,</w>
mov_eax_dword_ptr_[r ax+4],</w>
mov_ebp _1,</w>
mov_rdx_qword_ptr_[r ip+0x
_0x3 d,</w>
mov_rax_qword_ptr_[rsp+0x 48],</w>
mov_qword_ptr_[rdx ]_rax,</w>
cmp_eax _0x2
d e
0 d,</w>
jne_0x1 6,</w>
0 f,</w>
0 e,</w>
mov_rdx_qword_ptr_[r ax+0x10],</w>
jne_0x f,</w>
bp +1],</w>
mov_esi _ecx,</w>
mov_rax_qword_ptr_[r bx+0x10],</w>
jmp _0x8
_xmm 6,</w>
cmp_byte_ptr_[r dx
mov_edx _ecx,</w>
0 9,</w>
0 c,</w>
_ ax
movsxd _rbx
lea_rdi_[rip+0x 20
cmp_rax _1,</w>
call_0xfffffffffffe 7
mov_qword_ptr_[r 14+0x
call_0x f
mov_qword_ptr_[rbp-0x2 8]_rax,</w>
sd _xmm0_xmm1,</w>
mov_qword_ptr_[rsp+0x c
0000 000,</w>
movdqa _xmm0_xmmword_ptr_[r
2 1],</w>
jl e_0xffffffffffff
mov_byte_ptr_[r sp+
0 b,</w>
mov_rax_qword_ptr_[r 12],</w>
_ -
mov_ecx _0x40
3 8]_rax,</w>
_qword_ptr_[rsp+0x 48],</w>
_eax _edx,</w>
mov_rcx_qword_ptr_[r sp+0x10],</w>
b 4
_r9 b,</w>
sar _rax
and_eax _0xfffffff
ax+0x 40],</w>
0 8],</w>
mov_r8_qword_ptr_[r sp+8],</w>
-0x 30],</w>
_r14 b,</w>
a f
b f
cmp_byte_ptr_[r ax]_0,</w>
mov_r8 _rbx,</w>
movabs _rdx
_byte_ptr_[r sp+0x
lea_rbx _[rip+0x
6 0]_0,</w>
cmp_dword_ptr_[r ip+0x
add_rsp _0x1
mov_rax_qword_ptr_[rax+0x 30],</w>
mov_rcx_qword_ptr_[rsp+0x 28],</w>
mov_rcx _r15,</w>
xor_rdx _qword_ptr_fs:[0x28],</w>
10 +0x
cvtsi2 sd_xmm0
add_rsp _0x48,</w>
lea_rcx _[rax
0 7,</w>
add _r12d
_0xffff ,</w>
00 000,</w>
call_0xffffffffffffd 0
mov_rcx_qword_ptr_[r ip+0x
sub_rax _rdx,</w>
sub_rax _1,</w>
24 ]_0,</w>
mov_qword_ptr_[rsp+8] _rsi,</w>
mov_eax _0x6
mov_dword_ptr_[r 12+0x
mov_qword_ptr_[rsp+0x4 8]_0,</w>
6 3
mov_dword_ptr_[rbp-0x 1
mov_edx _8,</w>
mov_rdi_qword_ptr_[r bx+0x10],</w>
movzx_esi _word_ptr_[r
add _r8
14 +0x18],</w>
mov_eax _0x16,</w>
mov_qword_ptr_[r 12+0x1
lea_r12 _[rip+0x
xor_r si
mov_edi_dword_ptr_[r ip+0x
_ bpl,</w>
jne_0x1 4,</w>
call_0xfffffffffffff 7
lea_rsi_[rip+0x c
mov_rax_qword_ptr_[r 13],</w>
movsx _edx
bx ]
mov_ecx _r13d,</w>
1d ],</w>
je_0x2 c,</w>
movzx _ebp
mov_eax_dword_ptr_[r ax+8],</w>
mov_rax_qword_ptr_[rbp-0x a8],</w>
mov_rax_qword_ptr_[rax+0x 28],</w>
mov_r15d _dword_ptr_[r
mov_dword_ptr_[r bx+
lea_edi _[r
jg _0x1
1 6],</w>
test_byte_ptr_[r ax+0x
mov_qword_ptr_[rsp+0x2 8]_0,</w>
mov_rdi_qword_ptr_[r di],</w>
je_0x3 1,</w>
mov_rdx_qword_ptr_[rbp-0x 10],</w>
mov_rdx_qword_ptr_[rbp-0x 28],</w>
mov_dword_ptr_[r cx
24 ]_eax,</w>
mov_esi _r13d,</w>
mov_rax _rdi,</w>
mov_qword_ptr_[rax+ 8]_rdx,</w>
2 2],</w>
je_0x3 0,</w>
mov_qword_ptr_[rsp+ 8]_rcx,</w>
mov_dword_ptr_[r dx+0x
8] _r13,</w>
_0x6 4,</w>
mov_r8 _rbp,</w>
_0x8 000,</w>
2 9],</w>
2 20],</w>
ea ],</w>
1 8]_rax,</w>
14 ]_eax,</w>
mov_byte_ptr_[r ax+0x
mov_qword_ptr_[rsp+0x4 0]_rax,</w>
28 ]_8,</w>
mov_dword_ptr_[rax] _edx,</w>
_0x6 0,</w>
je_0x2 e,</w>
jn e_8,</w>
cmp_r 9d
mov_qword_ptr_[rbp-0x 9
mov_r11d _dword_ptr_[rsp+0x
jne_0x1 8,</w>
mov_qword_ptr_[rbp-0x2 8]_rdi,</w>
lea_rax_[rip+0x 20
28 ]_1,</w>
1 a],</w>
xor_eax _1,</w>
_xmm 5
5 8]_0,</w>
0 0],</w>
c] _ecx,</w>
_0xf 000,</w>
_d h
si +0x18],</w>
lea_rsi_[rip+0x 13
mov_rsi_qword_ptr_[r ip+0x
mov_ecx _ebx,</w>
mov_rcx_qword_ptr_[r bp-8],</w>
_rdx _rax,</w>
c h
and_edx _1,</w>
mov_qword_ptr_[rsp+0x d
_dword_ptr_fs: [r
_0x7 f2
mov_rax_qword_ptr_[rbp-0x 70],</w>
mov_rdx_qword_ptr_[r ip+0x20
je_0x3 2,</w>
mov_r14 _rsi,</w>
mov_qword_ptr_[r ax
mov_eax _r14d,</w>
mov_rsi_qword_ptr_[rsp+0x 30],</w>
f 8
2c ]_eax,</w>
mov_dword_ptr_[r 13+0x
_0x7f2 bb
_rax _rdx,</w>
8d ],</w>
bp+0x 20],</w>
dx +rax],</w>
mov_eax _r15d,</w>
shl _edx
mov_qword_ptr_[rsp+0x3 0]_0,</w>
9d ],</w>
mov_rbx_qword_ptr_[r ip+0x20
test_byte_ptr_[r bp+0x
call_0xffffffffff ee
sub_rsp _0x48,</w>
sub _rbx
y mm
mov_r9 _rbx,</w>
mov_qword_ptr_[rax+0x 20]
js _0x
mov_r8d _0x4
_xmm 4,</w>
call_0xffffffffffffd c
mova pd
mov_r13d _1,</w>
cmp_dword_ptr_[r sp+0x1
xor _r10d_r10d,</w>
je_0x2 b,</w>
fe ],</w>
test_r 9
lea_r15 _[rsp+0x
neg _eax,</w>
ff ],</w>
8] _esi,</w>
mov_r8 _r12,</w>
mov_rdx_qword_ptr_[rbp-0x 20],</w>
xor_rsi _qword_ptr_fs:[0x28],</w>
mov_qword_ptr_[rbp-0x c
20] _eax,</w>
mov_eax _esi,</w>
si+0x 20],</w>
13 +0x18],</w>
mov_dword_ptr_[rbp-0x 2
sub _rdi
imul _eax
]_ 6,</w>
ja _0x3
mov_eax_dword_ptr_[r ax+0x10],</w>
lea_rsi_[r sp+0x10],</w>
3 1],</w>
or _byte_ptr_[r
shl _rsi
e 7
sp +r
jne_0x1 7,</w>
call_0xfffffffffffff 8
je_0x2 f,</w>
c f
8 +0x1
lea_r13 _[rip+0x
mov_ecx _4,</w>
and _dword_ptr_[r
_[rax -1],</w>
mov_qword_ptr_[rsp+0x3 0]
push _rcx,</w>
2 a],</w>
_r15 b,</w>
sp+0x10 0],</w>
cmp_al _0x2
mov_edx_dword_ptr_[r ip+0x
8 9
sub_rsp _0x40,</w>
_0xffff870 3,</w>
1 e],</w>
sub _dword_ptr_[r
test_r9 _r9,</w>
mov_qword_ptr_[rsp+8] _r8,</w>
30 ]_1,</w>
e 5
call_0xffffffffffffc a
di+0x 20],</w>
mov_ebp _esi,</w>
mov_r9d _1,</w>
mov_qword_ptr_[rax+0x1 0]_rdx,</w>
cx +1],</w>
mov_rsi _r8,</w>
mov_rax_qword_ptr_[rsp+0x 50],</w>
mov_rax_qword_ptr_[rbp-0x 80],</w>
jne_0x1 b,</w>
lea_r10 _[r
_xmm1_xmm 1,</w>
mov_dword_ptr_[rsp ]_eax,</w>
mov_esi _0x3
38 ]_1,</w>
mov_rdi_qword_ptr_[r ax+8],</w>
lea_rdx_[rip+0x 2
e 6
movzx_eax_byte_ptr_[r sp+0x
+rax +1],</w>
mov_eax_dword_ptr_[r 15+0x
test_al _1,</w>
mov_eax _2,</w>
mov_r8 _r13,</w>
fd ],</w>
] _rbx,</w>
58 ]_1,</w>
1 7],</w>
_[rax +r
mov_rdi_qword_ptr_[r 12+0x
f 6
a 4],</w>
mov_byte_ptr_[r bx+0x
mov_eax _r8d,</w>
1 b],</w>
mov_esi _0x20,</w>
lea_rbp _[rip+0x
cmp_dword_ptr_[r bx+0x
_0xa 8,</w>
movsx _esi
cmp_ecx _1,</w>
34 ]_4,</w>
mov_rdi _r9,</w>
lea_rdi_[rip+0x 3
8 ]_xmm0,</w>
+ 8]_0,</w>
3 9],</w>
mov_edx _0x7
xor _rdi
call_0x1 a
lea_rdi _[rax+1],</w>
mov_edx _0x10,</w>
movzx _r12d
dx +0x18],</w>
_qword_ptr_[rsp+0x 50],</w>
cvt t
2 si
mov_rax_qword_ptr_[rbp-0x f0],</w>
lea_rsi_[rip+0x 1
movzx _r13d
_0x1 a,</w>
pmovmskb _edx
mov_qword_ptr_[rbp ]_rax,</w>
movzx_r8d _byte_ptr_[r
lea_rdi_[rip+0x 4
jl _0xffffffffffffff
call_0xfffffffffffd 0
b 7
1 f],</w>
add _r13d
cmp_byte_ptr_[r ax+
call_0xfffffffffffd a
mov_r14 _rdx,</w>
movzx_eax_byte_ptr_[r ax+0x
mov_edx _r14d,</w>
lock _x
0] _ecx,</w>
mov_ecx _0x80,</w>
pop _rdi,</w>
call_0xffffffffffffd b
2c ]_0,</w>
jmp _6,</w>
bb ],</w>
add_rsp _0x58,</w>
lock_x add_dword_ptr_[r
dd ],</w>
js _0x2
- 1]
mov_edi_0x4 d
call_0x2 0
mov_edx_dword_ptr_[r bp+0x
8] _r11,</w>
and _r8d
e 4
bx+0x 30],</w>
_0x2 000,</w>
mov_byte_ptr_[r ax
call_0xffffffffffffc 0
add_ebp _1,</w>
jne_0x1 9,</w>
call_0xfffffffffffe 8
mov_edx _3,</w>
mov_eax _edi,</w>
mov_edx _0x8
call_0xffffffffffff bb
mov_rbx_qword_ptr_[r bx],</w>
add _edi
add_rbx _8,</w>
lea_rax_[rsp+0x 20],</w>
je_0x3 8,</w>
jmp_0xfffffffffffff 0
mov_edx _0xffffffff,</w>
3 e],</w>
lea_rsi_[rip+0x 12
mov_qword_ptr_[rbp-0x a
je_0x3 5,</w>
mov_rax_qword_ptr_[rsp+0x 58],</w>
lea _ebx
ja e_0xffffffffffffff
f 5
lea_r 8d
8] _r14,</w>
je_0x3 3,</w>
c 7
2 6],</w>
c mova
_0x fff,</w>
lea_rsi_[r dx
mov_dword_ptr_[rsp+0x1 0]_eax,</w>
cmp_eax _4,</w>
shl_rax _5,</w>
e 8
2+ 1]
mov_ecx _ebp,</w>
mov_byte_ptr_[rax] _dl,</w>
call_0xfffffffffffe 6
xor _edx
7 0]_0,</w>
] _0x4
4 0]_rax,</w>
mov_rdx_qword_ptr_[r dx+0x
call_0xfffffffffff 5
+rax ]_0,</w>
cmp _r9
_byte_ptr_[r di],</w>
je_0x3 7,</w>
sub_rsp _0x58,</w>
mov_rax_qword_ptr_[rbp-0x c8],</w>
b 8
call_0xfffffffffffff 6
12 +1],</w>
mov_rax _r13,</w>
3 2],</w>
cc cc
di+0x 30],</w>
jb _0xffffffffffff
mov_r14d _1,</w>
je_0x3 4,</w>
jne_0x1 a,</w>
mov_qword_ptr_[r 15
sub _r10
_0x1 2,</w>
lea_rax_[r sp+0x1
mov_esi _0xffffffff,</w>
mov_qword_ptr_[rax+0x1 8]_rdx,</w>
1 ]_al,</w>
test_bl _bl,</w>
mov_eax_dword_ptr_[r sp+8],</w>
je_0x3 6,</w>
mov_dword_ptr_[r 13
mov_rcx_qword_ptr_[r sp],</w>
add_rsp _0x68,</w>
mov_byte_ptr_[r ip+0x2
mov_qword_ptr_[r dx+0x1
mov_r15 _rdi,</w>
]_ dil,</w>
movzx _r10d
add _r14d
_ ah
cmp_dword_ptr_[r bp-
cmp_qword_ptr_[r ip+0x2
c 6
2 7],</w>
mov_qword_ptr_[r di+0x1
dx ]_eax,</w>
_ ymm
je_ 5,</w>
9 ]_0,</w>
mov_rdi_qword_ptr_[rsp+0x 48],</w>
call_0xffffffffffffd e
mov_eax_dword_ptr_[rbp-0x 1c],</w>
2 5],</w>
4 1],</w>
3 a],</w>
mov_rax_qword_ptr_[r di+8],</w>
and _ebx
mov_rdx_qword_ptr_[rsp+0x 30],</w>
mov_qword_ptr_[r12 ]_rax,</w>
5 8]_rax,</w>
di +1],</w>
cmp_rbx _rax,</w>
sd _xmm1
cmp_dword_ptr_[r bp+0x
call_0xfffffffffff 0
mov_edi _r13d,</w>
1 0]
mov_esi _0x7
sub_rsp _0x68,</w>
mov_qword_ptr_[rbp-0x b
test_ bpl
c 8]_0,</w>
mov_r12d _edx,</w>
or_eax _edx,</w>
movdqa_xmm1_xmmword_ptr_[r si
si +4],</w>
mov_edi _0x20,</w>
mov_rdi_qword_ptr_[r 12],</w>
push _qword_ptr_[rbp-0x
_ dx,</w>
cmp_ sil
bp +4],</w>
jmp_0xfffffffffffff 8
je_0x3 c,</w>
mov_qword_ptr_[rbp-0x3 8]_rax,</w>
mov_rdx_qword_ptr_[rsp+0x 38],</w>
1 0]_rax,</w>
sd 2si
cvtt sd2si
+rdx* 2],</w>
lea_rsi_[r bp-0x
_qword_ptr_[rsp+0x 58],</w>
cmp_dword_ptr_[r ip+0x20
je_0x3 d,</w>
mov_rsi_qword_ptr_[rsp+0x 38],</w>
mov_eax_dword_ptr_[r 12+0x
2 e],</w>
mov_qword_ptr_[rsp+0x6 8]_rax,</w>
mov_qword_ptr_[rbx+ 8]_rax,</w>
jne_ 6,</w>
mov_dword_ptr_[rbp-0x 47
_0x1 3,</w>
]_ 7,</w>
14 +1],</w>
jns _0xffffffffffffff
mov_qword_ptr_[rsp+0x5 0]_0,</w>
mov_rax_qword_ptr_[r bx+0x1
mov_rax _-0x
+rcx *
a 7
mov_qword_ptr_[rsp+ 8]_rdi,</w>
movzx_edx_byte_ptr_[r ax],</w>
pand_xmm 8_xmm
call_0xfffffffffffff 5
movdqa_xmm 3
mov_r9d _eax,</w>
call_0xfffffffffffd c
p sub
12 0],</w>
mov_rax_qword_ptr_[r bx+0x18],</w>
mov_qword_ptr_[rbp-0x 10
mov_rax_qword_ptr_[r ax+0x1
dx +4],</w>
lea_rsi_[r ip-0x
cmp_dword_ptr_[r ax+0x
3 f],</w>
movsx _edi
mov_rdi_qword_ptr_[rsp+0x 50],</w>
mov_rdx _r8,</w>
+rax* 4
psub b
mov_esi _r14d,</w>
lea_r14 _[rip+0x
call_0xfffffffffffe 9
mov_r9d _4,</w>
i div
movsd_xmm0 _qword_ptr_[r
cmov l
b 6
test_dil _dil,</w>
cmp_eax _0x6
aa aa
mov_ecx _8,</w>
ax+0x 70],</w>
mov_qword_ptr_[r 15+0x1
mov_dword_ptr_[rsp+0x 8
b 4],</w>
shl_rdx _4,</w>
mov_ecx_dword_ptr_[r bx+0x
mov_rax_qword_ptr_[rbp-0x d8],</w>
shl _rcx
2 f],</w>
mov_rdx_qword_ptr_[r bx],</w>
mov_r8 _r14,</w>
] _0x20,</w>
mov_ebx _dword_ptr_[rsp+0x
sub_eax _edx,</w>
call_0xfffffffffffe 4
call_0xffffffffff ed
mov_r12d _esi,</w>
je_0x3 e,</w>
test_sil _sil,</w>
0000 00,</w>
lea_rdx_[rsp+0x 30],</w>
3 5],</w>
2 d],</w>
d f
mov_r12 _rcx,</w>
3 ]_0,</w>
a c],</w>
_r10 b,</w>
mov_rsi_qword_ptr_[r bp+0x
jne_0xffffffffffffffe d,</w>
xor_rdi _qword_ptr_fs:[0x28],</w>
je_0x4 2,</w>
a 8
13 +1],</w>
mov_qword_ptr_[rdi -0x
mov_rax_qword_ptr_[rax+0x 40],</w>
mov_r10 d_eax,</w>
_0x2 7,</w>
movdqa _xmm2_xmmword_ptr_[r
mov_ecx_dword_ptr_[r bp+0x
ax +1],</w>
0] _rbp,</w>
_0x1 c,</w>
2 b],</w>
mov_dword_ptr_[rax -
sar _edx
mov_rdx_qword_ptr_[r ax+0x18],</w>
sub _edi
cmp_eax _0x4
movaps_xmmword_ptr_[rsp+0x 70
or _qword_ptr_[r
si +1],</w>
mov_dword_ptr_[r 14+0x
mov_edx _esi,</w>
e 4],</w>
8] _r15,</w>
call_0xfffffffffffd b
4 8]_rax,</w>
jmp_0xfffffffffffff 7
mov_rcx_qword_ptr_[rsp+0x 20],</w>
50 ]_xmm0,</w>
mov_r15d _1,</w>
_xmm0_xmm 2,</w>
mov_qword_ptr_[rbp-0x1 0]_rsi,</w>
c 8
c 4],</w>
di +4],</w>
1 00
mov_esi _0xa,</w>
d 7
ax -8],</w>
_0x2 4,</w>
mov_ecx _0x5
_xmm 6
20 8],</w>
mov_qword_ptr_[rsp+0x e
2 3],</w>
mov_qword_ptr_[rbp-0x 47
15+0x 20],</w>
test_al _2,</w>
movzx_edi _word_ptr_[r
3 6],</w>
f 4
mov_byte_ptr_[r ax+0x1
_0x3 c,</w>
cmp_rdi _0x6
test_r12 b
] _ecx,</w>
mov_r13 _rcx,</w>
add_rdx _rcx,</w>
b t
mov_ecx _r14d,</w>
cx -0x
call_0xffffffffffffc c
jne_0x1 e,</w>
9 1],</w>
shl_rax _2,</w>
test_byte_ptr_[r di+0x1
+ 3],</w>
call_0x 37
1c 0],</w>
and_eax _0xf000,</w>
mov_qword_ptr_[rbp-0x3 0]_rax,</w>
call_0xffffffffffffd f
movaps_xmmword_ptr_[rsp+0x 60
11 +0x
movaps_xmmword_ptr_[rsp+0x 80
call_0xffffffffff ec
mov_qword_ptr_[rsp+0x5 0]_rax,</w>
mov_ecx_dword_ptr_[r ip+0x2
9 9],</w>
34 ]_eax,</w>
3 7],</w>
lea _r12d
jmp _9,</w>
mov_qword_ptr_[rax+0x 3
mov_rax_qword_ptr_[rbx+0x e0],</w>
ax+0x 38],</w>
34] _0x40,</w>
lea_rdx_[rip+0x 7
add_rbp _1,</w>
mov_rbx_qword_ptr_[r ax],</w>
c 4
mov_dword_ptr_[r si+0x
movaps_xmmword_ptr_[rsp+0x 90
lea_ecx_[rdx -1],</w>
lea_rdx_[r sp+0x10],</w>
xor _ecx
mov_eax_dword_ptr_[rbp-0x c],</w>
call_0x 3a
call_0x 34
movaps_xmmword_ptr_[rsp+0x a0
add_rax _0x20,</w>
mov_rsi_qword_ptr_[r 12],</w>
mov_qword_ptr_[r 14
je_0x4 5,</w>
5 9],</w>
call_0xffffffffffffc d
mov_qword_ptr_[rsp+0x3 8]_0,</w>
jb _0x1
mov_rax_qword_ptr_[r 15],</w>
je_0x3 a,</w>
c 0]_0,</w>
jne_0x 20
movsxd _rbp
mov_rdi_qword_ptr_[r bp+8],</w>
sub _r8
mov_qword_ptr_[rax+ 8]_0,</w>
mov_dword_ptr_[r 15
d 6
mov_rcx _-1,</w>
lea_rdi_[rip+0x a
8] _0x4
cmp_qword_ptr_[r ip+0x
pxor _xmm1_xmm1,</w>
movzx_eax_word_ptr_[r ax],</w>
mov_dword_ptr_[r dx+0x1
9 ]
mov_rax_qword_ptr_[r 14],</w>
movaps_xmmword_ptr_[rsp+0x b0
3 d],</w>
call_0xffffffffffffb a
sub _ebp
mov_qword_ptr_[rsp+0x1 0
mov_byte_ptr_[r bp
set ne_
_xmm1_xmm 2,</w>
mov_byte_ptr_[r si+
r ldq
ps rldq
call_0x 30
mov_r9 _rbp,</w>
mov_rbx_qword_ptr_[r bp-0x
movsx_eax _byte_ptr_[r
mov_esi _0x8
movsxd_rdi _edi,</w>
mov_eax_dword_ptr_[r bx],</w>
je_0x4 0,</w>
b c],</w>
cmp_qword_ptr_[rbp-0x 10]_0,</w>
mov_dword_ptr_[rbp-0x 4a
15 +1],</w>
cmp_rdi _rbx,</w>
ja _0x4
sbb _eax_eax,</w>
cmp_eax _edx,</w>
c c],</w>
bx+ 2],</w>
call_0x 3c
0] _r12,</w>
js _0xffffffffffffff
movzx _r14d
34 ]_0,</w>
+rcx *4],</w>
2 8]_rdx,</w>
mov_r13d _edx,</w>
jne_0x2 2,</w>
mov_rdx_qword_ptr_[rbp-0x 78],</w>
lea_rdi_[r bp-0x
jne_0x1 c,</w>
lea_rsi_[rip+0x 11
mov_dword_ptr_[r di+0x1
jmp_0x1 5,</w>
4] _0xffffffff,</w>
movzx_ebx _byte_ptr_[r
cmov g
mov_eax_dword_ptr_[r sp+0x18],</w>
mov_ebx _edi,</w>
call_0xffffffffffffc b
mov_rax _r8,</w>
jne_0xfffffffffffffff 1,</w>
movzx_edx _dl,</w>
bx+0x1 4],</w>
lea_rsi_[rip+0x e
test _r10
mov_qword_ptr_[rsp+0x3 8]_rcx,</w>
a 4
cmp_qword_ptr_[r sp+
add_edx _1,</w>
mov_rbx _rcx,</w>
13+0x 20],</w>
mov_rax_qword_ptr_[rbp+0x 10],</w>
d 4],</w>
call_0xffffffffffffb 0
lea_rdi_[r bx+0x
jne_0x1 d,</w>
x ch
movsxd_rcx _ecx,</w>
mov_eax_dword_ptr_[rbp-0x 24],</w>
jmp_0x e,</w>
call_0x 3b
5 1],</w>
6 1],</w>
3 3],</w>
movaps_xmmword_ptr_[rsp+0x c0
mov_dword_ptr_[rsp+0x1 8]_eax,</w>
di +rdx
call_0xfffffffffffd e
3 b],</w>
mov_eax_dword_ptr_[r sp+4],</w>
mov_esi_dword_ptr_[r ip+0x2
and _ebp
add _r9
lea_rdi_[r sp+0x10],</w>
jmp_0x c,</w>
je_0x3 b,</w>
jmp_0xffffffffffffff e
mov_ebx _esi,</w>
add_edx _eax,</w>
12+0x 20],</w>
jmp_0x1 2,</w>
mov_rsi_qword_ptr_[r bp],</w>
mov_rax_qword_ptr_[rsp+0x 60],</w>
call_0xfffffffffffe 5
_0x2 0
_0x fff
di+0x 28],</w>
]_ si,</w>
di ,</w>
cmp_byte_ptr_[r ip+0x2
add_r12d _1,</w>
_xmm 7
_r8 w,</w>
mov_rcx _rsi,</w>
mov_rdi_qword_ptr_[rsp+0x 58],</w>
_0x1 9,</w>
je_0x3 f,</w>
bx -1],</w>
d 8
cmp_byte_ptr_[r ax]
movaps_xmmword_ptr_[r di-0x
lea_rdi_[rip+0x 7
mov_qword_ptr_[rsp+0x f
lea_rdi_[rip+0x 6
je_0x4 d,</w>
_0xfffffffffffffff 8,</w>
add_rdx _qword_ptr_[r
je_0x5 d,</w>
or _esi
3c ]_eax,</w>
mov_rbp _rcx,</w>
mov_rax_qword_ptr_[rbp-0x 98],</w>
mov_qword_ptr_[rsp+0x6 0]_0,</w>
mov_rdx _-1,</w>
lea_rsi _[rax
sp -0x
mov_qword_ptr_[r si+0x
cmov be
_0x2 3,</w>
test_r13 b
pcmpeqb _xmm0_xmm1,</w>
test_byte_ptr_[r ip+0x2
lea_rdx_[rip+0x 3
lock_xadd_dword_ptr_[r dx]_eax,</w>
lea_rcx_[rip+0x 2
mov_rdi_qword_ptr_[r 14+0x
test_byte_ptr_[r sp+0x
mov_r9 _rdx,</w>
test_byte_ptr_[r ip+0x
jne_0xfffffffffffffff 0,</w>
cmp _r10
je_0x4 8,</w>
10 1],</w>
z mm
call_0x 38
mov_rax_qword_ptr_[rsp+0x 68],</w>
mov_ecx _0x6
sar _rdx
mov _dword_ptr_fs:[r
ja e_0xffffffffffff
8 +r
shl _rdi
cmp _bl
mov_dword_ptr_[rsp+0x2 8]
and_ecx _1,</w>
jne_0xffffffffffffffe e,</w>
8 ]_2,</w>
lea_rdx_[r di+0x10],</w>
_0x2 c,</w>
cmove _eax
mov_rdx_qword_ptr_[rsp+0x 40],</w>
mov_rax_qword_ptr_[r ax*8+0x
f 4],</w>
cx -1],</w>
cmp_dword_ptr_[r sp+
mov_rcx_qword_ptr_[r si],</w>
mov_eax_dword_ptr_[r ax+0x18],</w>
c] _0xffffffff,</w>
bswap _eax,</w>
add sd
mov_rsi_qword_ptr_[rsp+0x 40],</w>
mov_rcx _rsp,</w>
and_eax _0xffffff
movs s
mov_rcx _r8,</w>
a 6
mov_ecx_dword_ptr_[r ax],</w>
push _rsi,</w>
_0x ff
por _xmm1_xmm
and_eax _2,</w>
jmp_0x1 1,</w>
+rax* 8
u d2,</w>
mov_esi_0x4 00,</w>
mov_ecx_dword_ptr_[r ax+0x
mov_edx _r15d,</w>
5 0]
40 0],</w>
mov_rax_qword_ptr_[rbp-0x 90],</w>
40 ]_1,</w>
mov_esi _6,</w>
_r12 d_eax,</w>
_r11 b,</w>
lea_rdi_[rip+0x 5
lea_rsi_[rip+0x 9
1 10],</w>
cx +0x10],</w>
call_0x 36
mov_qword_ptr_[r cx+0x
_qword_ptr_[rsp+0x 60],</w>
mov_ecx _7,</w>
b 5
call_0x 3d
lea_rsi_[rip+0x 20
_r15d _1,</w>
mov_rcx_qword_ptr_[rsp+0x 38],</w>
mov_dword_ptr_[rbp-0x 1c
lea_rsi_[rip+0x 15
88 88
mov_rdi_qword_ptr_[rsp+0x 60],</w>
call_0x1 d
ax+0x1 4],</w>
c 5
mov_qword_ptr_[rbp-0x d
9 0]_0,</w>
lea_rsi_[r sp+8],</w>
_ebx _eax,</w>
mov_ecx _0x10,</w>
jmp_0x1 4,</w>
test_byte_ptr_[r di+0x
test _dword_ptr_[r
set g
movsxd _r12
2 10],</w>
add_rax _4,</w>
c9 ]_2,</w>
2+1] _0x20,</w>
12 +4],</w>
mov_rdi_qword_ptr_[r bx+0x18],</w>
mov_r9_qword_ptr_[r sp+8],</w>
lea_rsi_[r sp+0x1
movzx_eax_byte_ptr_[r bx+0x
je_0x4 4,</w>
call_0xfffffffffffc d
cmp_dword_ptr_[r ax
mul sd
mov_rsi_qword_ptr_[r ip+0x20
jne_0xffffffffffffff ea,</w>
call_0xfffffffffff bb
movzx _r15d
_0x1 e,</w>
+rdx +0x
movaps_xmmword_ptr_[rsp+0x 50]_xmm0,</w>
mov_rcx_qword_ptr_[r bx+0x
je_0x4 1,</w>
mov_edx_dword_ptr_[rsp+0x c],</w>
add_r10 _0x10,</w>
je_0x4 3,</w>
_qword_ptr_[r ip+0x2
mov_qword_ptr_[rsp+0x5 8]_0,</w>
pcmpgtb_xmm 9
mov_r8d _2,</w>
mov_ecx _6,</w>
add_rcx _1,</w>
mov_r8 _rcx,</w>
movzx _r11d
mov_qword_ptr_[rbp-0x3 0]_rsi,</w>
lea_rax_[rbp-0x 4a
mov_dword_ptr_[rax- 8]_ecx,</w>
jne_0x2 0,</w>
jg _0x
3 8]
di -
call_0xfffffffffffc 0
cmp_qword_ptr_[rbp-0x 18]_0,</w>
jne_0x1 f,</w>
mov_esi _8,</w>
mov_edx_dword_ptr_[r ax-8],</w>
mov_qword_ptr_[rsp+0x7 8]_rax,</w>
xch g
call_0xffffffffffffc e
mov_edi _0x10,</w>
mov_rdi _r10,</w>
mov_word_ptr_[r sp+0x1
mov_eax_dword_ptr_[r 13+0x
sub_r10 _0x1000,</w>
_0xa 0,</w>
mov_qword_ptr_[r 13+0x1
movzx_eax_byte_ptr_[r bx],</w>
mov_rsi_qword_ptr_[r bx+8],</w>
mov_eax_dword_ptr_[r 14+0x
mov_rbx _rbp,</w>
lea_edx_[rax -1],</w>
6 0]_rax,</w>
call_0xfffffffffffd f
q u
l dd
ldd qu
ax+0x1 c],</w>
cmp_byte_ptr_[r cx
mov_qword_ptr_[rbp-0x 4a
lea_rsi_[rip+0x 16
cmp_eax _0x7
add_r 8d
_c h
mov_r8 _rdx,</w>
mov_rax_qword_ptr_[rbx+0x 20],</w>
0] _r13,</w>
mov_r9 _r12,</w>
cmp _r10d
] _0x10,</w>
10 0],</w>
cmp_byte_ptr_[r bp
mov_ebp _edx,</w>
jne_0x2 3,</w>
mov_qword_ptr_[r si+0x1
call_0x1 c
12 ]_0,</w>
9 2],</w>
mov_rax_qword_ptr_[rbp-0x 8
lea_rdx_[rip+0x 4
call_0xffffffffffffb c
call_0x1 b
call_0xffffffffffffb d
mov_dword_ptr_[rbp- 4]_eax,</w>
ax+0x 48],</w>
lea_rdi_[rsp+0x 20],</w>
80 80
por _xmm2
mov_qword_ptr_[r13 ]_rax,</w>
test_al _4,</w>
jne_0xffffffffffffffe f,</w>
cmp_qword_ptr_[r di+0x
jmp_0x1 b,</w>
mov_rax_qword_ptr_[rip+0x2 2
mov_rax_qword_ptr_[r bp+8],</w>
mov_qword_ptr_[rsp+0x4 0]_r8,</w>
_0xfffffff b,</w>
1 ]_1,</w>
4 2],</w>
call_0x2 a
9 5],</w>
cmp_dword_ptr_[r si+
test_byte_ptr_[rax+0x1 c9]_2,</w>
mov_ebx _edx,</w>
pop _r8,</w>
e c],</w>
mov_dword_ptr_[rbp-0x 48
d c],</w>
je_0x4 9,</w>
mov_ecx _r15d,</w>
and _r12d
jne_0x2 a,</w>
jne_0xffffffffffffffe c,</w>
mov_qword_ptr_[rbp-0x2 8]_rdx,</w>
b 8]_0,</w>
mov_rbx_qword_ptr_[r sp+8],</w>
mov_r9 _r13,</w>
cmp_rcx _rax,</w>
call_0xffffffffffffa a
jne_0xffffffffffff f7
mov_r8 _rdi,</w>
mov_rsi_qword_ptr_[rsp+0x 48],</w>
_0x80 8080
mov_r9 _r14,</w>
movdqa_xmm1_xmmword_ptr_[rsi +rcx],</w>
9 a],</w>
lea _r13d
lea_rdx_[rax -1],</w>
6 a],</w>
6 9],</w>
1a 0],</w>
jne_0xffffffffffffffe 8,</w>
_dword_ptr_[rsp+0x c],</w>
mov_qword_ptr_[rsp+0x4 8]_r9,</w>
mov_byte_ptr_[r si
lea_r15 _[rip+0x
4 28]_8,</w>
lea_rcx_[r ip-0x
lea _ebp
mov_ebp _edi,</w>
]_ 9,</w>
add_rax _rbx,</w>
dec _eax,</w>
mov_r8d _ecx,</w>
mov_qword_ptr_[rbp-0x4 0]_rax,</w>
_rcx _rax,</w>
mov_rdx_qword_ptr_[rbp-0x 30],</w>
jne_0xffffffffffff e
_0x7 fffffff,</w>
movsxd_rsi _esi,</w>
mov_qword_ptr_[rsp] _rdx,</w>
cmp_esi _1,</w>
lea_rsi_[rsp+0x 20],</w>
_0x808080 80,</w>
a 5
mov_rbx_qword_ptr_[r di],</w>
je_0x4 a,</w>
cmp_eax_0xffff86 f4,</w>
8 0]_0,</w>
jmp_0x1 6,</w>
mov_qword_ptr_[rbp-0x 48
_rdx _rcx,</w>
mov_r8_qword_ptr_[r sp],</w>
mov_esi _r15d,</w>
1010 101],</w>
mov_rdx_qword_ptr_[rbp-0x 38],</w>
mov_rax_qword_ptr_[rbp-0x c0],</w>
sub_rcx _rax,</w>
js _0x4
jne_0xffffffffffffffe b,</w>
_0x80 80,</w>
call_0xfffffffffffff 4
mov_rax _r15,</w>
movsx _rax
mov_qword_ptr_[rax+0x1 0]_0,</w>
mov_rdi_qword_ptr_[r 15],</w>
sp ]_0,</w>
f c],</w>
call_0xffffffffffff 9c
sd_xmm0 _qword_ptr_[rip+0x
movsxd_rax _ebx,</w>
mov_rdi_qword_ptr_[r 13],</w>
lea_rdi_[r sp+0x1
cdq ,</w>
mov_rsi_qword_ptr_[r bx+0x18],</w>
dx+0x 20],</w>
jmp _0x10,</w>
je_0x4 b,</w>
and _r9d
34 ]_1,</w>
mov_qword_ptr_[rsp+0x6 0]_rax,</w>
mov_edi _r14d,</w>
mov_rdx_qword_ptr_[r dx],</w>
mov_esi _0x2f,</w>
jmp_0x1 3,</w>
inc _rax,</w>
4 9],</w>
mov_rdi_qword_ptr_[r 15+0x
mov_dword_ptr_[rdx ]_eax,</w>
cmp_byte_ptr_[rdx ]_0,</w>
_xmm2 _xmm1,</w>
jmp_0x f,</w>
call_0xffffffffffff 9a
cmp_byte_ptr_[r si
jne_0xffffffffffffffe 6,</w>
ja_0xffffffffffff fe
mov_eax_dword_ptr_[r sp+0x14],</w>
mov_r8_qword_ptr_[r ip+0x2
jne_0x2 5,</w>
_qword_ptr_[r sp],</w>
je_0x4 6,</w>
dx +1],</w>
mov_qword_ptr_[rbp-0x e
9 6],</w>
je_0xffffffffffff e
4] _esi,</w>
jne_0x2 1,</w>
_0x3 b,</w>
je_0x5 0,</w>
lea_rdi_[rip+0x 10
d 5
movzx_edx _al,</w>
ja _0x5
jne_0x2 9,</w>
cmp_rax _rcx,</w>
jmp _0x18,</w>
jne_0xffffffffffffffe 7,</w>
_ dx
9 68],</w>
mov_dword_ptr_[rsp+0x2 8]_eax,</w>
mov_dword_ptr_[rbp-0x 5
_xmm2 _xmm0,</w>
add_rax _2,</w>
00 1,</w>
mov_rdx_qword_ptr_[rax+0x 20],</w>
cmp_eax _5,</w>
add_r12 _1,</w>
inc _eax,</w>
call_0x1 7
mov_rax _r14,</w>
mov_rbx_qword_ptr_[r sp+0x18],</w>
mov_qword_ptr_[r 14+0x1
mov_byte_ptr_[r bx
cvtsi2 sd_xmm1
call_0xffffffffffffe 7
] _rbp,</w>
5 0]_rax,</w>
mov_byte_ptr_[r bp+0x
cmp_ dil
_byte_ptr_[r bx],</w>
13 +4],</w>
call_qword_ptr_[r ax+8],</w>
lea_rcx_[rip+0x 20
_qword_ptr_[rsp+0x 68],</w>
movsd _qword_ptr_[rsp+0x
] _rsi,</w>
call_0xffffffffffff 9b
push _rdi,</w>
cmp_al _1,</w>
9 +r
mov_esi _0x10,</w>
lea _r14d
mov_qword_ptr_[rsp+0x3 0]_rdx,</w>
je_0xffffffffffffff eb,</w>
9 7],</w>
movzx_eax_byte_ptr_[r dx],</w>
mov_dword_ptr_[rbp-0x 3
4 6],</w>
bx *8],</w>
jmp_0xffffffffffff c
movups_xmmword_ptr_[r sp+0x
call_0xffffffffffffa 0
mov_rdi_qword_ptr_[r 13+0x
cmp _r11
jne_0x2 4,</w>
mov_dword_ptr_[rsp+ 8]_edx,</w>
cmp_rsi _rax,</w>
bx -0x
and _rdx
mov_ecx_dword_ptr_[r ax+4],</w>
mov_eax _0x40,</w>
je_0x5 6,</w>
9 e],</w>
jmp_0xffffffffffff ed
_0x3 2,</w>
_xmm 3,</w>
mov_qword_ptr_[rax+0x20] _rdx,</w>
jne_0x2 d,</w>
8 +
mov_ecx _5,</w>
lea_r 9d
_- 2,</w>
sete _cl,</w>
call_0xffffffffffff 9d
0] _r9,</w>
mov_dword_ptr_[rsp+0x c]_0,</w>
jne_0x2 8,</w>
je_0x4 7,</w>
mov_dword_ptr_[rsp+0x a
9 3],</w>
add_rbx _0x10,</w>
jne_0xffffffffffffffe 9,</w>
lea_rcx _[rax+1],</w>
mov_rax_qword_ptr_[rbp-0x d0],</w>
lddqu _xmm0_xmmword_ptr_[r
dx+0x 28],</w>
jne_0x2 b,</w>
3c ]_0,</w>
mov_rcx_qword_ptr_[rsp+0x 58],</w>
mov_r15 _rsi,</w>
cmp_rax_qword_ptr_[rbp-0x 80],</w>
9 8]_0,</w>
test _edx
mov_r11d _eax,</w>
call_0xffffffffffffc f
mov_r10_qword_ptr_[r sp+8],</w>
mov_edx _0x40,</w>
jne_0x2 e,</w>
4 20],</w>
call_qword_ptr_[r bp+0x
0] _r14,</w>
test_byte_ptr_[r bx+0x1
cmp_dword_ptr_[r ax]
sar _rsi
9 b],</w>
mov_rax_qword_ptr_[rbp-0x b0],</w>
je_0x5 1,</w>
jne_0xfffffffffffffff 2,</w>
add _dword_ptr_[rsp+0x
15+0x 28],</w>
66 66
call_0xfffffffffffd 7
add_qword_ptr_[rbp-0x 58]_1,</w>
mov_edi _0x1
je_0x4 e,</w>
sar_eax _0x1f,</w>
mov_edx_dword_ptr_[r ip+0x20
jne_0xfffffffffffff ea
call_0x1 2
jmp_0xffffffffffff ec
mov_qword_ptr_[rbx+0x1 0]_rax,</w>
add_rbx _rax,</w>
ucomi sd
12+0x 28],</w>
mov_r8 _r15,</w>
call_0xffffffffff ef
9 f],</w>
mov_ecx_dword_ptr_[rsp+0x c],</w>
mov_dword_ptr_[rsp+0x3 0]
_ebp _eax,</w>
test_r14 b
13 0],</w>
mov_rax_qword_ptr_[rbp-0x a0],</w>
call_0xfffffffffffb 0
sub _dword_ptr_[rbp-0x
54 ]_eax,</w>
4c ]_eax,</w>
movzx_r9d _byte_ptr_[r
mov_qword_ptr_[rsp +r
sbb _rax_rax,</w>
lea_eax _[rax
xor _r11d_r11d,</w>
_0x2 b,</w>
je_0x4 f,</w>
jmp_0xffffffffffff ee
mov_qword_ptr_[rax+0x 4
20 7
mov_esi _0x80,</w>
mov_qword_ptr_[rsp+8] _r9,</w>
and _r13d
call_0xffffffffffffe 8
bp- 1],</w>
mov_dword_ptr_[rsp+0x1 c]
sub_ebx _1,</w>
mov_qword_ptr_[rsp+0x1 0]_rdx,</w>
_-0x 80,</w>
mov_r8d _ebx,</w>
15 0],</w>
mov_rdx_qword_ptr_[r bp],</w>
movsxd _r13
mov_dword_ptr_[rbp-0x 10
mov_eax_dword_ptr_[r sp+0x1c],</w>
mov_rdx_qword_ptr_[r bx+0x18],</w>
jmp_0x d,</w>
add_rcx _0x10,</w>
] _rdi,</w>
mov_rsi_qword_ptr_[r ax+8],</w>
mov_eax_dword_ptr_[rbp-0x 34],</w>
call_0xfffffffffffe 3
mov_qword_ptr_[rsp+0x1 0]_rcx,</w>
je_0x5 5,</w>
mov_qword_ptr_[rsp+0x9 8]_rax,</w>
mov_dword_ptr_[rsp+0x1 c]_eax,</w>
mov_rcx_qword_ptr_[r ax+8],</w>
mov_r13d _esi,</w>
lea_rsi_[rip+0x f
mov_rdx_qword_ptr_[r bx+8],</w>
8] _ebx,</w>
sub_rsp _0x50,</w>
6c ]_0,</w>
dx +rax*4],</w>
movsd_xmm0 _qword_ptr_[rip+0x
mov_r8 _qword_ptr_[rbp-0x
call_0xffffffffffff 9e
add_rax _rsi,</w>
5 e],</w>
mov_ecx _esi,</w>
lea_rdx_[r ax+0x
cmp_al _9,</w>
shl_eax _8,</w>
cmp_eax _0xa,</w>
_dword_ptr_[r bx+0x
call_0x1 e
je_0x4 c,</w>
and _rdi
15 8],</w>
call_0xffffffffffff 97
lea_ecx _[rax
mov_eax_dword_ptr_[r sp+0x10],</w>
movabs _rcx
add_rdx _4,</w>
sub_edx _1,</w>
jmp_0xfffffffffffff 6
7 1],</w>
lea_r8d _[r
mov_r14 _rcx,</w>
mov_dword_ptr_[rsp ]_0,</w>
_0xfffffff d,</w>
cx +rax],</w>
4 3],</w>
mov_qword_ptr_[rdi ]_rax,</w>
cmovl e
test_r8 b
shr _rcx
mov_qword_ptr_[rbx ]_0,</w>
cmp_rdx _rcx,</w>
mov_eax_dword_ptr_[r sp],</w>
mov_byte_ptr_[r ax+r
je_0x5 4,</w>
lea_rdx_[rip+0x 5
jne_0x2 c,</w>
je_0x5 7,</w>
mov_rsi _r9,</w>
cmp_qword_ptr_[r bx+0x1
mov_rsi _r10,</w>
_0x1 7,</w>
call_0x1 6
add_rbp _8,</w>
8 9],</w>
mov_esi_0x1 00,</w>
call_0xfffffffffffc e
add_r13d _1,</w>
shl _rbx
set b
mov_r12d _dword_ptr_[rsp+0x
lea_rdx_[r dx
jne_0x2 6,</w>
cmp_byte_ptr_[r bx+0x
lea_rdi_[rip+0x b
mov_rdi_qword_ptr_[r di+8],</w>
7 8]_0,</w>
je_0x5 3,</w>
mov_r8 _rsi,</w>
test_ ax
mov_dword_ptr_[rbx ]_eax,</w>
mov_byte_ptr_[r dx+
_0x2 5,</w>
mov_rax_qword_ptr_[rbp-0x 3
f ]_0,</w>
_qword_ptr_[rsp+0x 70],</w>
lea_rax_[rbp-0x 20],</w>
12 ]
8 1],</w>
jne_0x2 7,</w>
add _eax_eax,</w>
mov_dword_ptr_[rbx ]
_0x2 1,</w>
sub _rbp
f 0]_0,</w>
sub _r8d
cmp_edx _2,</w>
sub _qword_ptr_[rbp-0x
si+0x 28],</w>
add_rsp _0x78,</w>
6 ]
mov_r8_qword_ptr_[r sp+0x10],</w>
mov_edx _6,</w>
cmp_qword_ptr_[r ax+0x1
14+0x 28],</w>
mov_qword_ptr_[rsp] _rsi,</w>
mov_edx_dword_ptr_[rbp-0x 24],</w>
cmp_byte_ptr_[r bx]_0,</w>
cmp_ebx _1,</w>
_xmm1 0,</w>
14 0],</w>
8 8]_0,</w>
add_rdi _1,</w>
not _eax,</w>
bswap _edx,</w>
mov_r15 _rdx,</w>
sub_rsp_0x d8,</w>
a 0]_0,</w>
mov_edx_dword_ptr_[r sp+8],</w>
mov_qword_ptr_[rsi ]_rax,</w>
shr _r9d
mov_rdx_qword_ptr_[rsp+0x 48],</w>
14+0x 20],</w>
13 ]_0,</w>
mov_ecx _3,</w>
cmp_rcx _rdx,</w>
_xmmword_ptr_[r si-0x
00 ]_0,</w>
20 ]_xmm0,</w>
mov_byte_ptr_[r ip+0x20
call_0xffffffffffffb e
mov_dword_ptr_[rsp+0x1 4]
lea_rdx_[rip+0x d
mov_qword_ptr_[rsp+0x1 8]_rcx,</w>
mov_edx_dword_ptr_[r bx],</w>
ps l
ldq _xmm2
call_0x 3e
mov_rax_qword_ptr_[rsp+0x 78],</w>
or _rax
mov_eax_dword_ptr_[rbp-0x 2c],</w>
mov_ecx _0x3
add_rsi _rax,</w>
call_0x2 c
di +rcx],</w>
mov_rax_qword_ptr_[rbp-0x e8],</w>
mov_esi_0x4 2
jmp _0xa,</w>
f 9],</w>
psl ldq_xmm2
mov_rax_qword_ptr_[rbp+0x 18],</w>
4 a],</w>
mov_rdi_qword_ptr_[r 14],</w>
mov_dword_ptr_[rsp+0xc] _edx,</w>
add_rdx _0x10,</w>
mov_dword_ptr_[rbp-0x d
movdqu _xmm1_xmmword_ptr_[r
cmp_rdx _qword_ptr_[r
mov_r9 _r15,</w>
mov_ecx _0x
jne_0xffffffffffffffe 5,</w>
2 4]
mov_dword_ptr_[r dx+
je_0xffffffffffff f7
sub_ecx _eax,</w>
jmp_0xfffffffffffff bb
jae_0x 10,</w>
mov_rbx_qword_ptr_[rsp+0x 28],</w>
mov_edi _edx,</w>
imul_rax _rax
mov_rax_qword_ptr_[rax+0x 60],</w>
js _0x3
mov_qword_ptr_[rbp-0x3 8]_rdi,</w>
mov_dword_ptr_[rax] _0x16,</w>
lea_rdi_[rip+0x d
mov_esi_0x1 000,</w>
je_0x5 9,</w>
test_byte_ptr_[r ax+0x4
mov_rdi_qword_ptr_[rbx+0x 20],</w>
mov_ecx_dword_ptr_[r sp+8],</w>
mov_eax_dword_ptr_[rsp+0x 28],</w>
jmp_0x1 7,</w>
lea_rdi_[rip+0x c
18 ]_1,</w>
_r15 d_eax,</w>
24 ]_1,</w>
movsx _ecx
movdqu_xmmword_ptr_[r di-0x
add_ecx _1,</w>
sub _r12d
mov_dword_ptr_[r 12+0x1
_0x2 a,</w>
movzx_edx_byte_ptr_[r dx],</w>
movsxd_rcx _eax,</w>
mov_qword_ptr_[rsp+0x7 0]_0,</w>
mov_rcx_qword_ptr_[r bp+0x
mov_qword_ptr_[rsp] _r8,</w>
sub_rsp _0x78,</w>
ffffffff ,</w>
50 ]_1,</w>
mov_dword_ptr_[rbp-0x 14]_eax,</w>
call_0xffffffffffffa d
6 0]
lea_rsi_[rip+0x 17
14 +4],</w>
test_r15 b
movsxd _r8
add_r14d _1,</w>
7 9],</w>
movaps_xmmword_ptr_[rsp+0x60 ]_xmm1,</w>
inc _rbx,</w>
mov_edx _edi,</w>
ax+0x c],</w>
_0xfffffff c,</w>
60 ]_1,</w>
mov_qword_ptr_[rsp] _rcx,</w>
_qword_ptr_[r sp+0x10],</w>
f 1],</w>
test_ax _ax,</w>
movaps_xmmword_ptr_[rsp+0x70 ]_xmm2,</w>
cmp_ebx _eax,</w>
cmp_al _0x2f,</w>
3 ]
sub _r11
5 d],</w>
5 2],</w>
4 5],</w>
movaps_xmmword_ptr_[rsp+0xb0 ]_xmm6,</w>
je_0x5 8,</w>
movdqa_xmm 9
mov_rax_qword_ptr_[rsp+0x 70],</w>
jne_0xffffffffffffffe 4,</w>
mov_edi _r15d,</w>
lea_rdi_[rip+0x 8
ax+ 2],</w>
mov_rcx_qword_ptr_[rsp+0x 48],</w>
add_rsp _0x40,</w>
call_0xfffffffffffd 6
10 ]_1,</w>
lea_rdi_[rip+0x 12
ax+0x 50],</w>
and_eax _0x80808080,</w>
test _dh
movaps_xmmword_ptr_[rsp+0x80 ]_xmm3,</w>
si -1],</w>
movaps_xmmword_ptr_[rsp+0x90 ]_xmm4,</w>
5 7],</w>
movaps_xmmword_ptr_[rsp+0xa0 ]_xmm5,</w>
mov_rsi_qword_ptr_[rsp+0x 50],</w>
mov_dword_ptr_[rsp+0xc] _ecx,</w>
je_0x5 2,</w>
13 8],</w>
palignr _xmm2
lea_rsi_[r bx+0x
mov_dword_ptr_[rsp+ 8]_0,</w>
_0x2 9,</w>
call_0xffffffffffff 90
44 ]_0,</w>
movaps_xmmword_ptr_[rsp+0xc0 ]_xmm7,</w>
mov_rdx_qword_ptr_[rsp+0x 58],</w>
jne_0xffffffffffffffe 2,</w>
call_0xfffffffffffc a
_byte_ptr_[r ax],</w>
test_eax _0x8080,</w>
8_xmm 5,</w>
- 3],</w>
and_rax _0xfffffffffffffffa,</w>
mov_rax_qword_ptr_[rbp+0x e0],</w>
mov_word_ptr_[r bx+0x
2 18],</w>
call_0x 8a
15 +4],</w>
jmp_0x1 9,</w>
10_xmm 5,</w>
mov_edx_dword_ptr_[r bp+0x10],</w>
mov_qword_ptr_[rsp+0x7 0]_rax,</w>
setne _dl,</w>
_0x5 f,</w>
5 a],</w>
5 6],</w>
4 e],</w>
6 2
di +rdx],</w>
cmp _r11d
call_0x2 d
mov_edi_0x4 2
je_0xfffffffffffff ea
mov_r8_qword_ptr_[r sp+0x18],</w>
push _r8,</w>
bx *
call_0xfffffffffff 9c
lea_rdx_[rsp+0x 20],</w>
call_0xfffffffffffc c
mov_r13d _ecx,</w>
cmp_eax _9,</w>
mov_rax_qword_ptr_[rbp-0x 5
jmp_0x1 c,</w>
8 a],</w>
mov_r14d _dword_ptr_[rsp+0x
call_0xffffffffffff 8a
test_byte_ptr_[r dx+0x
_0x1 b,</w>
movsx _rdx
inc _dword_ptr_[r
call_0xfffffffffff 9a
call_0x4 0
mov_r15d _dword_ptr_[rsp+0x
mov_dword_ptr_[rsp+0x20] _eax,</w>
call_0x1 4
mov_r12 _r8,</w>
mov_r12d _ecx,</w>
mov_qword_ptr_[rbp-0x1 8]_rdx,</w>
lea_rax_[rsp+0x 30],</w>
add_rsp_0x d8,</w>
movsxd_rcx _dword_ptr_[r
lea_rdi_[rip+0x 14
shr_ecx _3,</w>
mov_rcx _rdi,</w>
mov_qword_ptr_[rsp+0x8 8]_rax,</w>
call_qword_ptr_[r bx+0x
di+0x1 58],</w>
cmp_byte_ptr_[r di]_0,</w>
sub _r12
mov_qword_ptr_[rsp+0x6 8]_0,</w>
movsxd _r14
mov_rbx_qword_ptr_[r ip+0x
cx +4],</w>
b 0]_0,</w>
mov_dword_ptr_[rsp+0x 9
ax +rdx*8],</w>
6 8]_rax,</w>
mov_dword_ptr_[rsp+0x3 8]
4 0]
mov_rax_qword_ptr_[r si],</w>
mov_eax_dword_ptr_[r dx+0x
mov_qword_ptr_[rbp-0x f
call_0xfffffffffffc b
10 +r
6 d],</w>
pmovmskb_edx _xmm1,</w>
2 ]_ax,</w>
pand_xmm 10_xmm
jne_0x3 0,</w>
6 2],</w>
44 ]_eax,</w>
cmp_ dx
mov_esi_dword_ptr_[r bx+0x
lea_rsi_[rip+0x 18
e 8]_0,</w>
mov_r9_qword_ptr_[r sp+0x10],</w>
lea_rdi_[r sp+8],</w>
call_0xffffffffffffa c
call_0xfffffffffffa 0
48 ]_1,</w>
cmp_al _0x20,</w>
jmp _rdx,</w>
mov_edi_dword_ptr_[r ip+0x20
jmp_0xffffffffffff eb
0000 0000
lea_r11 _[rip+0x
jne_0x2 f,</w>
mov_qword_ptr_[rbp-0x4 8]_rax,</w>
mov_r14d _edx,</w>
cmp_eax _7,</w>
cmp xchg
jne_0x3 4,</w>
call_0xfffffffffff 4
bx +rax],</w>
24 0,</w>
20] _edx,</w>
5 ]_0,</w>
movzx_r8d _word_ptr_[r
mov_rax_qword_ptr_[r dx],</w>
cmp_edx _dword_ptr_[r
6 ]_0,</w>
4 d],</w>
sub_eax _0x30,</w>
and_eax _4,</w>
mov_dword_ptr_[r si+
je_0x6 1,</w>
test_byte_ptr_[rdi+0x1 34]_4,</w>
mov_r14d _ecx,</w>
bx+0x1 10],</w>
mov_byte_ptr_[r ip+0x
1 13
mov_rdx _r9,</w>
mov_dword_ptr_[rsp+0x1 4]_eax,</w>
mov_rcx_qword_ptr_[rsp+0x 30],</w>
mov_rdi_qword_ptr_[rsp+0x 70],</w>
jns _0xffffffffffff
pop _r9,</w>
call_0xfffffffffff 9d
mov_ecx_dword_ptr_[r dx],</w>
add_r15 _1,</w>
mov_edx _0x20,</w>
je_0x5 a,</w>
mov_rbp _rbx,</w>
movdqa_xmm 4
test_ah _4,</w>
_xmmword_ptr_[r si+0x
mov_qword_ptr_[r si+
mov_rdi_qword_ptr_[r ax+0x10],</w>
call_0xffffffffffff 8b
_al _byte_ptr_[rdi],</w>
mov_edi_dword_ptr_[r bx],</w>
lea_ebx _[r
jne_0xfffffffffffffff 3,</w>
add_rsi _1,</w>
mov_qword_ptr_[rsp+0x1 8]_rdx,</w>
mov_rax_qword_ptr_[r 15+8],</w>
v pcmpgtb_xmm
jne_0x3 6,</w>
psubb _xmm1_xmm0,</w>
mov_dword_ptr_[r di+
cmp_rbp _rax,</w>
lea_ecx _[rax+1],</w>
cmp_dword_ptr_[rbp-0x 1c
sb _al_byte_ptr_[rdi],</w>
s ca
sca sb_al_byte_ptr_[rdi],</w>
rep ne_
repne_ scasb_al_byte_ptr_[rdi],</w>
mov_rsi_qword_ptr_[r 13],</w>
cmp_qword_ptr_[r ip+0x20
cmp_ecx _eax,</w>
e 9],</w>
e 1],</w>
call_qword_ptr_[r ip+0x2
mov_dword_ptr_[rsp+ 4]_eax,</w>
call_0x2 b
6 3],</w>
15 ]_0,</w>
lea_rdx_[rax +8],</w>
6 6],</w>
5 f],</w>
imul _edx
call_0xffffffffffffe 6
call_0x1 f
or_eax _0xffffffff,</w>
14 8],</w>
mov_eax_dword_ptr_[r dx],</w>
mov_dword_ptr_[rax+0x 2
call_0xfffffffffffe 2
call_0xffffffffffffb f
mov_esi_dword_ptr_[r ip+0x
mov_dword_ptr_[rsp+ 4]_0,</w>
lea_rdx_[rip+0x 14
call_0x 50
test_bpl _bpl,</w>
mov_r8_qword_ptr_[r ip+0x
_ zmm
add_rdi _4,</w>
] _ebx,</w>
1 8]
lea_rsi_[rip+0x 1a
lea_rdx_[rip+0x 6
_r9 w,</w>
d 0]_0,</w>
bx+0x1 c],</w>
di+0x 40],</w>
a fb
call_qword_ptr_[r ax],</w>
_ cx,</w>
8 ]_-1,</w>
mov_r8d _0,</w>
and _r14d
8 2],</w>
cmp_qword_ptr_[rbx+0x 68]_0,</w>
mov_dword_ptr_[r 15+0x1
13+0x 28],</w>
jne_0x3 1,</w>
call_0x1 5
mov_edi _0x18,</w>
lea_rdi_[rip+0x 13
test_al _8,</w>
_0xffff 87
movsd_xmm1 _qword_ptr_[rip+0x
call_0xffffffffffff 8d
+rax* 8+0x
not _ecx,</w>
mov_rdx_qword_ptr_[rsp+0x 50],</w>
call_0xffffffffffff 96
+rcx *8],</w>
cmp_al _0xa,</w>
mov_rax _-1,</w>
1 10
js _0xffffffffffff
call_0xfffffffffffc f
mov_ecx_dword_ptr_[r ip+0x
5 5],</w>
000 3,</w>
mov_qword_ptr_[rbx+0x 20]_rax,</w>
mov_rdi_qword_ptr_[rsp+0x 68],</w>
mov_qword_ptr_[r ax+r
call_0xfffffffffff 9e
add_rcx _rax,</w>
mov_dword_ptr_[rsp+0xc] _esi,</w>
je_0x5 b,</w>
a 8]_0,</w>
lea_rsi_[rip+0x 19
sub_edx _0xffff,</w>
mov_rdx_qword_ptr_[r bx+0x10],</w>
mov_esi_0x4 0,</w>
call_0xffffffffffff 8c
_0xffffffff ffffffff,</w>
call_0xffffffffffffa b
mov_rcx_qword_ptr_[r bx],</w>
jne_0x3 5,</w>
je_0x6 d,</w>
4 7],</w>
lea_rdi_[rsp+0x 40],</w>
1 15
_0x4 000,</w>
mov_dword_ptr_[rbp-0x 6
cmp_r12 _rax,</w>
b 9],</w>
_b h
2+ 1
mov_r12d _0xffffffff,</w>
cmp_rax _rbx,</w>
call_0x 58
call_0xffffffffffff 94
2a 0],</w>
] _esi,</w>
test_r12b _r12b,</w>
add_rsi _qword_ptr_[r
call_0xffffffffffff 87
6 e],</w>
mov_r9_qword_ptr_[r sp],</w>
shl _ecx
4c ]_0,</w>
cmp_byte_ptr_[r bx+
_ bx,</w>
bp+0x 28],</w>
4 f],</w>
5c ]_0,</w>
test_byte_ptr_[r 15+0x
6 7],</w>
5 b],</w>
mov_ebp _dword_ptr_[rsp+0x
je_0x6 3,</w>
0] _r15,</w>
mov_dword_ptr_[rbp-0x 7
_0x6 1,</w>
4 28],</w>
jmp_0x1 d,</w>
6 f],</w>
movzx_eax_byte_ptr_[r ip+0x2
mov_dword_ptr_[rsp+4] _0x30,</w>
2 40],</w>
call_0x2 e
7 ]_0,</w>
call_0x1 8
_[r bp-0x
je_ 4,</w>
call _rcx,</w>
add_rax _0x18,</w>
je_0x5 e,</w>
movzx_eax_word_ptr_[r sp+0x
jne_0x3 e,</w>
a ]_0,</w>
jmp_0xffffffffffff ea
2 30],</w>
mov_eax_dword_ptr_[rbp-0x 20],</w>
jne_0xffffffffffffffe 3,</w>
mov_eax_dword_ptr_[rax+0x c],</w>
2 8]_eax,</w>
jmp_0x1 a,</w>
2 ]_al,</w>
mov_byte_ptr_[r dx+0x1
jne_0x3 2,</w>
f 6],</w>
mov_qword_ptr_[rbx+0x1 8]_rax,</w>
mov_rax_qword_ptr_[rax+0x 50],</w>
call_0xfffffffffffd 9
and_esi _1,</w>
_qword_ptr_[r sp+0x18],</w>
6 b],</w>
54 ]_0,</w>
call_0xfffffffffff 9b
add_r13 _1,</w>
]_b l,</w>
ja _0x7
mov_qword_ptr_[rsp+8] _r10,</w>
mov_esi_dword_ptr_[rsp+0x c],</w>
lea_r sp
_0x1 5,</w>
7 2],</w>
_qword_ptr_[rsp+0x 78],</w>
mov_qword_ptr_[rcx ]_rax,</w>
je_0x6 2,</w>
je_0x5 c,</w>
jne_0xffffffffffffffd b,</w>
jbe_0xffffffffffff fe
0] _0x4
]_ di,</w>
lea _r15d
mov_eax_dword_ptr_[r di],</w>
5 3],</w>
mov_eax_dword_ptr_[r si+0x
je_0x6 0,</w>
call_0xfffffffffff 90
b eb
call_0xfffffffffff 97
+rax +
cmp_rbx _rbp,</w>
mov_rsi_qword_ptr_[r ax+0x
mov_ecx _0xa,</w>
call_0xffffffffffffe 5
n s
je_0x6 6,</w>
cmp_edi _1,</w>
test_r13b _r13b,</w>
movsxd _r15
mov_edi _0x
mov_dword_ptr_[r bp+
lea_rdx_[rip+0x a
cmp_eax _0x
ax +rdx*
0] _r10,</w>
mov_r9_qword_ptr_[r sp+0x18],</w>
_rsi _rax,</w>
_0x3 1,</w>
8 5],</w>
_[rdx +1],</w>
4] _ebx,</w>
sp+0x10 8],</w>
mov_rax_qword_ptr_[r si+0x
mov_r8d _4,</w>
cmp_r12d _1,</w>
call_0xfffffffffffd 8
or_eax _1,</w>
movdqu _xmm2_xmmword_ptr_[r
8 _xmm1,</w>
lea_rax_[r bx+0x10],</w>
jmp_0x2 4,</w>
+rax ]
pcmpeqb _xmm1_xmm2,</w>
cmov ns
mov_byte_ptr_[r sp
lea_rdi_[rip+0x 15
call_0x 5a
mov_rax_qword_ptr_[r ax+r
mov_dword_ptr_[rsi ]_eax,</w>
ax *4+0x
5c ]_eax,</w>
lea_rdx_[rip+0x 8
mov_rbx_qword_ptr_[r sp+0x10],</w>
mov_r8d _0xffffffff,</w>
di+0x c],</w>
di ]_eax,</w>
and_eax _3,</w>
_0x1 0000,</w>
mov_rax_qword_ptr_[rip+0x2 3
1 14
mov_rdx_qword_ptr_[r sp+0x1
mov_r8d_dword_ptr_[r sp+8],</w>
add_r14 _1,</w>
mov_rbx _r12,</w>
lea_rax_[r bp+0x10],</w>
jmp_0x1 e,</w>
8 6],</w>
1 12
jne_0xffffffffffffffd e,</w>
7 a],</w>
mov_rsi_qword_ptr_[r sp+0x1
je_0x5 f,</w>
_0x3 e,</w>
mov_eax_dword_ptr_[r bp],</w>
1 1d
mov_word_ptr_[r bp-0x
mov_qword_ptr_[rbp-0x3 8]_rdx,</w>
f 5],</w>
cmp_dword_ptr_[r ax+0x1
call_0xffffffffffff 80
4b 0
_ax _8,</w>
je_0x6 5,</w>
movzx_edx_byte_ptr_[r sp+0x
mov_rdx_qword_ptr_[rbp-0x 40],</w>
jne_0x3 b,</w>
6 5],</w>
call_0xfffffffffffd 4
and _rcx
10 _xmm2,</w>
lea_rsi_[rsp+0x 30],</w>
lea_rsi_[rip+0x 1c
_0x6 0
4 b],</w>
mov_edi _0x7
40 8],</w>
je_0x 64,</w>
mov_rax_qword_ptr_[rbp-0x f8],</w>
lea_rsp _[rbp-0x
movabs_rax _0x1
div sd
mov_rax_qword_ptr_[r dx+0x
mov_r9d _dword_ptr_[rbp-0x
mov_esi_dword_ptr_[r ax],</w>
cmp_r14d _1,</w>
call_0xfffffffffff 8d
mov_ecx_0x1 00,</w>
lea_r12d _[r
call_0x1 3
lea_rdx_[rip+0x c
e 2],</w>
call_0x 57
mov_esi _7,</w>
jne_0x3 8,</w>
mov_rdi_qword_ptr_[r bx+0x1
jmp_0xfffffffffffff 5
add_r 9d
mov_rdi_qword_ptr_[r ax+r
mov_qword_ptr_[r14 ]_rax,</w>
je_0x6 9,</w>
call_0xffffffffff eb
shr_edx _cl,</w>
mov_dword_ptr_[rsp+0x3 8]_eax,</w>
sub _r14
jmp_0x2 5,</w>
mov_dword_ptr_[rsp+0x1 c]_0,</w>
_0x3 ff,</w>
0 ]_xmm0,</w>
mov_eax_dword_ptr_[rax+0x 20],</w>
jne_0xfffffffffffffff 4,</w>
cmp_eax _6,</w>
cmp_byte_ptr_[r ip+0x
mov_esi_0x4 b
mov_edi_dword_ptr_[r bp-0x
or _rcx
call_0x 5c
f 2],</w>
movsx_eax _word_ptr_[r
cmp_rdi _rdx,</w>
lea_rax_[rsp+0x e0],</w>
ja _0x6
mov_edi_0x6 0
mov_dword_ptr_[rbp-0x1c ]_eax,</w>
call_0xffffffffffffa e
2 80],</w>
movsd _xmm2
2c ]_1,</w>
ffffffff fffffff,</w>
8 e],</w>
mov_qword_ptr_[rsp+0x1 0]_rsi,</w>
jne_0x3 9,</w>
f a],</w>
test_byte_ptr_[r 12+0x
movsxd_rax _dword_ptr_[rsp+0x
add _r15d_1,</w>
cmp_rax _rdi,</w>
7 3],</w>
shr _esi
tr i
s tri
pcmp i
pcmpi stri
call_0xffffffffffff 98
+ 8]_rdx,</w>
jne_0x3 3,</w>
mov_rax_qword_ptr_[rsp+0x 98],</w>
mov_eax_dword_ptr_[r bx+8],</w>
c movs
8 7],</w>
mov_rdi_qword_ptr_[r bp+0x10],</w>
mov_rdi_qword_ptr_[r 12+8],</w>
je_0x6 7,</w>
9 0]_rax,</w>
mov_dword_ptr_[rbp-0x c]_eax,</w>
mov_r8d _r12d,</w>
lea_rax_[rsp+0x 40],</w>
mov_eax_dword_ptr_[rbp-0x 10],</w>
cmp_al _0x2d,</w>
a 9],</w>
mov_rax_qword_ptr_[rsp+0x 88],</w>
7 d],</w>
test_r10 _r10,</w>
call_0xfffffffffff 96
add_eax _ecx,</w>
_r12 w,</w>
mov_eax_dword_ptr_[rsp+0x 20],</w>
jne_0xfffffffffffffff 6,</w>
30 ]_xmm0,</w>
mov_esi_0x4 a
jne_0x3 c,</w>
je_0x6 a,</w>
12 -1],</w>
movaps_xmmword_ptr_[r sp+0x1
mov_rdx_qword_ptr_[rbp-0x 48],</w>
jb _0x
9 8]_rax,</w>
movsxd _r9
mov_rdi _r11,</w>
call_0x2 7
mov_eax _4,</w>
lea_rsi_[rip+0x 1b
mov_word_ptr_[r ax+
cmp_dword_ptr_[r di]
lea_rdx_[r sp+8],</w>
div _ecx,</w>
mov_ecx _0x40,</w>
cmp_ebp _1,</w>
lea_rsi_[rip+0x 2a
mov_r8d _edx,</w>
mov_byte_ptr_[r sp+r
call_0xffffffffffff 88
9 +0x1
10 8],</w>
7 0]_rax,</w>
cmp_qword_ptr_[r 12+0x
shr_ecx _0x10,</w>
mov_rax_qword_ptr_[r 12+8],</w>
14 ]_1,</w>
je_0x7 9,</w>
call_0xffffffffffff 86
7 6],</w>
2 ]_1,</w>
mov_dword_ptr_[rsp+0x3 0]_eax,</w>
jne_0x4 4,</w>
je_0x7 2,</w>
and_eax _8,</w>
sub_rsp _0x2
mov_r12_qword_ptr_[r ip+0x
call _rbx,</w>
mov_dword_ptr_[r cx+0x
movdqa_xmm2_xmmword_ptr_[r di+rcx],</w>
cmove _eax_edx,</w>
_xmm0_xmm 3,</w>
mov_r12_qword_ptr_[r ax],</w>
not _rax,</w>
call_0x 5b
lea_rdi_[rip+0x 9
jne_0xffffffffffffffe 1,</w>
mov_r14 _r15,</w>
mov_qword_ptr_[rsp] _r9,</w>
7 5],</w>
sub_rcx _rdx,</w>
mov_esi _5,</w>
mov_ebx _0xffffffff,</w>
mov_eax_dword_ptr_[rbp-0x 18],</w>
call_0xfffffffffffb d
a 1],</w>
8 b],</w>
call_0xffffffffffff 6c
mov_byte_ptr_[rdx ]_al,</w>
call_0x 54
8 3],</w>
7 e],</w>
bx+0x c],</w>
lea_rcx_[rip+0x 5
bx *4],</w>
mov_r13d _dword_ptr_[rsp+0x
mov_dword_ptr_[rbp ]_eax,</w>
add_rdx _rdx,</w>
jne_0xffffffffffffffe 0,</w>
mov_qword_ptr_[rcx +0x1
mov_rsi_qword_ptr_[rsp+0x 60],</w>
e 5],</w>
mov_rax_qword_ptr_[rax+0x 48],</w>
shr _al
_0xffff86 f4,</w>
2 50],</w>
je_0x6 c,</w>
lea_rsi_[rip+0x 2d
lea_rsi_[rip+0x 24
8] _0xffffffff,</w>
mov_eax_dword_ptr_[rbp-0x 44],</w>
mov_dword_ptr_[rbp- 4]_edi,</w>
7 f],</w>
mov_r8d_dword_ptr_[r ax+4],</w>
mov_qword_ptr_[rbp-0x6 8]_rax,</w>
jne_0x3 7,</w>
call_0x 6c
si *4],</w>
mov_rbp_qword_ptr_[r ip+0x2
sub_rsp _0x88,</w>
b 1],</w>
lea_rdi_[rip+0x 16
and _r10
_0xf 8,</w>
lea_rdx_[rip+0x b
jb e_
e ]_0,</w>
add_eax _dword_ptr_[r
mov_rbp_qword_ptr_[r di],</w>
lea_rdx_[rip+0x e
cmp_byte_ptr_[r sp+0x1
add_rdx _8,</w>
je_0x6 e,</w>
mov_edx _edx,</w>
je_0x7 6,</w>
cmp_r13 _rax,</w>
mov_rax_qword_ptr_[rip+0x2 7
5d 0],</w>
jne_0xffffffffffffffd a,</w>
mov_rbp _r8,</w>
jne_0x3 d,</w>
8] _ebp,</w>
mov_edx_dword_ptr_[r ax+8],</w>
bp+0x 30],</w>
add_rsp _0x88,</w>
call_0xffffffffffff 70
f 7],</w>
] _r12,</w>
8 8]_rax,</w>
- 1]_0,</w>
movzx_eax_word_ptr_[r ax+r
mov_rsi_qword_ptr_[rsp+0x 58],</w>
mov_rdi_qword_ptr_[r ax+0x
lea_rsi_[rip+0x 1d
je_0x6 b,</w>
movsx_esi _byte_ptr_[r
lea_r11 _[r
15+0x 30],</w>
mov_rax_qword_ptr_[rbp-0x 6
mov_eax_dword_ptr_[rsp+0x 38],</w>
lea_rdi_[rsp+0x 30],</w>
shl_rax _6,</w>
_r13 w,</w>
jne_0xffffffffffffffd 8,</w>
call_0xfffffffffff 8b
mov_rcx_qword_ptr_[r cx+0x
_0xffffff ea,</w>
4 ]_4,</w>
cmp_qword_ptr_[rbp-0x 28]_0,</w>
cmp_qword_ptr_[r 15+0x
mov_word_ptr_[r ax+0x
mov_dword_ptr_[rsp+0x1 4]_0,</w>
movdqa_xmm3 _xmmword_ptr_[r
mov_r12 _rbx,</w>
mov_qword_ptr_[rsp+0x8 0]_0,</w>
cmp_rax _rsi,</w>
cmp_r13d _1,</w>
cmp_qword_ptr_[rbp-0x 20]_0,</w>
mov_rcx_qword_ptr_[r ax+0x
_0x4 1,</w>
mov_dword_ptr_[rsp+4] _esi,</w>
1 f7
mov_rax_qword_ptr_[r di+0x10],</w>
lea_rax_[rax +rax*2],</w>
lea_r13d _[r
and _byte_ptr_[r
f b],</w>
movdqa_xmm4 _xmm2,</w>
mov_dword_ptr_[rsp+0x1 0]_0,</w>
pop _r10,</w>
mov_dword_ptr_[r si+0x1
cmp_qword_ptr_[rsp+ 8]_0,</w>
mov_rax_qword_ptr_[rsp+0x 80],</w>
jmp_0xffffffffffff b
jne_0x5 1,</w>
jmp_0x b,</w>
c 9],</w>
d 40],</w>
call_0xfffffffffffc 7
sub _r13
_0x3 e8,</w>
sub_eax _dword_ptr_[rbp-0x
sub _r13d
mov_dword_ptr_[r12 ]_eax,</w>
cmp_al _0x7
mov_eax_dword_ptr_[r sp+0x1
jmp_0x1 f,</w>
mov_ecx _0x2
lea_rdx_[rip+0x 13
mov_qword_ptr_[rsp] _rdi,</w>
mov_ebx _ecx,</w>
mov_qword_ptr_[rsp+0x2 8]_rsi,</w>
mov_dword_ptr_[rsp+0x1 8]_0,</w>
+rcx *2],</w>
mov_rcx_qword_ptr_[r ax+0x10],</w>
_0xf e,</w>
mov_eax_dword_ptr_[r 12],</w>
je_0x7 5,</w>
f 3],</w>
mov_rcx_qword_ptr_[r sp+0x1
_0x5 d,</w>
movsd_xmm0 _qword_ptr_[rbp-0x
inc _ebx,</w>
mov_qword_ptr_[rsp+0x10] _r8,</w>
je_0x6 8,</w>
bp +2],</w>
mov_edx _r8d,</w>
+rcx +0x
jne_0xffffffffffffffd c,</w>
7 7],</w>
add_qword_ptr_[r bp-
sub_edx _r9d,</w>
je_0x7 0,</w>
jmp_0xffffffffffffe f
mov_esi_0x2 000,</w>
mov_dword_ptr_[rsp+0x4 0]
mov_byte_ptr_[r di
lea_rsi_[rip+0x 2c
add _r11
2 38],</w>
psrldq _xmm3
call_0xfffffffffff 98
1 ]_rax,</w>
mov_rax_qword_ptr_[rbx+0x 28],</w>
jne_0xffffffffffffffd 6,</w>
cmp_rax _qword_ptr_[rip+0x
jmp_0x2 2,</w>
cmp_ bpl
call_0xffffffffffffd 7
dx +rax*8],</w>
cmp_eax _ecx,</w>
add_rax _0x6
mov_rax_qword_ptr_[rax+0x e0],</w>
call_0xfffffffffffb a
jne_0x4 6,</w>
8 f],</w>
1 18],</w>
call_0xfffffffffffd 5
3 0]_eax,</w>
lea_rdx_[rsp+0x 40],</w>
jmp _qword_ptr_[r
movdqa_xmm3 _xmm4,</w>
shl_rax _cl,</w>
sub_rsp _0x4
imul _edx,</w>
mov_edi_0x4 4
mov_rdx_qword_ptr_[r di+0x
_r1 1b
lea_rcx_[r sp+0x10],</w>
jne_0x3 a,</w>
cmp_eax _8,</w>
mov_rax_qword_ptr_[rbp-0x 1c0],</w>
8] _0x10,</w>
mov_eax_dword_ptr_[r 15],</w>
mov_dword_ptr_[rsp+0x b
mov_rsi_qword_ptr_[r bx+0x10],</w>
jmp_0xffffffffffff fff
mov_ecx _0x20,</w>
add_rdi _qword_ptr_[r
mov_rdi_qword_ptr_[rsp+0x 78],</w>
8 ]_8,</w>
mov_edx_dword_ptr_[rbp-0x 28],</w>
lea_r8_[rip+0x 2
mov_qword_ptr_[rsp+0x7 8]_0,</w>
mov_ecx_dword_ptr_[r bx+0x28],</w>
_0xfffffff 9,</w>
lea_rdi_[r ip-0x
mov_rax_qword_ptr_[rax+0x 58],</w>
mov_edi _5,</w>
y s
ys call
yscall ,</w>
s yscall,</w>
mov_r15 _rcx,</w>
call_0xffffffffffff 6d
2 c]
6 ]_1,</w>
lea_rsi_[rip+0x 28
12 0
shr _rsi
mov_dword_ptr_[rax+0x1 0]_edx,</w>
afb 60,</w>
mov_r9 _qword_ptr_[rsp+0x20],</w>
je_0x7 4,</w>
jne_0xffffffffffffffd f,</w>
call_0xffffffffffff 6b
call_0x2 f
mov_dword_ptr_[rsp+ 8]_ecx,</w>
lea_rdx_[rip+0x 20
lea_r8_[rip+0x 10
1b 8],</w>
sub sd
seta _dl,</w>
mov_r8d _ebp,</w>
call_0xfffffffffffb e
3 ]_al,</w>
cmp_rdi_0x6 afb60,</w>
jne_0xffffffffffffffd d,</w>
e d],</w>
7 b],</w>
call_0xffffffffffff7 a
c 1],</w>
11 +r
lea_ebp _[r
sub _r14d
mov_eax _0xffff8703,</w>
cmp_rbx _r12,</w>
call_0xfffffffffff 8c
add _qword_ptr_[rsp+0x
mov_rcx_qword_ptr_[rbp-0x 20],</w>
c ]_2,</w>
3 8]_eax,</w>
mov_eax_dword_ptr_[r di+0x1
mov_rdx _r10,</w>
mov_rdi_qword_ptr_[rsp+0x 80],</w>
mov_r9 _qword_ptr_[rbp-0x
mov_eax_dword_ptr_[rsp+0x 2c],</w>
mov_rax_qword_ptr_[rsp+0x 90],</w>
lea_rdx_[rip+0x 10
movzx_ebp _byte_ptr_[r
mov_r8d _edi,</w>
d 9],</w>
ja_0xffffffffffff f
e e],</w>
_0x10 8,</w>
call_0xffffffffffffa f
mov_rsi_qword_ptr_[rsp+0x 68],</w>
8 ]_4,</w>
jne_0xffffffffffffffd 7,</w>
call_0xfffffffffff 94
lea_rax_[rip+0x 22
push _1,</w>
jne_0x4 0,</w>
shl _esi
mov_dword_ptr_[rsp+0x 2c]_eax,</w>
mov_r9d _ebx,</w>
lea_rsi_[rip+0x 30
set l
call_0x 6b
or_dword_ptr_[r ax+0x
mov_rsi_qword_ptr_[r bp+8],</w>
cmp_edx _3,</w>
cmp_dword_ptr_[r 15+0x
_0xffff870 6,</w>
mov_qword_ptr_[rsp+0xa 8]_rax,</w>
mov_edx_dword_ptr_[r ax+0x18],</w>
_ sil
lea_rdx_[r sp+0x1
je_0x7 3,</w>
mov_r13 _r8,</w>
call_0x4 b
call_0x 8b
movzx_edx_byte_ptr_[r bp-0x
mov_edx_dword_ptr_[r 12+0x
beb c0,</w>
mov_dword_ptr_[rbp-0x 14]
mov_rdx_qword_ptr_[r 12],</w>
sub _r9d
sete _dil,</w>
lea_rsi_[rip+0x 34
cmp_byte_ptr_[r ip+0x20
mov_r15 _r14,</w>
mov_qword_ptr_[rbp-0x5 8]_rax,</w>
mov_edx_dword_ptr_[r sp+0x10],</w>
jne_0x4 d,</w>
je_0x7 7,</w>
8] _r9d,</w>
movzx_r12d _byte_ptr_[r
movzx_eax_byte_ptr_[r di],</w>
je_0x7 8,</w>
e 6],</w>
mov_edi _esi,</w>
mov_qword_ptr_[rsp+0x1 8]_rsi,</w>
call_0xfffffffffffff 3
19 0],</w>
cmovne _eax
mov_dword_ptr_[rax+0x1 0]_1,</w>
cmp_rdi_0x6 bebc0,</w>
64 ]_eax,</w>
+rax -1],</w>
mov_rsi_qword_ptr_[r 14],</w>
and_eax _edx,</w>
call_0xffffffffffff 6a
mov_rax_qword_ptr_[rbp-0x f
mov_r12 _rsp,</w>
mov_qword_ptr_[rax+0x 28]_rdx,</w>
jne_0x4 1,</w>
e 0]_0,</w>
sub_rsp _0xa8,</w>
mov_rdx_qword_ptr_[rbx+0x 20],</w>
sub_rax _qword_ptr_[rbp-0x
jne_0x 30
cmp_rdx _rsi,</w>
cmova e
+rdx +0x1
sub_rsp _0x80,</w>
lea_rsi_[rip+0x 27
add_rsp _0x80,</w>
mov_rbx _rsp,</w>
cx +2],</w>
lea_r14d _[r
9 +8],</w>
20] _rdx,</w>
mov_edi _ecx,</w>
lea_rdi_[r bp+0x
e 7],</w>
cmp_dword_ptr_[r bx+0x1
call_0xfffffffffff 8a
test_r 9b
mov_rsi_qword_ptr_[r bp-8],</w>
mov_rsi_qword_ptr_[r 15],</w>
mov_r12_qword_ptr_[r ip+0x2
imul _rdx,</w>
sub_rsi _rdi,</w>
8] _r12d,</w>
mov_rax_qword_ptr_[rip+0x2 10
lea_r9d _[r
jne_0xffffffffffffffd 5,</w>
_0x8 4,</w>
_0x6 e,</w>
add_rdx _rsi,</w>
mov_rax_qword_ptr_[r 14+8],</w>
mov_word_ptr_[r ax
lea_rdx_[rax +4],</w>
d 1],</w>
call_0x 60
1 70
mov_qword_ptr_[rsp+0x10] _rdi,</w>
8] _0xc,</w>
jne_0x4 8,</w>
mov_dword_ptr_[rsp+8] _r8d,</w>
cmp_byte_ptr_[r ax+0x
8 ]_al,</w>
jne_0x3 f,</w>
je_0x7 e,</w>
test_al _0x10,</w>
jmp_0xfffffffffffff aa
cmp_byte_ptr_[r bp+0x
e 3],</w>
mov_byte_ptr_[r bx+
mov_rax_qword_ptr_[rbx+0x1 20],</w>
jmp _0x20,</w>
mov_r10_qword_ptr_[r sp+0x10],</w>
lea_rsi_[rip+0x 26
movsx_edi _byte_ptr_[r
lea_rax_[rbp-0x 40],</w>
_r10 w,</w>
call_0x 5e
mov_qword_ptr_[rax+0x1 8]_0,</w>
jg e_0xffffffffffffff
13 -1],</w>
mov_eax _r9d,</w>
jmp_0xffffffffffffffb 8,</w>
call_0xffffffffffff 8e
13 ]
sub_rsi _rax,</w>
mov_r8d _r13d,</w>
mov_qword_ptr_[rsp+0x8 0]_rax,</w>
mov_ecx _r8d,</w>
mov_dword_ptr_[rax+ 8]_edx,</w>
test_r8b _r8b,</w>
st (
mov_eax_dword_ptr_[r 13],</w>
bx+0x 40],</w>
_ st(
sub _r15
mov_qword_ptr_[rax] _rbx,</w>
4 ]_2,</w>
movaps _xmm2_xmmword_ptr_[r
call_qword_ptr_[r ip+0x
lea_rsi_[rip+0x 3c
lea_r12_[r sp+0x10],</w>
dx+0x1 4],</w>
b4 10,</w>
mov_qword_ptr_[rbp-0x4 8]_rdi,</w>
e b],</w>
cmp_dword_ptr_[r 12+0x
add_dword_ptr_[r ip+0x2
call_0x 5d
sub_rax _qword_ptr_[r
mov_qword_ptr_[rbp-0x5 0]_rax,</w>
call_0x1 9
call_0x 67
movzx_eax_byte_ptr_[r bx+
cmp_eax _0x10
mov_ebp _ecx,</w>
jmp_0xfffffffffff e
call_0xffffffffffffe 4
mov_rax_qword_ptr_[rbp-0x 7
mov_esi_dword_ptr_[rbp-0x 1c],</w>
movzx_edx _ax,</w>
mov_r10d_dword_ptr_[r sp+8],</w>
mov_qword_ptr_[rsp+0x10] _r9,</w>
lea_rsi_[rip+0x 22
e f],</w>
add_rsp _0x2
sub_rdx _rcx,</w>
mov_rdx_qword_ptr_[rsp+0x 68],</w>
jmp _r
mov_rax_qword_ptr_[rbp+0x 20],</w>
call_0xfffffffffffa b
mov_eax_dword_ptr_[r 14],</w>
mov_r8d_dword_ptr_[rsp+0x c],</w>
mov_qword_ptr_[rbp +8]_rax,</w>
lea_rsi_[rip+0x 1e
jne_0x 34
jmp_0xffffffffffffffc 0,</w>
not _edx,</w>
mov_rdi_qword_ptr_[r di+0x10],</w>
mov_edx _7,</w>
mov_eax _0x40
0000 0000,</w>
or _r8d
lea_rbp_[r sp+0x10],</w>
1 ]_4,</w>
mov_rax_qword_ptr_[rip+0x2 4
) ,</w>
jmp _8,</w>
call_0x2 6
mov_eax_dword_ptr_[rbp-0x 3c],</w>
test_byte_ptr_[r 14+0x
_0xf 0,</w>
movzx_r9d _word_ptr_[r
3c ]_1,</w>
1 bb
cmp_dword_ptr_[rbp- 4]_0,</w>
mov_rdx_qword_ptr_[rsp+0x 60],</w>
je_0x6 f,</w>
call_0x 6a
sub_rax _rcx,</w>
jl e_
call_0x 70
test_byte_ptr_[r dx+0x1
mov_esi_0x1 6,</w>
movsxd_rax _edx,</w>
mov_edx_dword_ptr_[r sp+0x1c],</w>
_xmm1 1,</w>
mov_edx_dword_ptr_[r 15+0x
_r14 w,</w>
di -1],</w>
cmp_r8 b
call_0x 66
add_rax _0x28,</w>
call_0xffffffffffff 67
add_rsp _0x50,</w>
test _ch
mov_dword_ptr_fs:[r ax]
mov_eax _0x7f2bb
mov_dword_ptr_[rbp-0x c
b 5],</w>
mov_rax_qword_ptr_[rbp-0x1 28],</w>
mov_byte_ptr_[r bx+0x1
lea_rdi_[rip+0x 28
je_0x7 d,</w>
call_0xfffffffffff 8e
mov_r8d_0x4 c0
mov_eax _3,</w>
mov_dword_ptr_[r 13+0x1
1 8d
mov_rcx_qword_ptr_[rsp+0x 40],</w>
mov_dword_ptr_[r di]_0,</w>
lea_rax_[rbp-0x 10
je_0x7 1,</w>
add_rdi _2,</w>
_0x3 4,</w>
mov_edi _8,</w>
_qword_ptr_[rsp+0x 80],</w>
cmp_eax _ebx,</w>
mov_dword_ptr_[rsp+0x c
_0x6 5,</w>
mov_rcx _0x10,</w>
cmp_byte_ptr_[r dx+
jmp_0xffffffffffffffb 0,</w>
jne_0xffffffffffffffd 9,</w>
xor_r 8d
jne_0x4 9,</w>
cx-0x 1010101],</w>
a 2],</w>
cmp_ecx _dword_ptr_[r
mov_rdx_qword_ptr_[r 14+0x
a a],</w>
mov_r9 _qword_ptr_[rsp+0x28],</w>
jne_0xffffffffffffffc f,</w>
cmov b
a 0]
6c ]_eax,</w>
5 2
ff e,</w>
and_eax _0xf,</w>
jne_0x b
ss _xmm0
call_0xfffffffffffb 7
b 6],</w>
_- 3,</w>
sub_rax _4,</w>
mov_qword_ptr_[rsp+0x1 8]_r8,</w>
jne_0x4 2,</w>
call_0x 3f
cmp_rbp _rbx,</w>
1 9d
jne_0x4 5,</w>
test_r14b _r14b,</w>
mov_esi _edi,</w>
cmove _rax
0] _r11,</w>
mov_eax_dword_ptr_[r bp-8],</w>
h l
8] _edi,</w>
mov_eax_dword_ptr_[rsp+0x 24],</w>
_[rdx +r
add_rsp _0xa8,</w>
mov_qword_ptr_[rbp-0xb 8]_rax,</w>
cmp_rdx _1,</w>
9 ]_1,</w>
shr_r9d _cl,</w>
movsx_edx _byte_ptr_[r
lea_rsi_[r bp+0x
or _ebx
movsxd_rdx _ebx,</w>
mov_eax_dword_ptr_[rsp+0x 30],</w>
jne_0x4 3,</w>
mov_rbx _r13,</w>
mov_rax_qword_ptr_[rip+0x2 13
call_0xfffffffffffff ea
b e],</w>
bx+0x 38],</w>
b 2],</w>
4 ]_al,</w>
lea_rdi_[rip+0x 11
call_0xffffffffffff 5c
call_0x4 a
je_0x7 a,</w>
and _rsp
_0x6 3,</w>
pcmpistri _xmm0
mov_rdx_qword_ptr_[r 12+0x
call_0xfffffffffffff ec
sub_rax _rdi,</w>
pmovmskb _r9d
lea_rdi_[rip+0x 22
1 fc
si +rax],</w>
8 3
6 60],</w>
18 0,</w>
and_eax _ecx,</w>
si *
je_0x7 c,</w>
call_0xffffffffffff 60
mov_qword_ptr_[rbp-0x 11
mov_rdi_qword_ptr_[r ax+0x18],</w>
movzx_r13d _byte_ptr_[r
d 8]_0,</w>
lea_rsi_[rsp+0x 40],</w>
call_0xfffffffffffb c
mov_qword_ptr_[rsp+0x9 0]_0,</w>
test_byte_ptr_[r cx+0x
mov_eax_dword_ptr_[r si],</w>
bp +rax],</w>
mov_rsi_qword_ptr_[r dx],</w>
cmp_eax _0xd,</w>
8 +0x10],</w>
xor _esi
or _ah
mov_r9 _rdi,</w>
cmp_qword_ptr_[r 13+0x
call_0xfffffffffffff ed
call_0x 8c
c 2],</w>
mov_rdx_qword_ptr_[rax+0x 28],</w>
cmove_eax _ecx,</w>
_0x1 d,</w>
mov_rdi_qword_ptr_[rsp+0x 90],</w>
mov_rdi_qword_ptr_[r 13+8],</w>
call_0xffffffffffff 5d
movdqu_xmmword_ptr_[r di
add_eax _2,</w>
_ si,</w>
9 ]_rax,</w>
jne_0x4 7,</w>
mov_dword_ptr_[rsp+0x2 c]
imul _rdx
lea_rcx_[rip+0x 6
a d],</w>
sub_r11 _0x10,</w>
mov_rax_qword_ptr_[r 12+0x10],</w>
15 ]
10 +0x1
lea_rsi_[rip+0x 36
call_0xfffffffffffff eb
and_rsp _0xfffffffffffffff0,</w>
_zmm word_ptr_[r
1b 0],</w>
hl t</w>
call_0xfffffffffffff dd
lea_rdi_[rip+0x 1a
call_0x2 4
lea _r10d
jne_0x c
push _rsp,</w>
mov_rbx _r8,</w>
call_0xfffffffffff 87
mov_rdx_qword_ptr_[rax+0x 30],</w>
di+0x 38],</w>
6 ]_ax,</w>
mov_qword_ptr_[rax+0x 5
sub_eax _ecx,</w>
mov_qword_ptr_[rbx+ 8]_0,</w>
lea_rax_[rsp+0x f0],</w>
cmp_rdi _rbp,</w>
call_0x 6d
jmp_0x2 1,</w>
cmp_eax _esi,</w>
mov_rax_qword_ptr_[rip+0x2 14
cmp_dword_ptr_[rsi+ 4]_1,</w>
4 40],</w>
mov_rdi_qword_ptr_[rbx+0x 30],</w>
mov_eax_dword_ptr_[r bx+0x1
cmove _rdx_rcx,</w>
pand_xmm 9
pand_xmm 7
mov_r8d _dword_ptr_[rbp-0x
- 8]_0,</w>
movdqa_xmm 11
a 5],</w>
or _edi
mov_rax_qword_ptr_[rip+0x2 12
mov_dword_ptr_[r 15+
lea_rax_[rsp+0x 50],</w>
mov_r12d _edi,</w>
jmp_0xffffffffffffff 90,</w>
jmp_0x2 3,</w>
b a],</w>
_rbx _rax,</w>
call_0x 8d
add_rsp_0x 98,</w>
4 10],</w>
3c 0],</w>
mov_rsi_qword_ptr_[r si],</w>
mov_dword_ptr_[rax ]_1,</w>
call_0xfffffffffffb f
and_eax _7,</w>
55 55
test_byte_ptr_[r 13+0x
jmp_0xffffffffffffffd 0,</w>
sub _r9
je_0x 80,</w>
n t
movabs_rax _0x7
mov_qword_ptr_[rbp ]_0,</w>
+rax*4 +0x
lea_rsi_[rip+0x 37
and_edx _0xffffff
mov_qword_ptr_[rax] _rcx,</w>
mov_dword_ptr_[rbp-0x b
8 +1],</w>
mov_eax_dword_ptr_[r bx+4],</w>
call_0xffffffffffffd 8
7 8]_rax,</w>
mov_dword_ptr_[rbp-0x 24]_eax,</w>
lea_esi _[rax
jmp_0xffffffffffffffa 0,</w>
call_0xffffffffffff 4a
cmp_r12 d_eax,</w>
cmp_ecx _edx,</w>
add_rax _rdi,</w>
lea_rsi_[rip+0x 3d
lea_rsi_[rip+0x 2b
lea_rbx _[rax
mov_rbx_qword_ptr_[rsp+0x 38],</w>
mov_esi_dword_ptr_[r ax+0x
cmp_qword_ptr_[r dx
movzx_eax_byte_ptr_[r si],</w>
mov_r9 _r8,</w>
b ]_0,</w>
64 ]_0,</w>
palignr_xmm2 _xmm3
lea_rdx_[r ax+0x10],</w>
lea_rcx_[rip+0x 4
mov_r10_qword_ptr_[r sp+0x18],</w>
lea_rdi_[rip+0x 17
lea_rdx_[rbp-0x 20],</w>
cmp_qword_ptr_[rbp-0x 38]_0,</w>
cmp_qword_ptr_[r ax+
je_0x7 b,</w>
test_byte_ptr_[rax+0x4 28]_8,</w>
mov_r8 _qword_ptr_[rsp+0x20],</w>
mov_qword_ptr_[rsp+0x1 8]_rdi,</w>
mov_byte_ptr_[r 12
2+1 ]_8,</w>
sub_rsp_0x 98,</w>
cmp_eax _0x5
_0x2 6,</w>
mov_eax _0xfffffffe,</w>
call_0xfffffffffff 86
movabs _rsi
lea_rax_[rbp-0x4a d40],</w>
call_0x 56
add_rbp _rax,</w>
sub_eax _dword_ptr_[r
or _rdx_rax,</w>
mov_rbp_qword_ptr_[r ip+0x
mov_ebp _0x1
mov_r9d _r12d,</w>
mov_ecx_dword_ptr_[r sp+0x10],</w>
call_0xffffffffffff 5a
lea_rcx_[rip+0x d
mov_dword_ptr_[rsp+0x 20]_0,</w>
mov_rcx_qword_ptr_[r dx],</w>
mov_rbx _r14,</w>
mov_eax_dword_ptr_[rbp-0x 38],</w>
jmp_0x2 6,</w>
c 5],</w>
c e],</w>
lea_rsi_[rip+0x 3b
lea_r8_[rip+0x 7
10 _xmm11,</w>
mov_rdx_qword_ptr_[r 13+0x
4] _r8d,</w>
dx +2],</w>
cx+0x 20],</w>
lea_r13_[r sp+0x10],</w>
movsxd_rax_dword_ptr_[r ip+0x2
mov_edx_dword_ptr_[r 14+0x
jmp _0x28,</w>
call_0xfffffffffffa c
mov_r8d _0x40
cmp_dword_ptr_[r di+0x
call_0xfffffffffffa d
40 ]_xmm0,</w>
movdqa_xmm 8_xmm1,</w>
mov_dword_ptr_[rbp-0x e
call_0xfffffffffffd 3
lea_rax_[rbp-0x 30],</w>
jne_0x4 b,</w>
jbe_0xffffffffffff f
add_rdi _rax,</w>
mov_r14 _r8,</w>
cx +0x18],</w>
2 98],</w>
si +2],</w>
lea_rsi_[rip+0x 2e
jmp_0x2 a,</w>
cmp_al _2,</w>
mov_edx_dword_ptr_[r sp+0x18],</w>
lea_rcx_[rip+0x 3
lea_rax_[rip+0x 24
por_xmm1_xmm 8,</w>
pcmpgtb_xmm9 _xmm1,</w>
pcmpgtb_xmm 8_xmm5,</w>
pcmpgtb_xmm 11
pcmpgtb_xmm 10_xmm5,</w>
pand_xmm8_xmm 9,</w>
pand_xmm8_xmm 7,</w>
pand_xmm10_xmm 7,</w>
pand_xmm 10_xmm11,</w>
movdqa_xmm9 _xmm6,</w>
movdqa_xmm11 _xmm6,</w>
1 dd
mov_r13_qword_ptr_[r ax],</w>
b d],</w>
l d
jmp_0xffffffffffffffa 8,</w>
1 ec
lea_rdi_[rip+0x 18
call_0xfffffffffffff ee
mov_ecx_dword_ptr_[r ax+0x28],</w>
b f],</w>
b 7],</w>
sub_rcx _1,</w>
je_0x9 6,</w>
_x word_ptr_[r
lea_rax_[rip+0x 3
sub_rsp _rax,</w>
psrldq _xmm0
cmp_edx _-1,</w>
jmp_0xffffffffffffffc b,</w>
call_0xffffffffffff 66
call_0xfffffffffffc 6
pmovmskb_edx _xmm0,</w>
neg _rax,</w>
c a],</w>
movzx_r10d _byte_ptr_[r
cmp_ebp _eax,</w>
mov_rcx_qword_ptr_[rbp-0x 10],</w>
mov_r12 _r15,</w>
je_0x e
call_0x 7b
5a 8],</w>
0 c],</w>
lea_rdi_[rip+0x 27
cmp_rdx _-1,</w>
2 60],</w>
cmp_ebx _dword_ptr_[r
je_0x8 1,</w>
call_0xffffffffffffd 5
mov_dword_ptr_[rsp+0x 24]_eax,</w>
cvtsi2sd_xmm0 _rax,</w>
c 6],</w>
movdqa_xmm 10_xmm2,</w>
_0x2 0000,</w>
pop _r11,</w>
bp *8],</w>
lea_rdi_[rip+0x e
jle_0xffffffffffff fe
cmp_byte_ptr_[r bp+
mov_rsi_qword_ptr_[rsp+0x 70],</w>
cmp_eax_0xffff86 f6,</w>
+rax* 2
mov_qword_ptr_[rsp+0x2 0]_rcx,</w>
_xmm3 _xmmword_ptr_[r
or _dword_ptr_[rbp-0x
mov_rax_qword_ptr_[r 13+8],</w>
jne_0xfffffffffffff dd
mov_edx_0x4 00,</w>
movdqa_xmm3_xmmword_ptr_[r di],</w>
mov_edi_0x4 3
jmp_0xfffffffffffff 9
call_0x 90
1 ea
mov_rax_qword_ptr_[r di+0x1
mov_qword_ptr_[rbp-0x4 0]_rsi,</w>
mov_esi_0x5 0,</w>
mov_dword_ptr_[rbp-0x1 c]_esi,</w>
di +2],</w>
d a],</w>
mov_qword_ptr_[rbx+0x1 0]_0,</w>
call_0xffffffffffff 4c
por_xmm2 _xmm10,</w>
pcmpgtb_xmm11 _xmm2,</w>
jmp_0xffffffffffffffc e,</w>
cmp_qword_ptr_[r 14+0x
pmovmskb_r9d _xmm2,</w>
mov_rax_qword_ptr_[rip+0x2 18
mov_eax _0x10
and_r10 _0xfff,</w>
mov_dword_ptr_[rsp+0x1 0
je_0xfffffffffffff dd
cmp_r12 b
lea_eax_[rdx -0x
]_ bpl,</w>
mov_rbx _r15,</w>
mov_r8d _r14d,</w>
add_rbp _0x10,</w>
add_rsp _0x4
and _al
jmp_0xffffffffffffffc 8,</w>
call_0x 86
mov_r13 _rbx,</w>
movsxd_rsi _eax,</w>
mov_rcx_qword_ptr_[rbp-0x 18],</w>
mov_ebp _0xffffffff,</w>
2c 0],</w>
shr_edx _0x10,</w>
jmp_0xfffffffffffff 4
call_0xffffffffffff7 d
v pand
mov_dword_ptr_[r 14+0x1
cmp_qword_ptr_[rbp-0x 30]_0,</w>
call_0xfffffffffffa a
4 ]_ax,</w>
js _0x5
_r15 w,</w>
1] _0x80,</w>
mov_rdx_qword_ptr_[r 15+0x
lea_rsi_[rip+0x 4c
lea_rdx_[rip+0x 15
jne_0x4 a,</w>
sub_rsp _0x60,</w>
movsxd_rax_dword_ptr_[r dx+rax*4],</w>
lea_rax_[r cx
jne_0xffffffffffffffd 3,</w>
2 00
sub_rsp _0x1000,</w>
push _r9,</w>
mov_esi_0x4 3
cmp_qword_ptr_[rsp+0x1 0]_0,</w>
a 6],</w>
mov_rdx_qword_ptr_[r 13],</w>
mov_rdi_qword_ptr_[rbx+0x 28],</w>
mov_edx_dword_ptr_[r sp+4],</w>
jg_0xffffffffffff fe
+rax -0x
lddqu_xmm0_xmmword_ptr_[r si-0x
jne_0xffffffffffffffd 4,</w>
_word_ptr_[r sp+0x
lea_rdi_[rip+0x 26
jmp_0xffffffffffffffb 2,</w>
call_0xffffffffffff 9f
c d],</w>
movsxd_rbx _ebx,</w>
lea_rdx_[r bx+0x
call_0xfffffffffffff 9
call_0xffffffffffff 50
call_0xfffffffffffc 4
a 3],</w>
mov_rdx_qword_ptr_[r di],</w>
mov_edx_0x1 000,</w>
cmp_qword_ptr_[r ax]_0,</w>
vpand n
vpandn _xmm
mov_rbp _r12,</w>
shr _edi
call_0xffffffffffffd 6
call_0xffffffffffff 47
call_0x 9c
test_r15b _r15b,</w>
lea_rsi_[r sp+0x18],</w>
jmp_0x2 7,</w>
_ymm word_ptr_[r
cmp_eax _0x20,</w>
mov_rbx_qword_ptr_[rsp+0x 20],</w>
push_qword_ptr_[rbp-0x 30],</w>
0] _0x20,</w>
movsd _qword_ptr_[rbp-0x
_qword_ptr_[r si],</w>
sbb _rdx
mov_r14d _esi,</w>
call_0xffffffffffff 5e
1c 8],</w>
mov_qword_ptr_[rsp+0x1 8]_r9,</w>
lea_rcx_[r sp+8],</w>
call_0xffffffffffff 57
movdqa _xmmword_ptr_[r
8] _r8d,</w>
shl_eax _cl,</w>
mov_eax_0x6 0003,</w>
8] _0x6
34] _0x20,</w>
d 5],</w>
call_0xfffffffffffa e
si *8],</w>
jne_0x4 e,</w>
and_eax _0x3f,</w>
a 7],</w>
cmp_esi _eax,</w>
call_0x2 8
cmp_dword_ptr_[rbp-0x 14]_0,</w>
b 3],</w>
mov_rbx_qword_ptr_[r bx+8],</w>
jne_0xffffffffffffffd 1,</w>
jmp_0xffffffffffffffa 4,</w>
call_0xfffffffffffff cc
10 0,</w>
mov_byte_ptr_[r dx+0x
8 00,</w>
c b],</w>
8] _r13d,</w>
dx+0x 30],</w>
4b 00
mov_word_ptr_[r sp+
mov_rax_qword_ptr_[rbp-0x c
mov_qword_ptr_[r12 +8]_rax,</w>
mov_edi_0x4 0,</w>
movaps_xmmword_ptr_[r di+0x
mov_rax_qword_ptr_[rbp-0x10 8],</w>
mov_r15 _r13,</w>
] _0x40,</w>
movsxd_rsi _dword_ptr_[r
mov_esi_0x4 1c
lea_rdx_[rip+0x 16
mov_rax_qword_ptr_[rdi+0x 20],</w>
mov_qword_ptr_[rsp+0x9 0]_rax,</w>
jne_0x5 e,</w>
mov_rax_qword_ptr_[rbp-0x e0],</w>
mov_r8 _qword_ptr_[rsp+0x28],</w>
lea_rsi_[rip+0x 3a
call_0x 9a
mul sd_xmm0_xmm1,</w>
call_0xffffffffffff 4d
shr_eax _0x1f,</w>
lea_rdx_[rax *4],</w>
jmp_0xffffffffffffff 3
cmp_dl _0xa,</w>
call_0xfffffffffffff e0
call_0xffffffffffff 4b
_edx _eax,</w>
si+0x 30],</w>
mov_ecx_0x40 b410,</w>
jne_0xffffffffffffffd 2,</w>
mov_esi _0x3a,</w>
je_0x7 f,</w>
1d 0],</w>
14 0
12 +2],</w>
je_0x9 d,</w>
lea_rdx_[r sp+0x18],</w>
sbb _dl
sbb_dl _0,</w>
mov_r15d _edx,</w>
lea_rcx_[rdx +2],</w>
a e],</w>
cmp_eax _0xb,</w>
7 8]_1,</w>
lea_rdi_[rip+0x 24
and_rdi _0xfffffffffffffff8,</w>
movzx_edx _dx,</w>
jg _0x4
mov_ecx_dword_ptr_[r sp+0x18],</w>
call_0x 32
sar_rax _3,</w>
movzx_eax_byte_ptr_[r ax+0x4
mov_edi _0x28,</w>
c f],</w>
8 ]_ax,</w>
8 0]_rax,</w>
lea_r15d _[r
lea_edx_[rax -0x
jmp_0xffffffffffffffa d,</w>
12+0x 30],</w>
11 +rdx*4],</w>
sub_rdx _1,</w>
movsd_qword_ptr_[r sp+
lea_rsi_[rip+0x 47
jne_0x5 2,</w>
cmp_byte_ptr_[rbp ]_0,</w>
mov_ecx_dword_ptr_[r ip+0x20
shl _rbp
mov_qword_ptr_[rbp-0x 12
mov_edi_0x4 1d
mov_edi_0x4 1c
je_0x9 9,</w>
mov_rax_qword_ptr_[r si+0x10],</w>
mov_esi_0x4 4
mov_ecx _edi,</w>
lea_rdi_[r ax+0x
mov_esi_0x2 00,</w>
mov_rdi_qword_ptr_[rbp+0x 18],</w>
shl_rdx _2,</w>
mov_dword_ptr_[rsp+0xc] _r8d,</w>
je_0x9 3,</w>
call_0xfffffffffff 88
sub _qword_ptr_[r
bx -8],</w>
7 3
d 2],</w>
30 0],</w>
call_0x 80
1d 8],</w>
_qword_ptr_fs: [r
jne_0xfffffffffffffff 5,</w>
je_0xffffffffffffff ea,</w>
lea_rdi_[rip+0x 1b
mov_qword_ptr_[rsp+0x2 8]_rcx,</w>
mov_edx_dword_ptr_[r sp],</w>
div _rcx,</w>
mov_r9 _rcx,</w>
mov_qword_ptr_[rdx +
_xmm 5,</w>
0] _0x40
+rax +2],</w>
sbb _edx_edx,</w>
mov_eax_dword_ptr_[rax+0x1 c],</w>
cmp_esi _dword_ptr_[r
c 7],</w>
mov_byte_ptr_[r bp+
call_0x 7a
a f],</w>
movzx_eax_byte_ptr_[r bp+0x
9 +
mov_r8d_dword_ptr_[r sp],</w>
mov_edi_0x4 c
2 ]_rax,</w>
or_eax _2,</w>
mov_rdx_qword_ptr_[rbp-0x 88],</w>
mov_r9d_dword_ptr_[r sp+8],</w>
mov_r14 _r13,</w>
mov_eax_dword_ptr_[r di+8],</w>
lea_rcx_[rip+0x a
di+rdx -0x
2 90],</w>
mov_qword_ptr_[rsp+0x1 8]_r10,</w>
mov_edx _9,</w>
mov_byte_ptr_[r di]_0,</w>
d ]_0,</w>
call_0xffffffffffffc 7
call_0xfffffffffffc 8
mov_qword_ptr_[rax+0x 20]_0,</w>
mov_edx_dword_ptr_[r ax+4],</w>
jne_0x d
jmp_0xffffffffffffffa c,</w>
call_0xfffffffffffff c0
or_edx _eax,</w>
jne_0x5 0,</w>
_rax _xmm0,</w>
f 8]_0,</w>
cmp_rsi _rdx,</w>
1 fd
sub_eax _2,</w>
d e],</w>
shr_rax _1,</w>
or_dword_ptr_[r bx+0x
mov_dword_ptr_[rbp-0x14] _edi,</w>
cmp_byte_ptr_[r di+
cmp_eax _0x2f,</w>
14 -1],</w>
mov_word_ptr_[r dx+0x1
cmp_rax _3,</w>
12 *8],</w>
or_rcx _0xffffffffffffffff,</w>
jne_0x 38
jmp_0xffffffffffffffb 6,</w>
1 28],</w>
lea_rdi_[rip+0x 19
q o
qo ,</w>
c qo,</w>
and_eax_0xfffffff d,</w>
mov_rax _rsp,</w>
mov_qword_ptr_[rsp+0x10] _r10,</w>
mov_ecx_0x4 00,</w>
cmp_dword_ptr_[r 13+0x
a b],</w>
_rdi _rax,</w>
_eax _xmm0,</w>
sp ]_xmm0,</w>
mov_dword_ptr_[rsp+0x5 0]
mov_rax_qword_ptr_[rip+0x2 19
mov_qword_ptr_[rsp+0x8 8]_0,</w>
jmp_0xffffffffffffff 98,</w>
cmp_rax _rbp,</w>
add_r12 _rax,</w>
shl_rcx _4,</w>
mov_eax_dword_ptr_[rax+0x 28],</w>
rep_ movs
mov_eax_dword_ptr_[rax+0x 30],</w>
di *4],</w>
cmp_r12 _rbx,</w>
call_0xffffffffffff 5b
jmp_0xffffffffffffffa e,</w>
call_0xffffffffffff 6e
15 -0x
jne_0xffffffffffffffd 0,</w>
di+0x e0],</w>
4 18],</w>
mov_eax_dword_ptr_[rbp-0x 30],</w>
jmp_0xffffffffffffffa 6,</w>
call_0xfffffffffffd 2
test _r11
mov_edx_0x c,</w>
lea_rsp_[rbp-0x 28],</w>
lea_rdx_[rip+0x 12
sbb_rdx _3,</w>
mov_rsi_qword_ptr_[r bp+0x18],</w>
mov_r15 _rbx,</w>
c 3],</w>
and _ax
mov_r9_qword_ptr_[r ip+0x2
mov_qword_ptr_[rsp+0x2 0]_rdx,</w>
d 6],</w>
2 70],</w>
mov_r8d _esi,</w>
cmp_edx _ecx,</w>
add_rax _rbp,</w>
mov_rax_qword_ptr_[rbx+0x 50],</w>
mov_esi_0x4 1d
_0x3 3,</w>
mov_r13 _r15,</w>
mov_r13 _r14,</w>
mov_qword_ptr_[rax+0x 6
cmp_ebx _-1,</w>
_0x3 5,</w>
lea_rsi_[rip+0x 3e
call_qword_ptr_[r bx+0x110],</w>
call_0x 35
jmp_0xfffffffffffff 9d
1 fa
jne_0x5 4,</w>
ja _0xa
xor_eax _dword_ptr_[r
jmp_0xffffffffffffffc 5,</w>
_0x8 0000,</w>
mov_rax_qword_ptr_[rip+0x2 17
3 c]
call_0x 9b
jmp_0xffffffffffff a
lea_rsi_[rsp+0x 50],</w>
mov_word_ptr_[r ax+0x1
lea_rsi_[rip+0x 38
di+0x1 0
jmp_0xfffffffffffff 9e
bp ]_0,</w>
1 80],</w>
mov_qword_ptr_[rax+0x3 0]_rdx,</w>
cmp_rdi _r13,</w>
_r13 d_eax,</w>
mov_rdx_qword_ptr_[rsp+0x 78],</w>
lea_rdx_[rip+0x 9
3 20],</w>
jmp_0xfffffffffffff 9f
call_qword_ptr_[r 9],</w>
sub_rdx _rsi,</w>
cmp_r14 _rax,</w>
mov_eax_dword_ptr_[rip+0x2 2
_0xf d,</w>
mov_rcx _r9,</w>
mov_r8d _r15d,</w>
9a 0,</w>
push _qword_ptr_[rip+0x
mov_rax_qword_ptr_[rip+0x 3
call_qword_ptr_[r ax+0x1
call_0x 87
je_0x 98,</w>
lea_rax_[rip+0x 7
22 1]_0x80,</w>
je_0x9 5,</w>
1e 8],</w>
19 8],</w>
1 fb
mov_qword_ptr_[rsp+0xa 0]_0,</w>
mov_esi_dword_ptr_[r bp+0x
jne_0x5 5,</w>
jmp_0xffffffffffffffb b,</w>
call_0xffffffffffff7 c
call_0x4 d
] _r13,</w>
28 0,</w>
mov_rdi_qword_ptr_[rip+0x 3
mov_rdi_qword_ptr_[rdi+0x 30],</w>
mov_dword_ptr_[rbp-0x 2c]_eax,</w>
jmp_0xffffffffffffffc 9,</w>
je_0x8 d,</w>
4 1c],</w>
rol _eax
d f],</w>
call_0xffffffffffff 3c
mov_qword_ptr_[r15 ]_rax,</w>
call_0xfffffffffffff bb
call_0xffffffffffff 3a
bp *4],</w>
cmp_byte_ptr_[r ax
cmove _rax_rdx,</w>
mov_r12 _rbp,</w>
mov_edi_dword_ptr_[rsp+0x c],</w>
jne_0x5 b,</w>
mov_dword_ptr_[rsp+0x2 8]_0,</w>
mov q
_0x c
je_0x8 e,</w>
call_0xffffffffffff 38
mov _dl
2 28],</w>
movsxd_rax _r12d,</w>
mov_rax_qword_ptr_[rbp-0x1 18],</w>
jne_0x6 8,</w>
jmp_0xffffffffffffffb f,</w>
jmp_0xffffffffffffffa b,</w>
f ld
000 1,</w>
or_eax _ecx,</w>
call_0x2 5
sub_ecx _1,</w>
mov_word_ptr_[r di-
mov_r11d_dword_ptr_[r sp+8],</w>
jmp_0xffffffffffffffb 9,</w>
call_qword_ptr_[r ax+0x18],</w>
_ bp,</w>
12 +rax],</w>
mov_dword_ptr_[rip+0x 3
mov_edx_dword_ptr_[r si],</w>
mov_dword_ptr_[rbp ]
mov_edi_dword_ptr_[r bx+0x
cmp_dword_ptr_[rbp-0x1c ]_0,</w>
mov_r12 _r14,</w>
lea_eax_[r cx-0x1010101],</w>
je_0x8 c,</w>
jb_0xffffffffffff fe
jne_0xffffffffffffffc 8,</w>
cmp_dword_ptr_[r ax+
call_0xffffffffffff7 b
ax+0x4 28],</w>
mov_r9 _rsi,</w>
mov_qword_ptr_[rbx+0x 28]_rax,</w>
mov_eax_dword_ptr_[rbp-0x 54],</w>
lea_rax_[rsp+0x 80],</w>
+rax* 8+8],</w>
mov_r8_qword_ptr_[r ax+8],</w>
mov_r12 _r13,</w>
jmp_0xffffffffffffffb 4,</w>
_qword_ptr_[rsp+0x 90],</w>
mov_qword_ptr_[rbp-0xc 8]_rax,</w>
sub_rcx _rdi,</w>
sp+0x10 ]_xmm0,</w>
mov_rsi _r11,</w>
jmp_0xffffffffffffffa a,</w>
mov_rcx_qword_ptr_[r bx+0x20],</w>
jne_0x5 6,</w>
mov_qword_ptr_[rsp+0x 20
ja_0xffffffffffff fd
mov_r9 _qword_ptr_[rsp+0x30],</w>
lea_rax_[rsp+0x 70],</w>
cmove _ebp_eax,</w>
_r8 _rax,</w>
lock _
lea_rax_[rsp+0x 60],</w>
and _rsi
xor_eax _dword_ptr_[rbp-0x
mov_rdx_qword_ptr_[rbp-0x 60],</w>
mov_rdi_qword_ptr_[rsp+0x 88],</w>
jne_0xffffffffffffffc b,</w>
jmp_0x2 c,</w>
mov_eax_dword_ptr_[r bx+0x10],</w>
je_0x8 a,</w>
8] _r14d,</w>
mov_byte_ptr_[r di+
mov_qword_ptr_[rbp-0x6 0]_rax,</w>
mov_dword_ptr_[rbp-0x a
mov_dword_ptr_[rax+0x 3
jmp_0xffffffffffffffb 7,</w>
jmp_0xffffffffffffffa 7,</w>
_0x6 9,</w>
13 *8],</w>
1 fe
sar_rax _0x3f,</w>
88 9,</w>
and _r15d
mov_ecx _9,</w>
lea_rdi_[rsp+0x 50],</w>
jmp_0xffffffffffffffa f,</w>
0] _esi,</w>
lea_rsi_[r ax+0x
lea_rsi _[rax+1],</w>
jne_0x4 c,</w>
_q word_ptr_
14+0x 30],</w>
mov_r11_qword_ptr_[r sp+0x10],</w>
lea_rcx_[rip+0x 14
cmp_qword_ptr_[rsp+0x1 8]_0,</w>
cmp_byte_ptr_[rsi ]_0,</w>
mov_r9d _0x4
mov_rax_qword_ptr_[rsp+0x a0],</w>
mov_rax_qword_ptr_[r 15+0x10],</w>
mov_eax _7,</w>
call_qword_ptr_[r ax+0x10],</w>
lea_rdi_[rax +8],</w>
je_0x9 2,</w>
3 0]_rdx,</w>
mov_r10d _1,</w>
lea_rdi_[rip+0x 2e
jne_0x5 8,</w>
cmp_rbx _rdx,</w>
movzx_r14d _byte_ptr_[r
mov_rcx _qword_ptr_fs:[0x28],</w>
mov_esi_0x4 1b
lea_rdi_[rip+0x f
d 4
shr_rdx _1,</w>
mov_eax _0xc,</w>
cmp_byte_ptr_[r bx]
66 7,</w>
mov_edi _0xffffffff,</w>
d 7],</w>
call_0xffffffffffff 40
0 1],</w>
call_0xfffffffffff 7b
call _r13,</w>
80 0],</w>
sar _rcx
mov_r13 _rsp,</w>
jne_0x5 9,</w>
cx+0x 28],</w>
cmp_al _0x5
lea_rdi_[rip+0x 1c
8] _0x40
mov_edx_dword_ptr_[r bp],</w>
mov_eax _5,</w>
cmp_ebx _3,</w>
_ah ,</w>
mov_r11_qword_ptr_[r sp+0x18],</w>
jne_0x4 f,</w>
d b],</w>
call_0xfffffffffffff aa
_qword_ptr_[rsp+0x 88],</w>
mov_dword_ptr_[r12 +
jg e_0xffffffffffff
4] _ebp,</w>
test _esi
jmp_0xffffffffffffffc d,</w>
8 2
mov_eax_dword_ptr_[rax+0x1 4],</w>
mov_byte_ptr_[rdx +rax]_0,</w>
lea_r8_[rip+0x a
and_eax _0x10,</w>
add_rdx _0x20,</w>
lea_edi _[rax+1],</w>
jmp_0xffffffffffffffb c,</w>
call_0xffffffffffff 3d
si+0x1 4],</w>
mov_qword_ptr_[rsp+0x2 8]_rdx,</w>
cmp_eax _0xffff87
shl _r12
jmp_0xffffffffffffffa 3,</w>
add_rax _0x1
mov_dword_ptr_[rsp+8] _r10d,</w>
jmp_0xffffffffffffffd 3,</w>
ja _0x8
mov_qword_ptr_[rbx+0x 4
jne_0x5 3,</w>
jmp_0xffffffffffffff 2
je_0x8 b,</w>
pcmpeqb _xmm2_xmm1,</w>
mov_qword_ptr_[rsi+0x1 0]_rax,</w>
mov_rdx_qword_ptr_[r 14],</w>
e ]
mov_r14 _rbx,</w>
mov_qword_ptr_[r12 ]_0,</w>
mov_esi_dword_ptr_[r sp+8],</w>
cmove _r12d_eax,</w>
call_0x 9d
_0xffff870 1,</w>
mov_rdi_qword_ptr_[r 15+0x10],</w>
_0x3 7,</w>
cmovg e
+ 5],</w>
movups_xmmword_ptr_[r ax+0x
mov_dword_ptr_[rsp+0x d
je_0xa 1,</w>
d 3],</w>
9 24
sub_rsp_0x b8,</w>
call_0xfffffffffffb 6
shl_rbx _4,</w>
mov_rcx_qword_ptr_[rsp+0x 68],</w>
mov_rax_qword_ptr_[rip+0x2 6
jmp_0xffffffffffffff9 c,</w>
cmp_rax _0x6
cmp_qword_ptr_[r bx]_0,</w>
mov_edx_dword_ptr_[r 12],</w>
jmp_0xffffffffffffffc 3,</w>
test_dl _2,</w>
psubb _xmm2_xmm0,</w>
lea_rcx_[rip+0x c
lea_rax_[rax +rax*4],</w>
call_0xfffffffffff 3
and_rax _0xfffffffffffffff0,</w>
20 0,</w>
+rax +8],</w>
mov_word_ptr_[r bp+0x
jmp_0x2 9,</w>
je_0x9 b,</w>
call_0xffffffffffff 34
mov_rsi_qword_ptr_[r ax+0x10],</w>
mov_edx_0x1 4,</w>
jmp_0xffffffffffffffa 9,</w>
cmp_eax_0x4 000,</w>
70 ]_1,</w>
jmp _0x30,</w>
15 -1],</w>
bp ]
1f 8],</w>
v movdqu
jmp_0xffffffffffffffb d,</w>
jmp_0xffffffffffffffb 1,</w>
0 9],</w>
movzx_eax_byte_ptr_[r bp],</w>
push _r10,</w>
mov_rbp_qword_ptr_[r ax],</w>
lea_rsi_[rip+0x 57
lea_rdi_[rip+0x 2a
je_0x9 e,</w>
test_r11 _r11,</w>
mov_eax_dword_ptr_[rbp-0x 64],</w>
jmp_0xffffffffffffffb 5,</w>
call_0xffffffffffff 36
mov_rdx_qword_ptr_[rbp-0x 58],</w>
test_byte_ptr_[rax+0x1 34]_0x40,</w>
mov_edx_dword_ptr_[rsp+0x 28],</w>
jmp_0xffffffffffffffb a,</w>
jmp_0xffffffffffffff9 d,</w>
1 e0],</w>
lea_rsi_[rip+0x 40
test_byte_ptr_[r dx
mov_rbx_qword_ptr_[rbp-0x 18],</w>
lea_rsi_[rsp+0x 60],</w>
call_0xfffffffffffa f
sub_ecx _edx,</w>
mov_rdx_qword_ptr_[rbp-0x 50],</w>
mov_edx _0x18,</w>
mov_eax_dword_ptr_[rsp+0x 3c],</w>
jne_0x5 a,</w>
jmp_0xffffffffffffff9 1,</w>
call_0xfffffffffffff b0
call_0xffffffffffff7 e
je_0x9 1,</w>
cmp_r14d _3,</w>
call_0x4 c
jne_0xffffffffffffffc e,</w>
mov_edx_dword_ptr_[r 13+0x
jmp_0xffffffffffffffc 1,</w>
push _r11,</w>
je_0x f
or_ecx _0xffffffff,</w>
lea_rsi_[rip+0x 4d
cmp_r15 _rax,</w>
call_0x a0
mov_r11_qword_ptr_[r sp+8],</w>
test_al _0x20,</w>
mov_qword_ptr_[rsi+ 8]_rax,</w>
jmp_0xfffffffffffff 97
lea_rcx_[rip+0x 7
jmp_0xffffffffffffffc 7,</w>
mov_rax_qword_ptr_[r dx+8],</w>
mov_esi _r8d,</w>
0 4],</w>
mov_eax _0x10,</w>
jne_0xffffffffffffffc 3,</w>
dx+0x 40],</w>
_0x3 9,</w>
mov_rdx_qword_ptr_[r dx+8],</w>
mov_rax_qword_ptr_[r si+8],</w>
jmp_0xffffffffffffff8 d,</w>
di +rax],</w>
call _r8,</w>
add_r12 _8,</w>
mov_r12_qword_ptr_[r di],</w>
mov_esi_dword_ptr_[r ax+4],</w>
je_0xa a,</w>
inc _rdx,</w>
movdqa_xmm0_xmmword_ptr_[r di+rdx],</w>
jmp_0xfffffffffffff 9c
call_0xfffffffffffff 93
call_0xffffffffffff 54
call_0x 8e
a dc
jmp_0xffffffffffffff9 4,</w>
call_0xffffffffffff 37
_0xfffffff 7,</w>
mov_rsi_qword_ptr_[rsp+0x 78],</w>
call_0x 7d
mov_r14_qword_ptr_[r ax],</w>
mov_qword_ptr_[rbp+0x 10]_rax,</w>
cmp_dword_ptr_[rbp-0x 24]_0,</w>
add_eax _8,</w>
mov_eax _8,</w>
mov_r8d_dword_ptr_[r sp+0x10],</w>
mov_esi_0x4 c
mov_byte_ptr_[r si+0x
lea_rdi_[rip+0x 2d
1 ff
mov_dword_ptr_[rsp+0x3 8]_0,</w>
jmp_0xfffffffffffff 98
mov_rdi_qword_ptr_[rsp+0x e0],</w>
mov_rax_qword_ptr_[rbp-0x10 0],</w>
mov_qword_ptr_[rbp-0xc 0]_rax,</w>
cmp_rax _-0x
si+0x 40],</w>
lea_rsi_[rip+0x 50
cmp_byte_ptr_[r di]
0] _0xffffffff,</w>
lea_rdx_[r 11
lea_rbx_[r sp+0x10],</w>
_0x4 2,</w>
movzx_ebx _word_ptr_[r
lea_rdx_[rip+0x 1a
jne_0x 8
jmp_0xffffffffffffffa 5,</w>
jmp_0xffffffffffffff8 9,</w>
call_0xfffffffffffff 9d
add_rsi _rdx,</w>
lea_rax_[r dx+8],</w>
jmp_0xffffffffffffffb 3,</w>
imul_eax _eax
call_0xfffffffffffff 9c
movzx_ecx_byte_ptr_[r dx],</w>
mov_eax_dword_ptr_[r ax*4+0x
cmp_qword_ptr_[r di+0x1
call_0xfffffffffff 7c
1 60],</w>
lea_rdx_[rip+0x 18
mov_esi_0x4 14
ax ]_xmm0,</w>
_ dil
5a 5
mov_edi _0x30,</w>
mov_dword_ptr_[r13 ]_eax,</w>
jmp_0xffffffffffffffc 2,</w>
jmp_0x2 d,</w>
mov_byte_ptr_[r si+0x1
jmp_0xffffffffffffff 80,</w>
je_0xa c,</w>
mov_rsi_qword_ptr_[r ax+0x30],</w>
mov_esi_dword_ptr_[r dx+8],</w>
mov_edx_0x1 00,</w>
lea_rdx_[rip+0x 17
jne_0x 3c
je_0xa 0,</w>
movzx_eax_word_ptr_[r bp-0x
mov_r9d _r8d,</w>
je_0x 90,</w>
jmp_0xffffffffffffff8 c,</w>
je_0x9 a,</w>
st p
mov_rax_qword_ptr_[rip+0x2 5
lea_rax_[rip+0x a
call_0xffffffffffff 3b
12+0x c],</w>
jmp_0xfffffffffffff 9b
xor_edx _eax,</w>
movzx_ecx _cl,</w>
mov_eax_dword_ptr_[rax+0x f0],</w>
mov_eax _r10d,</w>
jmp_0xffffffffffffffd 8,</w>
je_0xa 5,</w>
lea_r8_[rip+0x 4
4 8]_eax,</w>
mov_rsi_qword_ptr_[r 13+0x
mov_eax_dword_ptr_[rbp-0x 10
jne_0xffffffffffffffc 7,</w>
jmp_0xffffffffffffff9 2,</w>
1e b
mov_rax_qword_ptr_[rsp+0x a8],</w>
je_0xb 5,</w>
movzx_r15d _byte_ptr_[r
mov_dword_ptr_[r12 ]
add_rsp_0x b8,</w>
mov_r13 _r12,</w>
jmp_0xffffffffffffff9 3,</w>
jmp_0xffffffffffffff8 4,</w>
call_0xffffffffffff 30
5 0]_eax,</w>
mov_byte_ptr_[r bx]_0,</w>
jmp_0xffffffffffffffc 4,</w>
mov_rsi_qword_ptr_[r di+0x
je_0x9 c,</w>
setne_ cl,</w>
mov_r10 _rax,</w>
lea_rdi_[rip+0x 2c
22 1]_4,</w>
mov_rcx_qword_ptr_[rbp-0x 28],</w>
jne_0xffffffffffffffc 9,</w>
12+0x1 4],</w>
mov_edx_dword_ptr_[r ax+0x10],</w>
inc _rbp,</w>
add_rbx _4,</w>
t ch
re fe
refe tch
p refetch
je_0xa 3,</w>
_r11 w,</w>
_[rax +8],</w>
4] _r12d,</w>
mul sd_xmm0_qword_ptr_[rip+0x
lea_r10 _[rip+0x
dx+ 3],</w>
mov_rsi_qword_ptr_[r 15+8],</w>
je_0xa 9,</w>
mov_edx_dword_ptr_[r dx],</w>
lea_r8_[rip+0x c
lea_rdx_[rip+0x 19
div sd_xmm0_xmm1,</w>
cmp_rax_qword_ptr_[r bp-8],</w>
cmp_r13 b
mov_rax_qword_ptr_[r di+0x18],</w>
jmp_0x2 e,</w>
call_0xffffffffffff 56
call_0x 7c
mov_rbx_qword_ptr_[r sp],</w>
test _qword_ptr_[r
movzx_edx_byte_ptr_[r bx],</w>
mov_rdi_qword_ptr_[rsp+0x a0],</w>
cmp_ebx _2,</w>
and_ecx _7,</w>
*4+0x 4d
cmp_qword_ptr_[r sp]_0,</w>
je_0xb 0,</w>
call_0xffffffffffff 58
mov_rsi_qword_ptr_[r bx+0x20],</w>
mov_r10d_dword_ptr_[r sp+0x10],</w>
jne_0x6 2,</w>
jmp_0xffffffffffffff9 a,</w>
jmp_0xffffffffffffff9 9,</w>
jmp_0xfffffffffffff 99
mov_qword_ptr_[rip+0x 3
jmp_0xffffffffffffff9 f,</w>
jmp_0xffffffffffffff8 b,</w>
call_0xfffffffffff 9f
call_0xfffffffffff 7d
call _r12,</w>
mov_qword_ptr_[rsp+0x 38
jmp_0xffffffffffffffd 7,</w>
mov_r12d _ebx,</w>
jne_0xffffffffffffffc c,</w>
call_0xffffffffffffc 5
call_0xfffffffffffb 8
_0xffffff 80,</w>
4 c]
mov_dword_ptr_[r di
je_0xa b,</w>
mov_qword_ptr_[rbx+0x 20]_0,</w>
lea_rax_[rip+0x 4
cmp_rdi _qword_ptr_[rsp+8],</w>
call_0xfffffffffffff 8d
call_0xfffffffffffa 7
ax +rdx*4],</w>
+rdx* 4
jmp_0xffffffffffffffc f,</w>
+rdx +
mov_rdx_qword_ptr_[r bp+0x10],</w>
mov_r10_qword_ptr_[r sp],</w>
je_0xa 2,</w>
mov_rdx_qword_ptr_[r bp+8],</w>
mov_byte_ptr_[r di+0x
call_0xfffffffffff 7a
and_eax _0x40,</w>
mov_rax_qword_ptr_[r cx],</w>
call_0xffffffffffff 2a
call_0xfffffffffffb 4
15 0
movdqu_xmmword_ptr_[r di+0x
mov_rsi_qword_ptr_[rsp+0x 80],</w>
mov_rsi_qword_ptr_[r ax+0x18],</w>
mov_edx_0x1 0
lea_rdi_[rip+0x 2b
jb _0x2
4c ]_1,</w>
4 30],</w>
test _bh
sete _sil,</w>
mov_rdx_qword_ptr_[rax+0x 38],</w>
mov_eax_dword_ptr_[rsp+0x 40],</w>
mov_dword_ptr_[rsp+0x 3c]_eax,</w>
jne_0x6 5,</w>
cmp_byte_ptr_[r 12]_0,</w>
jne_0xffffffffffffffc a,</w>
call_0xffffffffffff 2d
5b 0],</w>
mov_esi_dword_ptr_[r ip+0x20
jne_0x5 7,</w>
je_0xa e,</w>
cmp_eax _0x10,</w>
3a 8],</w>
cmp_rbx _r13,</w>
call_0xffffffffffffd 4
add_esi _1,</w>
mov_eax_dword_ptr_[rbp-0x 28],</w>
cmp_rdi _r15,</w>
b 8]_rax,</w>
_0x3 fffffff,</w>
+rdx ]
mov_rax_qword_ptr_[r 13+0x10],</w>
call_0xffffffffffff 8f
test_byte_ptr_[r ax+r
jne_0x5 f,</w>
jmp_0xffffffffffffff7 2,</w>
call_0x bb
test_dh _4,</w>
mov_rax_qword_ptr_[rip+0x2 16
mov_r9d _0x
mov_r10d_dword_ptr_[r sp+0x18],</w>
cmp_eax _ebp,</w>
call_0xffffffffffffb 7
sub_rsi _rdx,</w>
shr _r8d
f stp
call_0xffffffffffff 3e
50 0],</w>
mov_ecx_dword_ptr_[r dx+0x
jmp_0xffffffffffffff9 7,</w>
je_0x8 f,</w>
test_dil _1,</w>
jmp_0xffffffffffffffd 6,</w>
mov_esi _0x30,</w>
mov_eax_dword_ptr_[r bx+0x18],</w>
mov_dword_ptr_[rcx ]_eax,</w>
je_0xa d,</w>
ax+0x f0],</w>
8 ]_3,</w>
xor _ebx
mov_qword_ptr_[rax+0x3 8]_rdx,</w>
call_0xffffffffff ea
8] _r10d,</w>
1 c]
lea_rsi_[rip+0x 60
mov_dword_ptr_[rsp+0x10] _r8d,</w>
jmp_0xffffffffffffffa 1,</w>
cmp_r14d _4,</w>
cmp_eax _0x8000,</w>
cmp_dl _9,</w>
e _al,</w>
mov_rax _qword_ptr_
mov_r9d _0,</w>
mov_r8_qword_ptr_[r bx+0x
mov_edx_0x a
call_0xfffffffffffff 95
mov_rdi_qword_ptr_[r 15+8],</w>
mov_rax_qword_ptr_[rsp+0x c0],</w>
mov_qword_ptr_[rsp+0x9 8]_0,</w>
jne_0xffffffffffffffc d,</w>
jmp_0xffffffffffffff8 8,</w>
_0x1 00000,</w>
mov_rbp _r14,</w>
mov_edx_dword_ptr_[r di+0x
jne_0x5 c,</w>
call_0x 6e
mov_dword_ptr_[rsp+0x4 8]_eax,</w>
lea_r9_[rip+0x 2
ror _ax_8,</w>
mov_qword_ptr_[rsp+0xb 0]_0,</w>
mov_edx _r9d,</w>
jmp_0x2 b,</w>
mov_r14 _r12,</w>
jmp_0xffffffffffffffa 2,</w>
jmp_0xffffffffffffff9 b,</w>
jl _0xffffffffffff
2b 0],</w>
mov_rax_qword_ptr_[rip+0x2 1a
lea_rsi_[rip+0x 4a
2d 0],</w>
mov_rdi_qword_ptr_[r 14+8],</w>
mov_edx_0x2 00,</w>
mov_dword_ptr_[rsp+0x3 0]_0,</w>
lea_rax_[r bx+0x
jne_0x5 d,</w>
add_dword_ptr_[r ip+0x20
mov_rbp _r13,</w>
mov_byte_ptr_[rcx +
call_0x 88
call_0x 96
test_r9b _r9b,</w>
jne_0xffffffffffffffc 5,</w>
jmp_0xffffffffffffffb e,</w>
call_0xffffffffffffc 8
7 2
40 ]_xmm4,</w>
q_qword_ptr_[r di]
q_qword_ptr_[rdi] _qword_ptr_[rsi],</w>
movsxd_rax _ebp,</w>
jmp_0xffffffffffffffc 6,</w>
jbe_0xffffffffffff fd
call_0xfffffffffffc 9
] _0x80,</w>
test_r10 b
sp+0x1 30],</w>
mul sd_xmm0
mov_rsi_qword_ptr_[r 12+0x
mov_rax_qword_ptr_[rbp-0x 20
jne_0x6 1,</w>
1e 0
13 +rax],</w>
shl_edx _8,</w>
call_0x 97
_xmm0_xmmword_ptr_[r di+rdx-0x
] _r14,</w>
jne_0x6 7,</w>
jmp_0xffffffffffffff9 5,</w>
call_0x 77
rep_movs q_qword_ptr_[rdi]_qword_ptr_[rsi],</w>
add_rcx _qword_ptr_[r
sar_rsi _1,</w>
movu ps
call_0xfffffffffffff 9b
mov_qword_ptr_[rsp+0xb 8]_rax,</w>
jne_0xffffffffffffffc 6,</w>
call_0xfffffffffffc 3
mov_rdx_qword_ptr_[rdx+0x 70],</w>
movzx_edx_byte_ptr_[r ax+1],</w>
movabs_rax _0x3
mov_rax_qword_ptr_[rip+0x2 1d
jmp_0xffffffffffffff7 8,</w>
6 8]_1,</w>
mov_qword_ptr_[rsp+0xc 8]_rax,</w>
mov_esi _0xa
a 8]_rax,</w>
mov_qword_ptr_[rbp-0xa 8]_rax,</w>
_r14 d_eax,</w>
_dword_ptr_fs: [0x
1 ]_eax,</w>
mov_rdi_qword_ptr_[rbp+0x 20],</w>
jmp_0xffffffffffffff8 e,</w>
movzx_eax_byte_ptr_[r bx+0x1
movsd _xmm3
mov_esi_0x4 16
jne_0x6 6,</w>
jmp_0xffffffffffffffd 5,</w>
cmp_rdi _r14,</w>
call_0xfffffffffffff 8e
and _r10d
lea_esi _[rax+1],</w>
_xmm1_xmm 5,</w>
2 78],</w>
sar_eax _1,</w>
mov_byte_ptr_[r bp-
jmp_0xfffffffffffff 95
add_eax _3,</w>
mov_rax_qword_ptr_[rip+0x2 d
3 ]_1,</w>
14 +2],</w>
mov_ecx_dword_ptr_[r 15+0x
lea_rsi_[rip+0x 5a
call_0xffffffffffff 2c
_ di,</w>
mov_qword_ptr_[rsp+r ax+0x
_0x6 6,</w>
_ cx
13 0
mov_dword_ptr_[rbp-0x f
jmp_0xffffffffffffff6 b,</w>
call_0xfffffffffffff 94
mov_r8 _qword_ptr_[rsp+0x30],</w>
mov_rsi_qword_ptr_[r 14+0x18],</w>
mov_r15d _ecx,</w>
jne_0x 60,</w>
jne_0x 64,</w>
jmp_0xffffffffffff e0
je_0x9 4,</w>
add_edx _8,</w>
mov_qword_ptr_[rbp-0x4 9
jmp_0xffffffffffff dd
movzx_eax_word_ptr_[r bp+0x
cmove _r15d_eax,</w>
mov_rax_qword_ptr_[r cx+0x
lea_rdx_[r sp+4],</w>
call_0xfffffffffffc 5
96 0,</w>
2c 8],</w>
shr_rax _0x3f,</w>
mov_edx_dword_ptr_[r sp+0x14],</w>
lea_r8_[r ip-0x
jne_0xffffffffffffffb d,</w>
1a 8],</w>
movaps _xmm1_xmmword_ptr_[r
mov_dword_ptr_[rsp+8] _r11d,</w>
mov_dword_ptr_[rsp+0x4 0]_eax,</w>
mov_dword_ptr_[rbp-0x 34]_eax,</w>
jmp_0xffffffffffffff9 e,</w>
jmp_0xffffffffffffff9 6,</w>
cmove _ebx_eax,</w>
jmp_0xffffffffffffff8 6,</w>
call_0xffffffffffff 13
3 ]_rax,</w>
movzx_ecx_byte_ptr_[r sp+0x
mov_rdi_qword_ptr_[r dx],</w>
cmp_byte_ptr_[r bx
call_0xffffffffffff 24
add_dword_ptr_[r bx+0x
18 8],</w>
call_0xfffffffffff 80
_0x6 f,</w>
1b 0
si+0x1 c],</w>
mov_dword_ptr_[rbp-0x4 9
lea_rax_[r sp+0x10],</w>
add_rsp _0x10
sar _ecx
mov_rbp_qword_ptr_[r bp],</w>
lea_r8_[rip+0x 12
je_0xa 4,</w>
je_0x8 9,</w>
call_0xffffffffffffc 6
call_0xfffffffffffa 4
call_0x 98
sp+0x1 20],</w>
mov_rax_qword_ptr_[rbx+0x 30],</w>
mov_r15 _r12,</w>
add_rdi _rdx,</w>
12 0,</w>
movzx_r11d _byte_ptr_[r
je_0xa 6,</w>
cmp_byte_ptr_[r bx+0x1
call_0x 94
call _rbp,</w>
+rax*8 -0x
mov_ecx_dword_ptr_[r sp+4],</w>
js _0x7
jmp_0xffffffffffffffc c,</w>
jmp_0xffffffffffffff7 d,</w>
cmp_rax _r12,</w>
call_0xfffffffffffff 8c
84 ]_eax,</w>
- 1
mov_dword_ptr_[r15 ]_eax,</w>
lea_rsi_[rip+0x 4b
call_0xffffffffffff 48
test_al _0x40,</w>
test_byte_ptr_[r sp+0x1
sub_ebp _1,</w>
shl_rdx _cl,</w>
shl_eax _2,</w>
mov_r8 _qword_ptr_[rsp+0x38],</w>
mov_qword_ptr_[rip+0x2 2
lea_eax_[rdx -1],</w>
mov_rcx _r10,</w>
mov_edi_0x4 14
jmp_r a
jmp_ra x</w>
movdqu_xmm0_xmmword_ptr_[r si],</w>
mov_rdi_qword_ptr_[r ax+0x40],</w>
jmp _rcx,</w>
ax+ 3],</w>
_0xf 4
jmp_0xffffffffffffff8 3,</w>
di+0x1 4],</w>
call_0xffffffffffff 84
15 +2],</w>
call_0x4 e
and_edi _1,</w>
shl_rsi _4,</w>
movsxd_rcx _edx,</w>
mov_qword_ptr_[rsp+0xa 0]_rax,</w>
je_0x9 f,</w>
cmp_eax _dword_ptr_[rsp+0x
mov_qword_ptr_[rbp-0x4 8]_rdx,</w>
cccc cc
bp *
xor _edi
movzx_eax_byte_ptr_[r dx+1],</w>
mov_edi_0x4 b
mov_eax _0x5
cmp_al _0x2e,</w>
mov_rdi_qword_ptr_[r si+0x20],</w>
cmp_dword_ptr_[rdi] _0x4
mov_esi_0x1 4,</w>
call_0xffffffffffff 2b
20] _rcx,</w>
mov_eax_dword_ptr_[rbp-0x 6c],</w>
lea_rcx_[rip+0x b
call_0xfffffffffffff 90
and_eax_0xfffffff c,</w>
mov_rcx_qword_ptr_[r dx+0x
8 20],</w>
mov_rcx_qword_ptr_[rsp+0x 50],</w>
mov_qword_ptr_[rdx ]_0,</w>
jmp_0xffffffffffffffd 1,</w>
si+0x c],</w>
call_0xffffffffffff 20
call_0x cc
or _dl
jmp_0xfffffffffffff 93
cmp_dword_ptr_[r 14+0x
mov_esi _0x18,</w>
call_0xfffffffffffff 98
b 0]_rax,</w>
mov_rcx_qword_ptr_[rbp-0x 30],</w>
lea_rcx_[r sp+0x18],</w>
jmp_0xffffffffffffff 60,</w>
mov_ecx_dword_ptr_[r sp+0x14],</w>
lea_rcx_[rsp+0x 20],</w>
mov_r15 _rbp,</w>
lea_rdi_[rsp+0x 60],</w>
lea_rax_[r 12+0x10],</w>
jmp_0xffffffffffffff8 f,</w>
cmp_eax _r12d,</w>
cmp_dword_ptr_[rbp-0x c]_0,</w>
cmp_dword_ptr_[r bx+
c w
2 e0],</w>
lea_rsi_[rip+0x 67
lea_rsi_[rip+0x 5c
lea_rsi_[rip+0x 44
mov_rbp _r15,</w>
mov_qword_ptr_[rbx+0x1 8]_0,</w>
lock_ cmpxchg
jmp_0xffffffffffffffc a,</w>
jmp_0xffffffffffffff7 0,</w>
shl_rsi _3,</w>
call_0xffffffffffff 2e
cmp_dword_ptr_[rax ]_2,</w>
call_0xfffffffffffff 9e
94 ]_2,</w>
jmp_0x3 3,</w>
je_0x9 7,</w>
94 ]_0,</w>
8] _dl,</w>
5 c]
jmp_0xffffffffffffff8 1,</w>
call_0xfffffffffffff a0
test_ah _1,</w>
lea_rax_[rbp-0x 50],</w>
jmp_0xfffffffffffff 9a
call_0xfffffffffffff 8b
3 f0],</w>
call_0xffffffffffff 1c
call_0xfffffffffff 8f
32 0,</w>
mov_qword_ptr_[r12+0x1 0]_rax,</w>
_xmm0_xmm 4,</w>
00 2,</w>
mov_ecx_dword_ptr_[r ax+8],</w>
mov_dword_ptr_[rsp+8] _r9d,</w>
jmp_0xffffffffffffffd 2,</w>
cmp_dl _1,</w>
mov_rsi_qword_ptr_[r 15+0x18],</w>
mov_rdi_qword_ptr_[rbx+0x 40],</w>
30 ]_xmm5,</w>
mov_rdi_qword_ptr_[r12+0x 30],</w>
mov_eax_dword_ptr_[rbx+0x 20],</w>
je_0xa 7,</w>
cmp_ebp _-1,</w>
and _r11d
test_byte_ptr_[r cx
mov_rsi_qword_ptr_[r 15+0x
movzx_ecx_byte_ptr_[r ax],</w>
movzx_eax_byte_ptr_[r 12],</w>
mov_rsi_qword_ptr_[r ax+0x20],</w>
je_0xa 8,</w>
call_0x 9e
_ecx _eax,</w>
4 80],</w>
movsd_xmm1 _qword_ptr_[r
mov_rdi_qword_ptr_[r ax+0x30],</w>
mov_rcx_qword_ptr_[rsp+0x 78],</w>
mov_rax_qword_ptr_[rbp-0x 11
mov_r8 _qword_ptr_[rsp+0x40],</w>
jmp_0xfffffffffff d
je_0xb 6,</w>
cmp_byte_ptr_[rax+ 1]
add_rax _0x30,</w>
test_dil _2,</w>
mov_rdx_qword_ptr_[r bp+0x18],</w>
4] _r13d,</w>
2e 0,</w>
mov_eax_dword_ptr_[rbp-0x 4c],</w>
movss _xmm0
ja e_
6e 0,</w>
sbb _rdx_rdx,</w>
mov_rdx_qword_ptr_[rbp-0x 68],</w>
jmp_0x3 1,</w>
cmp_ecx _2,</w>
mov_rdi_qword_ptr_[r di+0x18],</w>
cmp_ cx
add_rax _r12,</w>
_dword_ptr_[r di]_eax,</w>
mov_rdx_qword_ptr_[rsp+0x 98],</w>
mov_qword_ptr_[r 15+
lea_r8_[rip+0x 8
3 1b
mov_rdx_qword_ptr_[rax+0x 70],</w>
mov_rax_qword_ptr_[rsp+0x b8],</w>
call_0xffffffffffff 28
sub_rax _8,</w>
lea_rdx_[rip+0x 1d
call_0xfffffffffffff 9f
bx +rax*8],</w>
mov_esi_0x4 12
jmp_0xffffffffffffff 1
5 50],</w>
4a 0],</w>
shl _edi
mov_qword_ptr_[rsi ]_0,</w>
mov_dword_ptr_[rsp+0x5 8]_eax,</w>
jne_0xffffffffffffffc 2,</w>
j p
and _dh
mov_r14 _qword_ptr_[rbp-0x
call_0xfffffffffffff 97
9c 0,</w>
mov_rcx_qword_ptr_[r bx+8],</w>
mov_rax_qword_ptr_[rip+0x2 8
add_r13 _8,</w>
]_ bx,</w>
mov_rax_qword_ptr_[rdi+0x 30],</w>
lea_rdx_[rax +2],</w>
lea_r10d _[r
mov_edi_0x4 1b
movsxd_rdi _dword_ptr_[r
jne_0x6 3,</w>
movsxd _r10
mov_rax_qword_ptr_[rip+0x2 11
mov_qword_ptr_[rbp-0x 20
mov_dword_ptr_[rbp-0x 8
jmp_0xffffffffffffff7 a,</w>
jmp_0xffffffffffffff6 e,</w>
imul _rcx
cmp_rdi _r12,</w>
mov_rcx_qword_ptr_[r ax+0x20],</w>
mov_r8d_dword_ptr_[r ip+0x2
lea_rax_[rbp-0x 4b
jmp_0xffffffffffffff8 a,</w>
movaps _xmm4
mov_r9d _ebp,</w>
mov_dword_ptr_[rsp] _r8d,</w>
lea_rdx_[rsp+0x c],</w>
jne_0xffffffffffffffc 1,</w>
mov_rbp_qword_ptr_[r bx+0x
mov_r11 _qword_ptr_[rsp+0x20],</w>
lea_rsi_[rip+0x 1f
cmp_ebp _dword_ptr_[r
mov_rdx_qword_ptr_[r ax+0x1
mov_ecx _0xc,</w>
mov_edx_dword_ptr_[r bp-4],</w>
je_0xb a,</w>
dec _dword_ptr_[r
cmp_edi _2,</w>
mov_r10 _qword_ptr_[rsp+0x20],</w>
mov_qword_ptr_[rsp+8] _r11,</w>
jg _0x2
7c ]_eax,</w>
38 0,</w>
mov_rax_qword_ptr_ [0x
mov_r13_qword_ptr_[r ip+0x2
lea_rbx _[rax+1],</w>
je_0xb d,</w>
je_0x c0,</w>
cmp_dword_ptr_[r 13+
and_eax _0x7f,</w>
xor _al
a ]
_0x2 0000
6 1]_0,</w>
mov_qword_ptr_[rsp+0x30] _rsp,</w>
mov_dword_ptr_[rip+0x2 2
cmove _rdx
add _r15d
1c 8,</w>
mov_qword_ptr_[rsp+0x20] _r9,</w>
mov_qword_ptr_[rbp-0x7 0]_rax,</w>
movzx_eax_byte_ptr_[r cx],</w>
mov_dword_ptr_[rbx ]_0,</w>
jmp_0x a
cmp_rdi _qword_ptr_[rbp-0x
2 48],</w>
movdqa_xmm 7
jmp_0xfffffffffffff 90
cx +rdx],</w>
sub_rsp_0x d0,</w>
f ]
14 *8],</w>
movdqa_xmm0_xmmword_ptr_[r sp+0x
mov_eax_dword_ptr_[rsp+0x 34],</w>
mov_eax_dword_ptr_[r bp+8],</w>
mov_dword_ptr_[rsp -0x
jne_0xffffffffffffffc 4,</w>
cmp_rax_qword_ptr_[rbp-0x 18],</w>
call_0xffffffffffff 14
2 8]_rcx,</w>
or _word_ptr_[r
mov_qword_ptr_[rsp+0x2 0]_rsi,</w>
jmp_0xffffffffffffff8 2,</w>
jmp_0x3 2,</w>
call_0xfffffffffffff 99
movaps _xmm5
jmp_0xffffffffffffff8 7,</w>
add_rcx _rdx,</w>
mov _al
call_0x4 f
mov_rbx_qword_ptr_[rsp+0x 30],</w>
mov_r14_qword_ptr_[r sp+8],</w>
mov_qword_ptr_[rdi ]_0,</w>
jne_0xffffffffffffffb e,</w>
jmp_0xfffffffffffff 94
mov_rbx_qword_ptr_[r bx+0x10],</w>
jne_0x6 d,</w>
jmp_0x2 f,</w>
mov_edx_dword_ptr_[rbp-0x c],</w>
_0x7f2bb 70
4 e0],</w>
jmp_0xffffffffffffff7 e,</w>
mov_r8d _3,</w>
jmp_0xffffffffffffff6 8,</w>
c] _ebx,</w>
sub_rax _rbx,</w>
seta _cl,</w>
_0x3 6,</w>
mov_rdi_qword_ptr_[rbp+0x 30],</w>
movzx_ecx _byte_ptr_[rsi
mov_qword_ptr_[rdx ]_rcx,</w>
3 f7
mov_rbx_qword_ptr_[r bp+0x
mov_rax_qword_ptr_[rsp+0x b0],</w>
jmp_0xffffffffffffff7 5,</w>
call_0xffffffffffff 15
- 5],</w>
5e 0,</w>
test _r11b
jmp_0xffffffffffffffd c,</w>
jmp_0xffffffffffffffd 4,</w>
1 0]_eax,</w>
setg _al,</w>
mov_rax_qword_ptr_[rip+0x2 15
mov_qword_ptr_[rbp-0x5 0]_rsi,</w>
lea_rsi_[rip+0x 56
lea_rcx_[rdx +1],</w>
jmp_0xfffffffffffff 8d
mov_rax_qword_ptr_[rbx+0x 38],</w>
imul _rsi
lea_rax_[rsp+0x 90],</w>
jmp_0xffffffffffffff8 5,</w>
ffff ,</w>
call_0xfffffffffffff 9a
call_0xffffffffffff 18
call_0x cb
call_0x aa
_0x7 e,</w>
13 +2],</w>
or _ebp
movzx_eax_byte_ptr_[r bx+1],</w>
call_0xffffffffffff7 f
sp+0x1 10],</w>
cmp_al _0x3a,</w>
3 70],</w>
movdqa_xmm1_xmmword_ptr_[r si],</w>
mov_edx_dword_ptr_[r 13],</w>
mov_ecx_dword_ptr_[r sp],</w>
lea_rdx_[rbp-0x 10],</w>
9 +1],</w>
mov_r9 _qword_ptr_[rsp+0x38],</w>
lea_rax_[rsp+0x 28],</w>
* 8+8],</w>
sub_rsp _0x70,</w>
lea_r8_[rip+0x 6
jmp_0xffffffffffffff7 3,</w>
0] _ebx,</w>
sub_ebx _eax,</w>
or _r12d
movzx_eax_byte_ptr_[r ax+0x1
call_0xffffffffffffe 3
call_0xffffffffffff 16
sub_esi _eax,</w>
call_0xfffffffffffff 8a
mov_r15_qword_ptr_[r sp+0x10],</w>
jmp_0xffffffffffffffd e,</w>
call_0xfffffffffffff 6b
call_0xffffffffffff 27
4 ]_rax,</w>
mov_rcx_qword_ptr_[r bp],</w>
mov_qword_ptr_[rsp+0x10] _r11,</w>
0] _0x10,</w>
mov_esi_0x4 9
je_0xb 4,</w>
cmp_qword_ptr_[rsp+0x 20]_0,</w>
cmp_qword_ptr_[r sp
call_0xffffffffffff 1a
mov_r8d_dword_ptr_[r sp+0x18],</w>
call_0x 33
mov_r14_qword_ptr_[r sp+0x10],</w>
lea_rsi_[rip+0x 5e
lea_ecx_[rdx +1],</w>
call_0xfffffffffffff 7f
lea_rax_[rbp-0x10 10],</w>
jmp_0x3 c,</w>
je_0xc d,</w>
8 -0x
shl_rdi _3,</w>
mov_qword_ptr_[rsp] _r10,</w>
call_0xffffffffffff 12
sete _r8b,</w>
mov_dword_ptr_[r 13+
jmp_0x4 2,</w>
call_0xfffffffffffff 84
call_0x 55
cmp_qword_ptr_[r bx+
18 0
mov_rdx_qword_ptr_[r 15],</w>
mov_r9d _edx,</w>
5 40],</w>
sub_rsp _0x10
lea _r11d
f 0]_rax,</w>
add_rbx _qword_ptr_[r
shl_rdi _4,</w>
lea_rbx _[rdx
je_0xc 5,</w>
f 000,</w>
add_ebx _eax,</w>
_0x7 4,</w>
2 58],</w>
+rdx +1],</w>
test_byte_ptr_[r ax+rdx*
mov_word_ptr_[r bx+0x1
mov_eax_dword_ptr_[rbp-0x 40],</w>
call_0xfffffffffffb 9
mov_edx_dword_ptr_[rax+0x 28],</w>
lea_r8_[rip+0x 3
call_0xfffffffffffa 6
ax +rcx],</w>
shr _dl
mov_byte_ptr_[rax] _0x27,</w>
lea_r8_[rip+0x e
cmp_qword_ptr_[r dx+0x
cmp_ebp _2,</w>
call_0xffffffffffff 19
mov_edx_dword_ptr_[rbp-0x 1c],</w>
mov_byte_ptr_[r 13
call_0xfffffffffffff 8f
5a 4]
mov_r14 _rbp,</w>
cmp_qword_ptr_[r di]
cmp_dword_ptr_[rbp-0x 10
call_0x4 7
add _r10d
58 0,</w>
mov_ecx_dword_ptr_[r si],</w>
call_0x ca
add_edx _ecx,</w>
shr_eax _1,</w>
80 ]_1,</w>
4 0]_eax,</w>
3c 0,</w>
1a 0,</w>
test_byte_ptr_[rdx+0x 428]_8,</w>
movsxd_rdx _dword_ptr_[rsp+0x
mov_qword_ptr_[rsp+0x1 8]_r11,</w>
mov_esi_0x4 10
7 ]_al,</w>
mov_dword_ptr_[rcx +
jmp_0xffffffffffffff5 3,</w>
je_0xb 1,</w>
cmp_dword_ptr_[r dx+0x
call_0xffffffffffff 99
call_0x2 3
00 8,</w>
movsxd_rdi _eax,</w>
mov_dword_ptr_[rsi ]_1,</w>
add_r12 _0x10,</w>
_dx _8,</w>
3 40],</w>
movdqa_xmm2_xmmword_ptr_[r di],</w>
mov_r15 _r8,</w>
mov_qword_ptr_[rsp+0x4 8]_rcx,</w>
lea_rsi_[rsp+0x 70],</w>
lea_rax_[r sp+0x18],</w>
cmp_r14 b
_xmm1_xmm 4,</w>
5a 7
1c 0,</w>
mov_rax_qword_ptr_[r15+0x e0],</w>
mov_edx_dword_ptr_[rbp-0x 14],</w>
call_0xffffffffffff 1b
call_0xfffffffffffa 9
lea_ecx _[rax-1],</w>
jmp_0xffffffffffffff7 f,</w>
call_0xfffffffffffff 92
36 0,</w>
mov_rdx _r11,</w>
mov_byte_ptr_[rdx ]_0,</w>
jmp_0xfffffffffffff 92
and_eax _0x2000,</w>
add_rdi _0x20,</w>
test_byte_ptr_[rbp+0x 13
movzx_ecx _al,</w>
movaps_xmmword_ptr_[rsp+0x60 ]_xmm0,</w>
jne_0x7 f,</w>
je_0xa f,</w>
cmp_byte_ptr_[r ax+0x1
call_0xfffffffffffff 85
lea_r8_[rip+0x 5
jg_0xffffffffffff f
je_0xc 1,</w>
cmp_dword_ptr_[rbp-0x 34]_0,</w>
30 ]_2,</w>
2 ]_dx,</w>
setne_ sil,</w>
mov_ecx_dword_ptr_[rsp+0x 28],</w>
mov_dword_ptr_[rdx+0x1 0]_1,</w>
call_0x2 2
1 f0],</w>
74 6,</w>
sub_rdi _rax,</w>
mov_eax_dword_ptr_[rsp+0x 48],</w>
jmp_0xffffffffffffff5 c,</w>
5 ]_al,</w>
mov_r8_qword_ptr_[r ax],</w>
mov_dword_ptr_[rsp+0x 24]_0,</w>
lea_rdi_[rip+0x 38
cmp_r9 b
cmovne _rax_rdx,</w>
cmove _rcx_rax,</w>
_0x8 0000000,</w>
sub_rdi _rdx,</w>
cw de,</w>
cmove _rdx_rax,</w>
_0x5 b,</w>
mov_qword_ptr_[rsp+0xc 0]_0,</w>
mov_ebx_dword_ptr_[r ip+0x2
mov_dword_ptr_[rsp+0x10] _r10d,</w>
lea_rdi_[rax +r
jmp_0xfffffffffffff 8c
19 0
movsx _ebx
mov_esi_dword_ptr_[r sp+0x10],</w>
lea_rax_[r bx+r
je_0xc 6,</w>
add_r14 _8,</w>
je_0xffffffffffffff e6,</w>
call_0xfffffffffffff 7a
call_0xfffffffffffa 8
jmp_0xffffffffffffffd 9,</w>
cx +
call_0xfffffffffffff 88
4c 0],</w>
1] _dl,</w>
mov_dword_ptr_[rsp+0x 2c]_0,</w>
je_0xb 8,</w>
movaps_xmmword_ptr_[r sp+0x10]_xmm0,</w>
mov_r9d_dword_ptr_[rsp+0x c],</w>
jne_0x7 c,</w>
_r8d _eax,</w>
_cl _al,</w>
mov_qword_ptr_[rsp+0xb 0]_rax,</w>
lea_rdx_[rip+0x 1c
lea_rax_[rip+0x 6
call_0xffffffffffff 17
xor_r 9d
mov_ecx _r9d,</w>
mov_dword_ptr_[rbx+0x 7
lea_rax_[rbp-0x 18
mov_rax _r9,</w>
mov_edx_dword_ptr_[rsp+0x 20],</w>
mov_eax_dword_ptr_[r cx],</w>
jne_0x7 2,</w>
je_0xb b,</w>
je_0x8 6,</w>
mov_r9d _ecx,</w>
jmp_0x3 6,</w>
je_0xb 7,</w>
cmp_rdx _rbx,</w>
6 ]_al,</w>
mov_rbp_qword_ptr_[r bx],</w>
jne_0x6 b,</w>
_0x4 4,</w>
sub_rax _rsi,</w>
movzx_eax_byte_ptr_[r ip+0x
mov_rcx_qword_ptr_[r dx+8],</w>
mov_eax_dword_ptr_[rip+0x2 4
jmp_0xffffffffffffff6 2,</w>
cmp_rax_qword_ptr_[rbp-0x 20],</w>
cmovne _rax
call_0xfffffffffffe dd
and_eax _0xfffffffe,</w>
56 0,</w>
jmp_0xffffffffffffff7 7,</w>
8 _xmm0,</w>
mov_eax_dword_ptr_[rip+0x2 5
call_0xfffffffffffff 86
call_0xfffffffffffff 65
si *2],</w>
or_dword_ptr_[r bp+0x
mov_rcx_qword_ptr_[rsp+0x 98],</w>
mov_r13 _rbp,</w>
mov_ebx_dword_ptr_[r ax],</w>
jmp_0xffffffffffffff7 9,</w>
jmp_0xfffffffffffff 87
je_0xb 2,</w>
cmp_qword_ptr_[rbp+0x 68]_0,</w>
cmp_al _0x5c,</w>
]_ -
9 ]_al,</w>
movsxd_rbx _eax,</w>
lea_rdx_[rip+0x 11
jmp_0xffffffffffffffd a,</w>
jmp_0xffffffffffffff6 7,</w>
je_0xc 9,</w>
movzx_eax_word_ptr_[r bx+0x
mov_r9d _edi,</w>
jmp_0xffffffffffffff6 d,</w>
je_0xb 9,</w>
call_0xfffffffffffe fc
set be
mov_qword_ptr_[rbp-0x 15
jmp_0xffffffffffffff6 1,</w>
jmp_0xffffffffffffff5 d,</w>
] _0xffffffff,</w>
sub_rbx _rax,</w>
mov_rdi_qword_ptr_[rsp+0x b0],</w>
mov_rax_qword_ptr_[rbx+0x 968],</w>
call_0xffffffffffff 1e
+rdx ]_0,</w>
jne_0x7 5,</w>
call_0xfffffffffffe fa
mov_rdx_qword_ptr_[rsp+0x 70],</w>
mov_qword_ptr_[r 14]
jmp_0xffffffffffffff7 c,</w>
jmp_0xffffffffffffff7 b,</w>
jmp_0xffffffffffffff5 0,</w>
bp+0x 38],</w>
mov_ecx_dword_ptr_[r sp+0x1c],</w>
mov_ebx _2,</w>
jmp_0xffffffffffffff5 6,</w>
call_0xfffffffffffff 7c
8] _0x2
mov_dword_ptr_[rsp+8] _esi,</w>
lea_rdx_[rsp+0x 60],</w>
jmp_0x3 4,</w>
cmp_qword_ptr_[r ax]
call_0xffffffffffff 26
addsd _xmm0_xmm0,</w>
6c 0,</w>
por _xmm0_xmm
mov_dword_ptr_[rax ]_2,</w>
lea_rsi_[rip+0x 58
lea_rdi_[rip+0x 37
lea_r8_[rip+0x 14
je_0xd 5,</w>
movsx_edx _al,</w>
call_0xfffffffffffb 5
_xmm 8,</w>
_0x7 3,</w>
test_byte_ptr_[rcx+0x 428]_8,</w>
lea_rsi_[r sp+4],</w>
f 8]_rax,</w>
call_0xffffffffffff 1d
5c 0,</w>
2c 0,</w>
10 _xmm1,</w>
mov_rbp_qword_ptr_[r ip+0x20
mov_ebp_dword_ptr_[r ax],</w>
lea_rdi_[rip+0x 3c
jmp_0xffffffffffffff 40,</w>
_0xfffffff 8,</w>
4 70],</w>
- 7],</w>
or _rax_rdx,</w>
mov_rdi_qword_ptr_[rbx+0x 50],</w>
mov_qword_ptr_[rax] _rsi,</w>
lea_rsi_[rip+0x 5d
je_0xb e,</w>
xor_ecx _dword_ptr_[r
mov_rax_qword_ptr_[rbp-0xc e0],</w>
mov_eax_dword_ptr_[r si+8],</w>
jne_0x6 a,</w>
jmp_0xfffffffffffff 8b
mov_qword_ptr_[rsp+0x20] _rdi,</w>
mov_ecx_dword_ptr_[rsp+0x 20],</w>
cmp_dword_ptr_[r di+
xor_eax _edx,</w>
jmp_0xffffffffffffff7 6,</w>
5c ]_1,</w>
14 0,</w>
movsx_rax _byte_ptr_[r
call_0xffffffffffff 6f
_0x6 c,</w>
3a 0],</w>
mov_esi_dword_ptr_[r sp+4],</w>
mov_edx _0x80,</w>
lea_eax_[r bx+1],</w>
jmp_0xffffffffffffff7 1,</w>
test_dil _4,</w>
mov_edx_dword_ptr_[r dx+0x
cmp_eax _0xa
5 8]_eax,</w>
lea_rdx_[rbp-0x 18],</w>
call_0xfffffffffffff 87
call_0xfffffffffffff 80
80 ]_xmm0,</w>
call_0x 64
_0x c0,</w>
sd _dword_ptr_[rdi]_eax,</w>
or _r9d
mov_rbx_qword_ptr_[rsp+0x 48],</w>
m in
jne_0xffffffffffffffb a,</w>
jne_0xffffffffffffff c0,</w>
mov_dword_ptr_[rbp-0x 9
mov_dword_ptr_[r cx+0x1
je_0xb 3,</w>
cmp_r15 b
_xmm 8
sub_edx _ecx,</w>
mov_r8d _0x1
mov_qword_ptr_[rbx+0x 30]_rax,</w>
jmp_0xffffffffffffff6 a,</w>
jmp_0xfffffffffffffe f
5c 0],</w>
lea_r12_[rsp+0x 20],</w>
3a 0,</w>
2b 8],</w>
si -4],</w>
shr _rdi
mov_qword_ptr_[rbp+0x 1
jne_0xffffffffffffffb c,</w>
e 0]_rax,</w>
call_0xfffffffffff 2
call_0x b0
8 +0x18],</w>
sub_rdx _rbx,</w>
cmp_esi _edx,</w>
34 0,</w>
pcmpeqb _xmm0_xmm3,</w>
mov_esi_0x4 1a
mov_edx _r10d,</w>
mov_ecx_dword_ptr_[r 12+0x
3 68],</w>
pcmpistri_xmm0 _xmm1
pcmpistri_xmm0_xmm1 _0x1a,</w>
movdqa_xmm1_xmmword_ptr_[rsi +rdx],</w>
movapd _xmm1_xmm0,</w>
mov_dword_ptr_[rsp+0x 34]_eax,</w>
mov_dword_ptr_[rip+0x2 5
lea_rdi_[rip+0x 1d
lea_r10 _[rsp+0x
jne_0xffffffffffffffb f,</w>
jmp _0x38,</w>
66 0,</w>
- 9],</w>
jmp_0x3 9,</w>
test_ch _4,</w>
mov_rax_qword_ptr_[rbx+0x d0],</w>
jne_0x6 f,</w>
jg _0x5
70 f,</w>
v movups
shl_edx _cl,</w>
mov_r11d _1,</w>
cmp_r13 d_eax,</w>
call_0xfffffffffffff 7b
and_eax _dword_ptr_[rbp-0x
_rbp _rax,</w>
4 50],</w>
movups_xmmword_ptr_[r bx+0x
movaps_xmmword_ptr_[rsp+0x 20]_xmm0,</w>
mov_rax_qword_ptr_[r 14+0x10],</w>
mov_qword_ptr_[rsp+0x10 8]_rax,</w>
lea_rax_[rax +r
jmp_0xffffffffffffff 64,</w>
je_0x8 7,</w>
movzx_eax_word_ptr_[r ip+0x2
lea_rdx_[rip+0x 1b
lea_rdi_[rip+0x 3a
mov_r8d_dword_ptr_[r ax+0x28],</w>
mov_qword_ptr_[rsp+0x4 0]_rdx,</w>
mov_qword_ptr_[rdi +
lea_rdi_[rsp+0x 70],</w>
call_0xfffffffffffb 3
call_0xfffffffffff 5c
jmp_0xffffffffffffff6 9,</w>
jmp_0xffffffffffffff5 b,</w>
call_0xfffffffffffff 96
14+0x c],</w>
rep_sto sd_dword_ptr_[rdi]_eax,</w>
or_qword_ptr_[r sp]_0,</w>
mov_esi _0x28,</w>
jne_0x7 a,</w>
jmp_0xffffffffffffff 34,</w>
f ]_al,</w>
e 8]_rax,</w>
call_0xfffffffffffff 77
4c 0,</w>
test_byte_ptr_[r 12+0x1
movsxd_rax _ecx,</w>
lea_rdi_[r sp+0x18],</w>
jne_0x6 9,</w>
12 -0x
jne_0xffffffffffffffb 9,</w>
jmp_0xffffffffffffff6 c,</w>
movzx_eax_byte_ptr_[r ip+0x20
mov_edx_dword_ptr_[rax+0x c],</w>
mov_edx_dword_ptr_[r di],</w>
je_0xc e,</w>
0 a],</w>
mov_edx_0x1 6,</w>
jmp_0x3 f,</w>
cmp_rbx _qword_ptr_[r
bx+ 3],</w>
add_r13 _rax,</w>
13+0x 30],</w>
mov_word_ptr_[r bx+
mov_rax_qword_ptr_[rip+0x2 1c
mov_qword_ptr_[rsp] _rbx,</w>
jmp_0xfffffffffff b
mov_qword_ptr_[rsp+0x20] _r11,</w>
lea_rdx_[rsp+0x 50],</w>
jmp_0xffffffffffffff5 1,</w>
_0xfffffff 4,</w>
38 ]_2,</w>
mov_rax_qword_ptr_[rdi+0x e0],</w>
mov_r8 _r9,</w>
jmp_0xffffffffffffff7 4,</w>
movsx _rbx
jne_0x7 8,</w>
je_0xb f,</w>
cmp_qword_ptr_[rbp-0x 40]_0,</w>
cmp_dword_ptr_[r dx
]_ zmm
je_0xd 2,</w>
99 99
mov_r10 _qword_ptr_[rsp+0x28],</w>
cmp_r8d _1,</w>
8 -8],</w>
4] _dl,</w>
mov_qword_ptr_[rbx ]_rdx,</w>
mov_esi _0x800,</w>
mov_qword_ptr_[rbp-0x1 8]_0,</w>
jmp_0xfffffffffffff 8f
lea_rdi_[r dx
4 00,</w>
mov_rdi_qword_ptr_[rip+0x2 3
mov_rax_qword_ptr_[rip+0x20 a
mov_rax_qword_ptr_[rbx+0x 40],</w>
jmp_0xffffffffffffff5 a,</w>
cmp_r13 _rbx,</w>
0] _dl,</w>
si +rdx],</w>
jmp_0xffffffffffffff6 6,</w>
call_0xfffffffffffff 5b
mov_qword_ptr_[rsp+0x3 0]_rcx,</w>
mov_qword_ptr_[rbx+0x 3
and _dl
test_byte_ptr_[r ax
mov_edi _0x84,</w>
call_0xfffffffffffa 3
sete _bl,</w>
movups_xmmword_ptr_[r bp+0x
jne_0x7 6,</w>
jmp_0xffffffffffffffd d,</w>
jmp_0xffffffffffffff4 9,</w>
je_0x8 8,</w>
cmp_byte_ptr_[r 12+
call_0xfffffffffffb 2
8] _0x20,</w>
5b 8],</w>
1e 0,</w>
0] _ebp,</w>
mov_rdi_qword_ptr_[r ax+0x28],</w>
mov_rax_qword_ptr_[rbp-0x 138],</w>
je_0xc a,</w>
cmp _rsp
c 0]_rax,</w>
and_rdx _0xfffffffffffffffa,</w>
sub_rsp_0x c8,</w>
movsxd_rbp _ebp,</w>
lea_rcx_[rip+0x 8
jmp_0xffffffffffffff6 5,</w>
cmovne _rdx
_0x df,</w>
mov_eax _0xffffffea,</w>
mov_dword_ptr_[rax] _0xc,</w>
lea_rdi_[rip+0x 1e
jmp_0xffffffffffffff6 f,</w>
jmp_0xffffffffffffff5 4,</w>
ax +rdx],</w>
add_eax _esi,</w>
jne_0x 40
and_eax _0x20,</w>
- 1]_al,</w>
je_0xffffffffffffff e9,</w>
call_0xfffffffffffff 6a
call_0xfffffffffffe fb
call_0xfffffffffffe ea
00 4,</w>
mov_qword_ptr_[rdx +8]_rax,</w>
mov_ebx _r8d,</w>
call_0xfffffffffffff 2
p test
mov_rsi_qword_ptr_[rbp-0x 10],</w>
mov_dword_ptr_[rsp+0x c]_1,</w>
jne_0x e
jmp_0xfffffffffffff 96
call_0xffffffffffff 4e
call_0xfffffffffffe fe
98 ]_1,</w>
90 ]_1,</w>
mov_rax_qword_ptr_[rbp-0x 120],</w>
mov_qword_ptr_[rbp-0x1 0]_0,</w>
call_0xffffffffffff 10
call_0xfffffffffffe fd
call_0xfffffffffff 95
mov_rsi_qword_ptr_[r 12+8],</w>
mov_qword_ptr_[rsp+0xa 8]_0,</w>
jmp_0xffffffffffffff5 9,</w>
jmp_0x3 e,</w>
cvtsi2 sd
add_rcx _rsi,</w>
- 6],</w>
mov_esi_dword_ptr_[r sp+0x18],</w>
lea_rsi_[rip+0x 5b
lea_rcx_[rax *8],</w>
jmp_0xffffffffffffff4 c,</w>
je_0xc 3,</w>
sbb _r
jne_0x7 4,</w>
jmp_0xffffffffffffff5 7,</w>
call_0xfffffffffff 99
c] _edi,</w>
_0x8 00000000
sub_esi _1,</w>
mov_rax_qword_ptr_[rip+0x2 1e
mov_r14d _r8d,</w>
mov_qword_ptr_[rsp+0x2 0]_r8,</w>
cmp_r15d _1,</w>
3 50],</w>
mov_qword_ptr_[rsp+0xc 0]_rax,</w>
je_0xc 2,</w>
13 4],</w>
shl_rdx _5,</w>
or_edx _ecx,</w>
movsxd_rdx_dword_ptr_[r 11+rdx*4],</w>
mov_rbx_qword_ptr_[r bp],</w>
jmp_0x3 5,</w>
je_0x ed,</w>
call_0xffffffffffffb 8
call_0xfffffffffffe ff
_0xf4 240,</w>
37 0,</w>
mov_byte_ptr_[r bx]
50 ]_2,</w>
-0x 1
mov_rcx_qword_ptr_[r ax+0x18],</w>
mov_eax_dword_ptr_[rbp-0x 88],</w>
je_0xd 3,</w>
54 ]_1,</w>
mov_rax_qword_ptr_[r 15+0x18],</w>
mov_r9d_dword_ptr_[r sp+0x10],</w>
mov_qword_ptr_[rax] _rbp,</w>
jmp_0xffffffffffffffd b,</w>
jmp_0xffffffffffffff4 6,</w>
15 *8],</w>
mov_ecx _0xb,</w>
lea_r8_[rip+0x b
cmp_r12d _dword_ptr_[r
55 6,</w>
26 0,</w>
0 5],</w>
mov_rax_qword_ptr_[rbx+0x 80],</w>
mov_dword_ptr_[rbp-0x 12
lea_rdx_[r11 +rdx],</w>
cmp_dl _0x20,</w>
mov_rdx_qword_ptr_[r di+8],</w>
call_0xfffffffffffe ec
add_edx _dword_ptr_[r
84 ]_0,</w>
5 ]_1,</w>
3d 0],</w>
test_ dx
mov_dword_ptr_[r 14+
call_0xfffffffffffff 54
jne_0x6 c,</w>
jmp_0xffffffffffffff6 3,</w>
3 80],</w>
16 0,</w>
2a 0,</w>
mov_rax_qword_ptr_[rip+0x2 1b
call_0xfffffffffffe ed
sar_rsi _3,</w>
mov_rsi_qword_ptr_[r bp+0x10],</w>
call_0x 6f
a 0]_rax,</w>
w _word_ptr_[r
mov_qword_ptr_[rsp+0x20] _r10,</w>
jne_0xffffffffffffffb b,</w>
je_0xd 0,</w>
_qword_ptr_[rsp+0x 98],</w>
7 e0],</w>
3c 8],</w>
jne_0x7 9,</w>
mov_rax_qword_ptr_[r 12+0x18],</w>
lea_rax_[rbp-0x18 5d0],</w>
jmp _r9,</w>
bp+0x 14],</w>
call_0xffffffffffffb 5
call_0xffffffffffff 00
movaps_xmmword_ptr_[rsp+0x 30]_xmm0,</w>
mov_r9d_dword_ptr_[r sp+0x18],</w>
mov_r15_qword_ptr_[r ax],</w>
mov_dword_ptr_[rsp ]_edx,</w>
mov_dword_ptr_[r 14]_eax,</w>
jne_0x7 d,</w>
9c ]_0,</w>
13+0x1 4],</w>
test _ebp
call_0xfffffffffffff 7d
shl _r13
mov_r9d _0x5
jne_0xffffffffffffffb 8,</w>
jne_0x7 0,</w>
jmp_0xfffffffffffff 8e
ea 0,</w>
div _dword_ptr_[r
add_rdi _8,</w>
_qword_ptr_[rsp+0x a0],</w>
0] _r9d,</w>
sar _esi
jmp_0xffffffffffffff 38,</w>
mov_byte_ptr_[r 15
lea_rdi_[rip+0x 36
jmp_0xffffffffffffff5 5,</w>
cmp_rcx _-1,</w>
50 f,</w>
n p
movsx_rdx _byte_ptr_[r
mov_byte_ptr_[r 14
jmp_0x3 7,</w>
5 ]
mov_rdx_qword_ptr_[r si],</w>
mov_r9d _r14d,</w>
mov_eax_dword_ptr_[rsp+0x 58],</w>
lea_rcx_[rdx +rax],</w>
jmp_0xffffffffffffff 39,</w>
jae_0xffffffffffff fe
cmp_qword_ptr_[rbp-0x 48]_0,</w>
cmp_al _3,</w>
jmp_0xffffffffffffff5 8,</w>
cmp_eax_0xffff87 4f,</w>
call_0xfffffffffffff 67
aaaa aa
9 70],</w>
je_0xb c,</w>
call_0xffffffffffffc 4
lea_r13_[rsp+0x 20],</w>
jne_0x7 7,</w>
jmp_0xffffffffffffff 28,</w>
call_0x c0
28 ]_2,</w>
lea_rdx_[rip+0x 24
jmp_0xffffffffffffff4 f,</w>
jmp_0xffffffffffffff4 e,</w>
jmp _5,</w>
cmp_qword_ptr_[r cx+0x
add_dword_ptr_[r bp-
22 0,</w>
w _8,</w>
2a 8],</w>
shl_eax _0x10,</w>
lea_rdx_[rbp-0x 30],</w>
imul_rdx _rdx
fa 0,</w>
call_0xfffffffffffe e0
call_0xfffffffffffc 2
2 ]_eax,</w>
mov_r12_qword_ptr_[r sp+8],</w>
mov_dword_ptr_[rsp+0x18] _r10d,</w>
lea_rdi_[r bx+8],</w>
jmp_0xffffffffffffff 33,</w>
jmp_0xffffffffffffff 20,</w>
28 8],</w>
test_byte_ptr_[r si+0x
jmp_0xffffffffffffff5 f,</w>
jle_0xffffffffffff f
call_0xffffffffffffa 7
10 +8],</w>
mov_r12d _ebp,</w>
lea_rsi_[rip+0x 6c
_r9 _rax,</w>
sub_r12d _1,</w>
mov_qword_ptr_[rsp+8] _rbx,</w>
jne_0xffffffffffffffb 1,</w>
jmp_0x4 4,</w>
dec _rax,</w>
and_ecx _0x3f,</w>
3e 0,</w>
sub_edi _eax,</w>
mov_edx_dword_ptr_[r bx+8],</w>
mov_edx_0x b,</w>
mov_ebx _ebp,</w>
mov_eax_dword_ptr_[rbx+0x 28],</w>
mov_eax _0x
4] _r14d,</w>
call_0xfffffffffffff 6e
5 8]
mov_rax_qword_ptr_[rbp-0x 148],</w>
mov_ecx_0x1 000,</w>
mov_eax_dword_ptr_[rip+0x2 3
mov_dword_ptr_[rsp+ 8]_1,</w>
jne_0xffffffffffffffb 7,</w>
je_0xd 1,</w>
call_0xfffffffffff 6a
call_0x 7e
add_eax _0x30,</w>
1a 0
test_ah _0x10,</w>
neg _edx,</w>
je_0xc f,</w>
add_rdi _0x10,</w>
movsxd_rax_dword_ptr_[r ip+0x
mov_dword_ptr_[rsp+0x1 8]_1,</w>
call_0xfffffffffffe f0
8 +4],</w>
1f 0
mov_r9d _r13d,</w>
lea_rsi_[rip+0x 48
cmp_qword_ptr_[r di]_0,</w>
1 78],</w>
mov_rcx_qword_ptr_[rbp-0x 40],</w>
mov_rax_qword_ptr_[rdi+0x 28],</w>
lea_rdi_[rip+0x 30
fd 0,</w>
sub _r10d
movaps_xmmword_ptr_[rsp+0x d0
mov_edi _r8d,</w>
lea_rsi_[rip+0x 6a
jmp_0xfffffffffffff 84
call_0xffffffffffff0 a
call_0x2 9
add_rsp_0x c8,</w>
add _r11d
mov_rsi_qword_ptr_[r 14+0x
mov_edx_0x1 1,</w>
je_0xc c,</w>
je_0xc 8,</w>
test_r10b _r10b,</w>
or _dword_ptr_[rsp+0x
cmp_r14 d_eax,</w>
1 70],</w>
mov_qword_ptr_[rdx +r
lea_rax_[r sp+8],</w>
jne_0xffffffffffffffb 4,</w>
je_0x f0,</w>
call_0xfffffffffffff 6d
9 ]_eax,</w>
12 *4],</w>
mov_dword_ptr_[rsp+0x3 c]
lea_rax_[rip+0x 2c
8 *4],</w>
mov_r13_qword_ptr_[r ip+0x
mov_r11 _r9,</w>
mov_r11 _qword_ptr_[rsp+0x28],</w>
lea_rdx_[rax +rax*4],</w>
call_0xfffffffffffff 6f
call_0xfffffffffffe cc
call_0xfffffffffff 6b
ptest _xmm0_xmm2,</w>
p min
mov_rdx_qword_ptr_[r bx+0x1
mov_r13d _edi,</w>
jne_0xfffffffffffff 8
cccccc cd,</w>
add sd_xmm0_xmm1,</w>
mov_rdx_qword_ptr_[rbp-0x b8],</w>
je_0xffffffffffff d
cmp_cl _9,</w>
8c ]_eax,</w>
sub_rsp_0x e8,</w>
mov_rdx_qword_ptr_[rbp-0x 70],</w>
mov_rdi_qword_ptr_[r 12+0x10],</w>
call_0x 5f
10 8,</w>
mov_rdx_qword_ptr_[rsp+0x 80],</w>
mov_rcx_qword_ptr_[r 12+0x
mov_dword_ptr_[rbp-0x 14
jmp_0xffffffffffffff5 2,</w>
jmp_0xffffffffffffff 10,</w>
je_0xc 7,</w>
test_dl _4,</w>
mov_qword_ptr_[r 14+
lea_rax_[rip+0x 5
call_0x 84
test_r11b _r11b,</w>
mov_rdi_qword_ptr_[rsp+0x c0],</w>
jne_0x7 b,</w>
call_qword_ptr_[rax+0x 28],</w>
mov_dword_ptr_[r di]
je_0xc 4,</w>
call_0xfffffffffff 70
call_0xfffffffffff 5b
mov_r12d_dword_ptr_[r ax],</w>
jmp_0xffffffffffffff4 7,</w>
je_0xffffffffffffff e2,</w>
11 0,</w>
1 000,</w>
mov_r13d _r8d,</w>
mov_esi _0xc,</w>
mov_ecx_dword_ptr_[r 13+0x
cmp_qword_ptr_[rax+ 8]_0,</w>
call_0x4 4
jmp_0xffffffffffffff 48,</w>
add_rax _r14,</w>
mov_rsi_qword_ptr_[r ax+r
mov_qword_ptr_[rip+0x2 3
jmp_0xffffffffffffffd f,</w>
jmp_0xfffffffffffff 8a
mov_eax_dword_ptr_[rsp+0x 50],</w>
mov_dword_ptr_[rdx ]_ecx,</w>
lea_rbx_[rsp+0x 20],</w>
jne_0x6 e,</w>
bp+0x 24],</w>
test_byte_ptr_[r ip+0x20
movsd_xmm0 _qword_ptr_[rsp+8],</w>
mov_rbx_qword_ptr_[r bx+0x18],</w>
mov_rax_qword_ptr_[rip+0x2 b
mov_r13_qword_ptr_[r di],</w>
por_xmm2 _xmm3,</w>
mov_dword_ptr_[rsp+0xc] _r9d,</w>
mov_dword_ptr_[rbx ]_edx,</w>
lea_rdx_[rip+0x 22
lea_rdi_[rip+0x 3b
call_0x4 6
7c ]_0,</w>
shl _r8
lea_r8_[rip+0x d
call_qword_ptr_[rbx+0x 98],</w>
_r12 _rax,</w>
5a 0],</w>
mov_dword_ptr_[rsp+0x10] _ecx,</w>
5a 0,</w>
mov_rsi_qword_ptr_[r 13+8],</w>
mov_esi_0x40 7
jne_0x 95,</w>
_xmm2 _xmm2,</w>
_0x4 0000,</w>
mov_rax_qword_ptr_[rip+0x 4
cmp_dword_ptr_[rbp-0x 94]_2,</w>
] _edi,</w>
test_byte_ptr_[r si
mov_rax_qword_ptr_[rbp-0x 130],</w>
lea_rsi_[rip+0x 54
lea_rdi_[rip+0x 34
cmp_edi _-1,</w>
palignr _xmm3
mov_qword_ptr_[rbp-0x 16
je_0x e2,</w>
call_0x cd
and _ah
15+0x1 4],</w>
+rax* 2+1]_0x20,</w>
mov_r12d _0x16,</w>
mov_dword_ptr_[rax+ 4]_edx,</w>
lea_rcx_[rsp+0x 30],</w>
d 0]_rax,</w>
7d 0],</w>
20] _ecx,</w>
jne_ 4,</w>
cmp_byte_ptr_[rdx ]
bx+0x 48],</w>
mov_dword_ptr_[rsp+0x4 0]_0,</w>
mov_dword_ptr_[rbp- 4]_0,</w>
86 0,</w>
14 +rax],</w>
mov_qword_ptr_[r 8+0x
lock _d
lock_d ec
cmp_eax _0x30,</w>
call_0xffffffffffffb 6
_0xfff c,</w>
pmin ub
mov_dword_ptr_[r di-
15 0,</w>
mov_qword_ptr_[rbp-0x7 8]_rax,</w>
mov_eax_dword_ptr_[r cx+0x
cx +rax*4],</w>
0 6],</w>
movups_xmmword_ptr_[r ax]_xmm0,</w>
jmp_0xfffffffffffff 88
f 3
di *8],</w>
add_r15 _8,</w>
9e 0,</w>
14+0x1 4],</w>
mov_ebp _ebx,</w>
9 00,</w>
mov_rbp_qword_ptr_[r sp+8],</w>
mov_qword_ptr_[rbp-0x 14
mov_esi_0x2 e,</w>
lea_rsi_[rip+0x 3f
lea_rax_[rsp+0x a0],</w>
jne_0x 81,</w>
fe 0,</w>
call_0xfffffffffffa 5
19 0,</w>
movzx_r13d _word_ptr_[r
mov_rax_qword_ptr_[rsp+0x c8],</w>
je_0xffffffffffffff e3,</w>
sub _r15d
mov_edx_dword_ptr_[rbp-0x 34],</w>
cmp_qword_ptr_[r si
call_0xfffffffffff 5a
13 0,</w>
mov_rbx_qword_ptr_[r ax+8],</w>
mov_r15_qword_ptr_[r sp+0x18],</w>
mov_esi_dword_ptr_[r ax+8],</w>
je_0xd 4,</w>
d 8]_rax,</w>
cmovne _eax_edx,</w>
mov_rsi_qword_ptr_[rsp+0x 90],</w>
mov_r12 _r9,</w>
mov_eax_dword_ptr_[r bp+0x10],</w>
jne_0xffffffffffffffb 6,</w>
ffff ffe,</w>
cvtsi2sd_xmm1 _rax,</w>
mov_edx_dword_ptr_[rsp+0x 30],</w>
jmp_0xffffffffffffff4 4,</w>
cmp_rax _r13,</w>
si -8],</w>
mov_rdx_qword_ptr_[r 15+0x18],</w>
mov_rbx_qword_ptr_[r di+0x
lea_r8_[rip+0x 13
di +rax*8],</w>
call_0xfffffffffffff 5d
call_0xfffffffffffe f7
15 +rax],</w>
mov_rcx_qword_ptr_[r bx+0x10],</w>
call_0xfffffffffffff 4d
88 ]_1,</w>
mov_dword_ptr_[rbp-0x 20]_eax,</w>
lea_rsi_[rip+0x 66
cmp_qword_ptr_[rax+0x c8]_0,</w>
11 +0x1
0] _0x6
sd_xmm0 _qword_ptr_[r
mov_rax_qword_ptr_[rbp-0x1 10],</w>
call_0xfffffffffffe da
add_r15 _rax,</w>
je_0x10 d,</w>
cx +rax*8],</w>
cmp_ebx _4,</w>
00 0],</w>
mov_dword_ptr_[rsp+0x1 8]_edx,</w>
jmp_0xffffffffffffff4 2,</w>
cmp_r12d _-1,</w>
12 8,</w>
mov_eax_dword_ptr_[r ax+r
imul _ecx
cx +rdx*4],</w>
94 ]_eax,</w>
17 0,</w>
mov_rdx_qword_ptr_[rsp+0x 88],</w>
mov_rdi_qword_ptr_[r 15+0x1
mov_rax_qword_ptr_[rbx+0x c8],</w>
cvttsd2si _rax_xmm0,</w>
sub _r11d
movzx_eax_byte_ptr_[r 13],</w>
mov_qword_ptr_[rsp+0xd 8]_rax,</w>
mov_dword_ptr_[rbp-0x c]_esi,</w>
lea_rcx_[r ax+0x
jmp_0xfffffffffff c
cmp_dword_ptr_[rbp-0x 2c]_0,</w>
call_0xfffffffffffff 48
9 +0x10],</w>
0] _edi,</w>
mov_rax_qword_ptr_[rbp-0xf 20],</w>
mov_ecx _r10d,</w>
mov_eax_dword_ptr_[rip+0x2 7
lea_rbp_[rsp+0x 20],</w>
44 ]_1,</w>
sub_rsp _0xa0,</w>
mov_rsi_qword_ptr_[r bx+0x28],</w>
mov_r8d _0x
mov_esi _esi,</w>
mov_dword_ptr_[r 8+0x
jmp_0xffffffffffffff e0,</w>
bswap _ecx,</w>
np ck
movzx_eax_byte_ptr_[r 15],</w>
mov_rdx_qword_ptr_[rbp-0x 98],</w>
mov_rdx _-0x
mov_qword_ptr_[rdi +8]_0,</w>
mov_ebx _r12d,</w>
call_0xfffffffffffff 6c
_qword_ptr_fs:[r ax],</w>
20 ]_xmm6,</w>
0 b],</w>
mov_rdi_qword_ptr_[r14+0x 30],</w>
mov_r11 _qword_ptr_[rbp-0x
mov_dword_ptr_[rip+0x2 10
lea_r14_[r sp+0x10],</w>
cmp_rbp _r12,</w>
call_0xfffffffffffff 4b
5 60],</w>
mov_r8d _r10d,</w>
mov_eax_dword_ptr_[rip+0x2 10
lddqu_xmm0_xmmword_ptr_[r si+0x
jne_0xffffffffffffffa e,</w>
jne_0x 80,</w>
jmp_0xffffffffffffff4 1,</w>
je_0xd b,</w>
+rax ]_dl,</w>
lea_rcx_[rip+0x 12
jne_ 5,</w>
mov_rdi_qword_ptr_[r13+0x 30],</w>
mov_esi_0x4 17
je_0x f6,</w>
fld _xword_ptr_[r
4 f0],</w>
or _al
add _word_ptr_[r
4 ]_dx,</w>
lea_rax_[rbp-0x 60],</w>
jmp_0xffffffffffffff4 d,</w>
jmp_0xffffffffffffff 1d,</w>
2 ]_cx,</w>
1 68],</w>
mov_rax_qword_ptr_[rax+0x 68],</w>
mov_r11 _rax,</w>
mov_edi _0xe,</w>
mov_edi _0xd,</w>
mov_dword_ptr_[rbx+0x 28
mov_byte_ptr_[r 14+0x
5 30],</w>
movzx_r12d _word_ptr_[r
mov_rax_qword_ptr_[rbp-0x8 28],</w>
mov_qword_ptr_[rbp-0x8 0]_rax,</w>
mov_eax_dword_ptr_[rsp+0x 60],</w>
mov_eax_dword_ptr_[rsp+0x 4c],</w>
mov_dword_ptr_[rsp+0x5 0]_eax,</w>
mov_dword_ptr_[rsp+0x e
lea_rsi_[rsp+0x c],</w>
call_0xffffffffffff 44
add_r8 _1,</w>
mov_qword_ptr_[rbp-0x9 0]_rax,</w>
_0x1 ff,</w>
4] _0xa,</w>
0 2],</w>
palignr _xmm4
call_0xfffffffffffff 68
mov_rdi_qword_ptr_[rsp+0x d0],</w>
mov_eax_dword_ptr_[rbp-0x 50],</w>
mov_eax_dword_ptr_[rbp-0x 48],</w>
jmp_0xffffffffffffff 3d,</w>
imul _esi
call_0xfffffffffffa 2
add_rsp_0x e8,</w>
35 0,</w>
mov_edi_0x4 13
mov_eax_dword_ptr_[rbp-0x 94],</w>
lea_rdx_[rax -8],</w>
jne_0x7 3,</w>
call _rdx,</w>
mov_r15d _esi,</w>
mov_esi_0x4 13
jmp_0xffffffffffffff 35,</w>
fc 0,</w>
call_0x 8f
94 0,</w>
20 20
lea_rax_[rip+0x 8
lea_rax_[rbp-0x b0],</w>
je_0xfffffffffffff 8
and_eax _0xffff
mov_r10 _qword_ptr_[rbp-0x
mov nt
jmp_0xffffffffffffff5 e,</w>
cmp_byte_ptr_[rbp-0x 6c]_0,</w>
call_0xfffffffffffff 60
add_rsi _4,</w>
+rcx +0x1
movsxd_rax _esi,</w>
jne_0x7 1,</w>
je_0xfffffffffffffff 6,</w>
cmp_qword_ptr_[rbp-0x 10
cmp_eax _0xc,</w>
test_byte_ptr_[rdx+0x1 34]_0x40,</w>
jne_0x7 e,</w>
jmp_0xffffffffffffff 37,</w>
cmp_rdi _rsi,</w>
bp+0x c],</w>
mov_rax_qword_ptr_[rbp+0x 30],</w>
mov_eax_dword_ptr_[rip+0x2 8
lea_rcx_[rip+0x 10
jne_0x 8f,</w>
call _r14,</w>
_edx _ecx,</w>
5 20],</w>
mov_rax_qword_ptr_[rbx+0x 400],</w>
mov_eax_dword_ptr_[rbp-0x 5c],</w>
lea_rsi_[rsp+0x 28],</w>
98 0,</w>
mov_rdi_qword_ptr_[r si],</w>
mov_qword_ptr_[rsp+0x2 8]_r9,</w>
bx *2],</w>
2 68],</w>
setb _al,</w>
movsxd_rdx _ebp,</w>
mov_rcx_qword_ptr_[rcx+0x 70],</w>
mov_qword_ptr_[rax+0x4 0]_rdx,</w>
mov_eax_dword_ptr_[r di+0x10],</w>
mov_dword_ptr_[rsp+0x1 8]_ecx,</w>
lea_eax_[rdx-0x 1010101],</w>
je_0xd c,</w>
cmp_rax _2,</w>
cmp_dword_ptr_[r bx
54 0,</w>
ss 2
mov_r11d_dword_ptr_[r sp+0x10],</w>
mov_qword_ptr_[rbp-0x4 0]_rcx,</w>
mov_ecx_dword_ptr_[r ax+0x428],</w>
jmp_0x3 b,</w>
je_0xd d,</w>
cvt ss2
and_eax _0x1f,</w>
40 1,</w>
movsx_edx _word_ptr_[r
mov_rax_qword_ptr_[rip+0x2 24
lea_rax_[rsp+0x 38],</w>
jne_0xffffffffffffffb 0,</w>
jmp_qword_ptr_[r ax*8+0x
jmp_0xffffffffffffff 14,</w>
call_0xfffffffffffff 7e
5 ]_rax,</w>
0 d],</w>
- 8]_rdx,</w>
shr_eax _3,</w>
setne _bl,</w>
movdqu_xmmword_ptr_[r 8]_xmm0,</w>
mov_r14 _r9,</w>
mov_edi_dword_ptr_[r sp+8],</w>
jmp_0xffffffffffffff 3f,</w>
jmp_0xfffffffffffff 7a
c ]_rax,</w>
c ]_ax,</w>
_dword_ptr_[r si],</w>
0 3],</w>
test_dx _dx,</w>
lea_rsi_[rip+0x 2f
call_0xffffffffffff 5f
bx+0x 60],</w>
-0x 20],</w>
or _r13d
mov_rdx_qword_ptr_[r cx+0x
mov_rax_qword_ptr_[rbp-0x 158],</w>
inc _ebp,</w>
call_0xfffffffffffff 4a
7 10,</w>
mov_r8 _rsp,</w>
jmp_0xffffffffffffff 3e,</w>
cvtsi2sd_xmm0 _rdx,</w>
cmp_rbp _rdx,</w>
call_0xfffffffffffff 64
add_rax _r15,</w>
_0x7 2,</w>
or_edx _2,</w>
jmp_0xffffffffffffff 36,</w>
je_0x e5,</w>
]_ bp,</w>
movdqu_xmmword_ptr_[rdi ]_xmm0,</w>
mov_rax_qword_ptr_[rbp-0x 1b8],</w>
lea_r12 _[rax
jmp_0xffffffffffffff 2d,</w>
jmp_0xffffffffffffff 24,</w>
call_qword_ptr_[r 12+0x
call_0xfffffffffff 5d
and_r8d _1,</w>
_0x1 0000000,</w>
or_byte_ptr_[r bx+0x
movzx_esi _sil,</w>
mov_dword_ptr_[rsp] _0x10,</w>
lea_eax_[rdx +1],</w>
js _0xa
je_0xfffffffffffffff 1,</w>
0 7],</w>
lea_rsi_[rip+0x 7d
lea_rdi_[rip+0x 3d
lea_esi _[rdx
jmp_0xffffffffffffff4 a,</w>
jmp_0x4 1,</w>
inc _rcx,</w>
call_0xfffffffffffe d0
4c e
sub_rsp_0x 90,</w>
mov_qword_ptr_[rbp-0xb 0]_rax,</w>
call_0xffffffffffff 64
call_0xfffffffffffe eb
add_rax _3,</w>
add_qword_ptr_[rbp- 8]_1,</w>
mov_ecx_dword_ptr_[r 14+0x
jne_0xffffffffffffffb 3,</w>
jmp_0xffffffffffffff4 b,</w>
call_0xfffffffffffff 57
lea_rsi_[rip+0x 6b
add_edi _1,</w>
mov_edx_dword_ptr_[rax+0x 41c],</w>
mov_edx_dword_ptr_[r 15],</w>
mov_byte_ptr_[r 12+0x
jmp_0xffffffffffffff4 5,</w>
15+0x 38],</w>
0 e],</w>
sbb _rcx_rcx,</w>
movzx_eax_byte_ptr_[r dx+2],</w>
jne_0xffffffffffff d
1b 0,</w>
mov_rax_qword_ptr_[rip+0x2 20
je_0x e0,</w>
inc _r12d,</w>
cmp_qword_ptr_[r si+0x
bx+ 6],</w>
add_rax _0x10
or_eax _4,</w>
mov_qword_ptr_[rax +rdx*
mov_eax_dword_ptr_[rip+0x 3
lea_rsi_[rip+0x 7a
js _0x6
jmp_0xffffffffffffff 2f,</w>
mov_eax_dword_ptr_[rsp+0x 80],</w>
lea_edi _[rax
cmp_rdi _qword_ptr_[rsp],</w>
call_0xfffffffffffff 58
6 ]_dx,</w>
0 f],</w>
mov_qword_ptr_[rsp+0x2 8]_r11,</w>
je_0x ee,</w>
inc _r12,</w>
movsxd_rax _r13d,</w>
mov_rbp _r9,</w>
mov_r15 _qword_ptr_[rsp+0x20],</w>
mov_edx_0x f,</w>
mov_eax_dword_ptr_[r di+4],</w>
ff 0,</w>
cx+r 11
call_0xfffffffffff 6c
mov_eax_0x6 0
je_0x ea,</w>
15 8,</w>
mov_word_ptr_[r si+0x1
mov_rax_qword_ptr_[rbx+0x 48],</w>
mov_qword_ptr_[rip+0x2 1c
mov_byte_ptr_[r sp+0x10
jmp_0xffffffffffffff 2e,</w>
jmp_0xfffffffffffffe f0,</w>
jb _0x4
mov_r14 _rsp,</w>
mov_dword_ptr_[rax+0x2 8]_edx,</w>
cvtsi2 ss_xmm0
cmovne _rdx_rax,</w>
14 8,</w>
13 *
shl_eax _4,</w>
lea_rcx_[r cx
mov_qword_ptr_[rbp-0x5 8]_rdx,</w>
mov_edx_dword_ptr_[rsp+0x 2c],</w>
mov_eax_dword_ptr_[rax+0x 420],</w>
mov_dword_ptr_[rsp+0x 4c]_eax,</w>
lea_rdx_[rsp+0x 28],</w>
je_0xc b,</w>
cmp_byte_ptr_[r di+0x
call_0x3 9
8 -1],</w>
shl _r15
mov_rcx_qword_ptr_[r si-0x
mov_rax_qword_ptr_[rbp+0x 80],</w>
mov_qword_ptr_[rsp+0xd 0]_0,</w>
je_0xd 9,</w>
call_0xffffffffffff 95
b 9a
add_rcx _4,</w>
mov_qword_ptr_[rbp-0x 13
mov_eax_dword_ptr_[rbp-0x 98],</w>
call_0xfffffffffffff 70
mov_qword_ptr_[rbx+0x 28]_0,</w>
mov_qword_ptr_[r12 +
mov_eax _r11d,</w>
jne_0x 8a,</w>
je_0xffffffffffffff e4,</w>
add_rdx _2,</w>
movaps_xmmword_ptr_[r sp]_xmm0,</w>
mov_r8 _qword_ptr_[rsp+0x48],</w>
mov_qword_ptr_[rsp+0xd 0]_rax,</w>
mov_dword_ptr_[rsp+0x6 0]_eax,</w>
24 ]_ax,</w>
1f 0,</w>
test_dl _1,</w>
cmp_qword_ptr_[r 12+0x1
8] _r15d,</w>
4b 0],</w>
20] _rsi,</w>
shr_eax _0x10,</w>
movzx_ebp _word_ptr_[r
mov_rdi_qword_ptr_[rbx+0x 38],</w>
jmp_0xfffffffffffff 7d
ja _0x10
mov_rcx_qword_ptr_[rbp-0x 38],</w>
cmp_al _0x4
add_r13 _0x10,</w>
si+0x 38],</w>
mov_r13d _0xffffffff,</w>
jmp_0xfffffffffffff 85
jmp_0xfffffffffffff 7b
call_0xfffffffffffff 78
call_0xffffffffffff 22
_0x e
mov_rax_qword_ptr_[rbp-0x1 68],</w>
lea_rsi_[rip+0x 46
add_rsp_0x d0,</w>
] _r15,</w>
mov_rax_qword_ptr_[rip+0x20 d
lea_rax_[r bp+r
jns_0xffffffffffff fe
jmp_0xffffffffffffff 3c,</w>
jmp_0xffffffffffffff 1e,</w>
dx+0x1 c],</w>
a 9
test_byte_ptr_[rax+0x1 34]_1,</w>
mov_r8d_dword_ptr_[r ip+0x
je_0xd a,</w>
je_0x e6,</w>
cmp_word_ptr_[r sp+0x
call_0x4 8
add_rax _r13,</w>
7 ]_rax,</w>
inc _r13d,</w>
mov_qword_ptr_[r13 +8]_rax,</w>
mov_eax _0x2
mov_dword_ptr_[rsp+0x1 0]_1,</w>
di *
cmp_eax _0xf,</w>
cmp_byte_ptr_[rax+ 1]_0,</w>
c 8]_rax,</w>
test_byte_ptr_[r cx+0x1
movaps_xmmword_ptr_[rsp+0x 40]_xmm0,</w>
mov_rbx _r9,</w>
mov_r8d_dword_ptr_[r ax],</w>
mov_r14_qword_ptr_[r sp+0x18],</w>
mov_qword_ptr_[rax+0x 28]_0,</w>
jmp_0xffffffffffff da
je_0xd 6,</w>
cmp_dword_ptr_[r di+0x1
bx+0x1 6],</w>
mov_ebx _r14d,</w>
jne_0xfffffffffffffff 7,</w>
je_0xffffffffffffff e5,</w>
jmp_0xfffffffffffffe dc,</w>
e e0],</w>
div _esi,</w>
call_0xfffffffffffe ca
add_r14 _rax,</w>
] _r8,</w>
mov_r9d _2,</w>
mov_r10 _rdi,</w>
lea_rsi_[rip+0x 9a
call_0xfffffffffffff 45
call_0xffffffffffffa 8
call_0xfffffffffffe cd
_st( 1
6 ]_rax,</w>
20 ]_2,</w>
movzx_edx_byte_ptr_[r di],</w>
mov_ecx_dword_ptr_[r bx],</w>
mov_dword_ptr_[rbx+ 8]_eax,</w>
js _0x8
call_0x d0
mov_r8_qword_ptr_[r bx],</w>
je_0x e1,</w>
4d 0],</w>
4 60],</w>
jmp_0xffffffffffffff0 e,</w>
cmp_r11 _r9,</w>
13 *4],</w>
movsxd_rdx _r12d,</w>
mov_word_ptr_[r di+
mov_esi _0x3d,</w>
lea_rsi_[rip+0x 6d
call_0xfffffffffffff 44
call_qword_ptr_[r bx+0x1
call_0x4 5
call_0x da
and_edx _3,</w>
jne_0x 9c,</w>
jmp_0x3 a,</w>
f ]_1,</w>
call_0xfffffffffff 7e
6c ]_1,</w>
mov_eax_dword_ptr_[rbp-0x 70],</w>
lea_rsi_[rsp+0x 80],</w>
jne_0xffffffffffffffb 2,</w>
call_0xfffffffffff 93
9c ]_eax,</w>
lea_rax_[r bx+1],</w>
add_rcx _8,</w>
add_rcx _0x20,</w>
add_dword_ptr_[r ip+0x
mov_dword_ptr_[rbp-0x 4b
call_0xfffffffffffff 47
call_0xfffffffffff 66
2 f0],</w>
mov_dword_ptr_[rsp+0x5 8]_0,</w>
call_0xfffffffffffff 4f
84 0,</w>
mov_rdx_qword_ptr_[rip+0x 3
mov_rax_qword_ptr_[rbp-0x4 28],</w>
js _0xd,</w>
je_0xffffffffffffff d9,</w>
cmp_byte_ptr_[rbp ]
call_0xfffffffffff 60
call_0xfffffffffff 57
bp+0x 98],</w>
20 ]_xmm2,</w>
movzx_eax_byte_ptr_[r 14],</w>
mov_rcx_qword_ptr_[rsp+0x 88],</w>
mov_rax_qword_ptr_[rip+0x20 c
mov_rax_qword_ptr_[rip+0x20 b
mov_r15_qword_ptr_[r sp+8],</w>
mov_r12 _qword_ptr_[rbp-0x
mov_ecx_0x1 a,</w>
jmp_0xffffffffffffff 32,</w>
inc _qword_ptr_[r
ax+0x 60],</w>
_0xfffffffffffffff c,</w>
si +rax*8],</w>
mov_rax_qword_ptr_[rbp-0x 150],</w>
lea_rdi_[rip+0x 40
jle_0x c,</w>
je_0x f5,</w>
cmp_edx _0x2f,</w>
60 0],</w>
mov_r9d_dword_ptr_[r ip+0x2
lea_rdi_[rsp+0x 28],</w>
jne_0xffffffffffffffb 5,</w>
d 9
call_0xfffffffffffff 76
movsx_ecx _byte_ptr_[r
mov_r10 _qword_ptr_[rsp+0x38],</w>
jne_0x 92,</w>
cmp_qword_ptr_[rsp+0x 30]_0,</w>
cmp_esi _ecx,</w>
cmp_eax _r13d,</w>
cmp_byte_ptr_[rcx ]_0,</w>
_st(1 ),</w>
27 0,</w>
1 8]_eax,</w>
not _rcx,</w>
mov_ecx_dword_ptr_[rsp+0x 30],</w>
mov_dword_ptr_[rbp-0x 3c]_eax,</w>
lea_rsi_[rdx -0x
cmp_r12 _rbp,</w>
call_0xffffffffffff 4f
call_0xfffffffffff 5e
bp+0x 48],</w>
mov_r8d _0x6
mov_eax_dword_ptr_[rax+0x 24],</w>
lea_rsi_[rip+0x 7b
cmp_rsi _qword_ptr_[r
call_0xfffffffffffe bb
10 ]_xmm1,</w>
test_ah _2,</w>
mov_qword_ptr_[rsp+0x2 8]_r10,</w>
jmp_0xffffffffffffff 2a,</w>
je_0x e9,</w>
call_0x 7f
shr_edx _0x1f,</w>
mov_rax_qword_ptr_[r14+0x e0],</w>
mov_rax_qword_ptr_[r 15+0x1
mov_rax_-0x 20,</w>
mov_edx_0x e,</w>
cmp_rbx _r14,</w>
call_0xb a
_byte_ptr_[rsi +0x1
sub_rax _rbp,</w>
mov_qword_ptr_[rsp+0x3 8]_rdx,</w>
je_0xffffffffffffff d6,</w>
div _rsi,</w>
cmp_byte_ptr_[r 13+
18 8,</w>
or _rdx
jmp_0xffffffffffffff 29,</w>
13 8,</w>
10 +
mov_rbx_qword_ptr_[rsp+0x 58],</w>
mov_qword_ptr_[rbp+0x 10]_0,</w>
call_0xfffffffffffff 5e
13+0x 38],</w>
0 ]_2,</w>
jmp_0xffffffffffffff 30,</w>
je_0xffffffffffffff d7,</w>
a ]_1,</w>
4] _0x20,</w>
movzx_eax_byte_ptr_[r di+0x
call_0xfffffffffffff 5c
28 ]_xmm0,</w>
ror _rax
jne_0x 4a
ja_0xffffffffffff fc
cmp_edi _eax,</w>
call_0xffffffffffffa 5
bx+0x 98],</w>
movsx _r8d
mov_rdi_qword_ptr_[r 13+0x10],</w>
je_0x f9,</w>
jbe_0x c,</w>
inc _dword_ptr_[rip+0x
cmp_rcx _qword_ptr_[r
cmp_r12d _2,</w>
mov_rax_qword_ptr_[rbp+0x 28],</w>
mov_edx_0x b
mov_ecx_dword_ptr_[r 15+0x28],</w>
mov_dword_ptr_[rsp+0x f
mov_dword_ptr_[rbp-0x1 8]_eax,</w>
lea_rdx_[rip+0x 1e
jne_0x 99,</w>
call_0xfffffffffffff 5a
20 ]_xmm4,</w>
test_byte_ptr_[r 13+0x1
movzx_esi _al,</w>
mov_rsi_qword_ptr_[r 12+0x18],</w>
mov_rax_qword_ptr_[rbp-0x 140],</w>
mov_qword_ptr_[rbp-0xa 0]_rax,</w>
mov_esi_dword_ptr_[r bx],</w>
cmp_rax_qword_ptr_[rbp-0x 10],</w>
sub_eax _esi,</w>
mov_byte_ptr_[r bx+r
je_0xd e,</w>
je_0x fc,</w>
call_0xfffffffffffe cb
mov_rdi_qword_ptr_[rip+0x2 2
lea_rdx_[rbp-0x 40],</w>
jmp_0xffffffffffffff 31,</w>
mov_rsi_qword_ptr_[rsp+0x 98],</w>
mov_rax_qword_ptr_[rip+0x2 c
mov_dword_ptr_[rsp+0x6 8]_eax,</w>
lea_r14_[rsp+0x 20],</w>
jmp_0xffffffffffffff4 3,</w>
cmp_edx _esi,</w>
cmp_dword_ptr_[r 12+
call_0xffffffffffff 3f
mov_rdi_qword_ptr_[r 14+0x10],</w>
mov_rax_qword_ptr_[rax+0x a0],</w>
mov_r13d _ebx,</w>
mov_qword_ptr_[r13 ]_0,</w>
mov_esi_0x4 1e
test _edi
si +rcx],</w>
mov_rdx_qword_ptr_[rax+0x 48],</w>
cmp_rax _0xe,</w>
add_rbx _0x18,</w>
lea_rax_[rbp-0x 10],</w>
jmp_0xfffffffffffffe e
je_0xffffffffffffff cf,</w>
cmp_rdi _qword_ptr_[r
call _r15,</w>
_xmm0_xmm 5,</w>
8] _0x80,</w>
mov_ecx_dword_ptr_[rsp+0x 38],</w>
mov_eax_dword_ptr_[r dx+8],</w>
mov_dword_ptr_[rsp] _ecx,</w>
jne_0xffffffffffffffa a,</w>
jmp_0xfffffffffffff 3
je_0x fd,</w>
cmp_r8 _rax,</w>
cmp_eax _0x64,</w>
call_0xfffffffffff 67
38 8,</w>
12 +rax*8],</w>
mov_edi_0x4 15
mov_ecx_dword_ptr_[r dx+4],</w>
lea_rsi_[rip+0x 70
lea_rdi_[rsp+0x 90],</w>
lea_rcx_[rip+0x 13
add_ecx _eax,</w>
1c ]_1,</w>
movabs_rax _0x6
mov_r12d _r13d,</w>
lea_eax_[r cx
e ]_rax,</w>
c] _0x30,</w>
bx +rdx],</w>
mov_rsi_qword_ptr_[r 14+8],</w>
mov_qword_ptr_[rsp+0x10] _rbx,</w>
jmp_0xffffffffffffff 17,</w>
je_0xffffffffffffff e8,</w>
call_0xfffffffffffff 4e
94 6,</w>
8888 8888
4d 8],</w>
mov_rdx_qword_ptr_[r 14+0x18],</w>
jmp_0x b
call_0xffffffffffffa 6
5 10],</w>
lea_rdi_[r ax+0x10],</w>
je_0xd f,</w>
call_0xfffffffffffff 55
movzx_edx_byte_ptr_[r si],</w>
movups_xmmword_ptr_[r ax+0x1
mov_rdi_qword_ptr_[r ax+0x20],</w>
mov_dword_ptr_[rsp ]_8,</w>
jmp_0xfffffffffffff 7c
je_0xffffffffffff f0
mov_esi_0x ff,</w>
6666 667,</w>
1c ]_eax,</w>
movsx _rcx
mov_r13 _r9,</w>
mov_eax_dword_ptr_[rsp+0x 68],</w>
jmp_0xffffffffffffff 22,</w>
f ]_rax,</w>
cmp_r13d _4,</w>
call_0xfffffffffffff 5f
3d 0,</w>
11 8,</w>
movzx_eax_byte_ptr_[r dx+rax],</w>
mov_dword_ptr_[rbp ]_0,</w>
lea_rcx_[rax +8],</w>
92 8,</w>
34 9,</w>
xor pd
mov_rdi_qword_ptr_[rsp+0x 98],</w>
je_0xffffffffffffff ef,</w>
cmp_r12d _ebx,</w>
add _cl_al,</w>
a 3
9b 0,</w>
5d 8],</w>
mul _rdx,</w>
mov_rdx_qword_ptr_[rbx+0x 28],</w>
mov_rax_qword_ptr_[rbx+0x 58],</w>
mov_qword_ptr_[rsp+0x2 8]_rdi,</w>
mov_dword_ptr_[rsp+0x2 4]
call_0xfffffffffff 84
1eb 85
mov_qword_ptr_[rip+0x 4
mov_dword_ptr_[rax+0x 4
lea_rdx_[rsp+0x 70],</w>
jmp_0xffffffffffffff 3a,</w>
cmp_eax _0x16,</w>
cmp_dword_ptr_[r si+0x1
cmove _rsi
call_0xfffffffffff 6d
mov_rbp _qword_ptr_[rsp+0x28],</w>
cmp_dword_ptr_[r si+0x
_0x7 c,</w>
8c ]_0,</w>
2b 0,</w>
mov_r14d _r13d,</w>
mov_qword_ptr_[rsp+0x2 8]_r8,</w>
mov_edi_0x5 b
lea_rcx_[rsp+0x 40],</w>
jne_0x 9a,</w>
jmp_0xffffffffffffff 25,</w>
je_0x d8,</w>
8 ]_5,</w>
5c 8],</w>
mov_rdx_qword_ptr_[r 15+0x10],</w>
mov_dword_ptr_[rsp+ 4]_edx,</w>
lea_rdx_[rsp+0x 80],</w>
jmp_0xffffffffffffff 3b,</w>
f 9
_0x2 000000,</w>
5a 6]_1,</w>
mov_rcx_qword_ptr_[r 13],</w>
mov_edx_0x c
jne_0xffffffffffffffa 9,</w>
cmp_ecx _3,</w>
bp +rax*8],</w>
_0x800000000 0000000,</w>
3 60],</w>
mov_rax_qword_ptr_[rax*8+0x 4
mov_r11_qword_ptr_[r si-0x
lea_rdx_[rip+0x 28
jne_0x 90,</w>
jmp_0xfffffffffffffe fd,</w>
jmp_0x4 d,</w>
call_0xfffffffffffff 3c
movzx_r10d _word_ptr_[r
mov_rdi_qword_ptr_[r bp-8],</w>
lea_rsi_[rip+0x 7c
lea_rdx_[rax +rax*2],</w>
jmp_0xffffffffffffff 15,</w>
jmp_0xfffffffffffff 86
99 9,</w>
70 ]_xmm1,</w>
mov_rdi_qword_ptr_[r15+0x 30],</w>
mov_rax_qword_ptr_[r15+0x 20],</w>
mov_byte_ptr_[r 15+
jne_0xffffffffffffff 9a,</w>
idiv _ecx,</w>
4c 8],</w>
37 8,</w>
26 8,</w>
20 8,</w>
17 8,</w>
mov_rcx_qword_ptr_[rsp+0x 60],</w>
lea_rax_[r bp+0x
jne_0xa 8,</w>
je_0x ec,</w>
sp +rax*8+0x
mov_rdx_qword_ptr_[rsp+0x 90],</w>
mov_rax_qword_ptr_[r12+0x 20],</w>
mov_qword_ptr_[rip+0x2 18
call_0xfffffffffffff 4c
_0x5 7,</w>
mov_r13_qword_ptr_[r sp+0x10],</w>
mov_r11d_dword_ptr_[r sp+0x18],</w>
jmp_0xffffffffffffff0 8,</w>
jle_0xffffffffffff fd
dd 3,</w>
sd_xmm0 _qword_ptr_[rbp-0x
movdqa_xmm 8_xmm5,</w>
mov_r15d _r8d,</w>
mov_esi_0x40 d
jmp_0x4 a,</w>
je_0x ff,</w>
je_0x e8,</w>
ec ]_0,</w>
3 8]_rdx,</w>
mov_dword_ptr_[rsp+0x4 8]_0,</w>
lea_rax_[rdx +4],</w>
jmp_0xffffffffffffff 2c,</w>
jmp_0xffffffffffffff 2b,</w>
cmp_dword_ptr_[r sp
70 b,</w>
1d 0,</w>
+ 7],</w>
sub_edx _esi,</w>
push _0x4
mov_rsi_qword_ptr_[rbp-0x 30],</w>
mov_rbx_qword_ptr_[rsp+0x 40],</w>
mov_qword_ptr_[rsp+0xb 8]_0,</w>
mov_esi_0x40 6
mov_ebp _r13d,</w>
mov_dword_ptr_[rip+0x2 4
jne_0xffffffffffffffa b,</w>
jmp_0xffffffffffffff 23,</w>
e ]_1,</w>
call_0xfffffffffffff 33
add_ecx _dword_ptr_[r
mov_r9d _esi,</w>
mov_eax_0x1 7,</w>
jmp_0xfffffffffffffe d
cmp_qword_ptr_[r cx
cmp_ si
mov_rdi_qword_ptr_[r 13+0x1
jmp_0xffffffffffffff 1c,</w>
je_0xffffffffffffff ce,</w>
] _r9,</w>
or_esi _0xffffffff,</w>
mov_qword_ptr_[rax] _r12,</w>
lea_r11d _[r
call_0x 9f
-1] _0xa,</w>
pcmpgtb_xmm9 _xmm4,</w>
pcmpgtb_xmm 7
pcmpgtb_xmm7 _xmm4,</w>
pand_xmm9 _xmm6,</w>
pand_xmm9 _xmm10,</w>
pand_xmm7 _xmm8,</w>
pand_xmm7 _xmm6,</w>
movdqa_xmm 10_xmm5,</w>
mov_rax_qword_ptr_[rbp-0x1 78],</w>
jmp_0xfffffffffffff 77
cmp_qword_ptr_[rax+0x 20]_0,</w>
and_eax _0x400,</w>
add_qword_ptr_[r sp+0x1
mov_r12_qword_ptr_[r 12],</w>
mov_ecx _0x200,</w>
mov_dword_ptr_[rsp+0x10] _r9d,</w>
jne_0xffffffffffffffa 7,</w>
je_0xffffffffffffff e7,</w>
jb_0xffffffffffff f
call_0x e0
15+0x1 10],</w>
xor_edx _dword_ptr_[r
mov_eax_dword_ptr_[r bp+4],</w>
_0x7f2bb 7
10 ]_xmm0,</w>
mov_rax_qword_ptr_[r14+0x 20],</w>
mov_r12d _r8d,</w>
mov_qword_ptr_[rsp+0xe 0]_rax,</w>
mov_qword_ptr_[rbp-0x3 0]_rcx,</w>
mov_edx_dword_ptr_[rbx+0x c],</w>
mov_edi_dword_ptr_[r sp+4],</w>
mov_dword_ptr_[rax+0x3 0]_edx,</w>
mov_byte_ptr_[rax] _0x5c,</w>
je_0x f4,</w>
cmovne _rcx_rax,</w>
call_0x dd
32 8,</w>
3 30],</w>
shl_rcx _3,</w>
mov_rbp_qword_ptr_[r sp+0x18],</w>
mov_r15 _qword_ptr_[rsp+0x28],</w>
je_0x10 5,</w>
cmp_qword_ptr_[rbx+ 8]_0,</w>
call_0xfffffffffffff 75
_dword_ptr_[rsp+0x 20],</w>
5 48],</w>
2a ]_0,</w>
movsxd_rax _r14d,</w>
lea_rax_[rip+0x 10
jne_0xffffffffffffffa f,</w>
je_0xffffffffffffff dc,</w>
cmp_dword_ptr_[r 13
9d 0,</w>
36 e,</w>
movsxd_r12 _r12d,</w>
mov_qword_ptr_[rsp+0x5 0]_r8,</w>
mov_qword_ptr_[rip+0x2 4
mov_ecx_dword_ptr_[r bx+4],</w>
jmp_0xffffffffffffff 1f,</w>
cmp_qword_ptr_[rsp+0x 40]_0,</w>
call_0xfffffffffff 77
mov_rax_qword_ptr_[rbp-0x 5a8],</w>
lea_rsi_[rip+0x 80
jne_0xffffffffffffffa 2,</w>
jmp_0xfffffffffffffe fe,</w>
je_0x f1,</w>
+rax +4],</w>
movaps_xmmword_ptr_[rsp+0x70 ]_xmm0,</w>
mov_r10d_dword_ptr_[rsp+0x c],</w>
mov_esi_dword_ptr_[r sp+0x1c],</w>
jmp_0xffffffffffffff e2,</w>
jmp_0xffffffffffffff 1a,</w>
4e 8],</w>
28 8,</w>
mov_rsi_qword_ptr_[rbp-0x 20],</w>
mov_r8d_dword_ptr_[r bx+0x
mov_esi_0x4 15
mov_ebp _0x2
mov_eax_dword_ptr_[rip+0x2 18
mov_rax_qword_ptr_[rip+0x2 9
mov_qword_ptr_[rbp+0x 20]_rax,</w>
mov_ecx_dword_ptr_[rbp+0x 28],</w>
jne_0x 8e,</w>
je_0x e7,</w>
cmp_rsi _rcx,</w>
call_0xfffffffffffff 66
call_0xfffffffffffff 42
23 0,</w>
sub_r13d _1,</w>
palignr_xmm2 _xmm1
mov_rsi_qword_ptr_[r dx+8],</w>
mov_edx_dword_ptr_[r bx+4],</w>
mov_eax_dword_ptr_[rax+0x 38],</w>
mov_byte_ptr_[r 14+
lea_rsi_[rip+0x 4e
lea_r8_[rip+0x 20
jne_0xffffffffffffffa d,</w>
jne_0x 93,</w>
je_0x e4,</w>
cmp_eax _edi,</w>
call_0xfffffffffffff 50
add_rdi _rbx,</w>
movaps_xmmword_ptr_[rbp-0x 60
jmp_0xffffffffffffff 16,</w>
inc _edx,</w>
fb 0,</w>
add_rsp _0x60,</w>
1f 8,</w>
0] _r8d,</w>
mov_r15_qword_ptr_[r bx],</w>
mov_edi_0x4 16
jne_0x 91,</w>
jmp_0xffffffffffffff 18,</w>
and_edx _7,</w>
_xmm 9
_qword_ptr_[rsp+0x b0],</w>
+rax*4 -0x
sub_rax _r14,</w>
movsd_qword_ptr_[rsp+ 8
mov_rax_qword_ptr_[rbp-0x2 28],</w>
mov_rax_qword_ptr_[r 8+0x
mov_r14d _ebx,</w>
mov_qword_ptr_[rip+0x2 7
mov_qword_ptr_[rbp-0x2 8]_0,</w>
mov_qword_ptr_[rbp +
mov_byte_ptr_[rax] _0x20,</w>
jmp_0xffffffffffffff0 b,</w>
jmp_0x4 9,</w>
call_0xfffffffffffff 74
call_0xfffffffffffff 3f
1d 8,</w>
mov_esi_dword_ptr_[r sp+0x14],</w>
lea_rsi_[rsp+0x 90],</w>
lea_rdi_[r 12+0x
lea_r9_[r cx+r11
jmp_0xffffffffffffff 26,</w>
e 3
9e 8,</w>
6 0]_eax,</w>
5d 0,</w>
mov_esi _9,</w>
mov_eax_dword_ptr_[rbx+0x c],</w>
cmp_eax _-2,</w>
call_0xffffffffffff0 c
and_eax _0x800,</w>
- 4]_eax,</w>
or_dl _al,</w>
mov_r9_qword_ptr_[r ax],</w>
mov_qword_ptr_[rbp+0x 18]_rax,</w>
lea_r11 _[rsp+0x
jne_0x 94,</w>
je_0xffffffffffffff dd,</w>
call_0xfffffffffffff 29
9 *4],</w>
mov_eax _0xfffffff9,</w>
mov_dword_ptr_[rdx+ 8]_eax,</w>
lea_rcx_[r bx+0x
jmp_0xffffffffffffff0 2,</w>
je_0x f8,</w>
mov_edx_dword_ptr_[rbp-0x 2c],</w>
mov_eax_dword_ptr_[rip+0x2 13
lea_rcx_[rdx +4],</w>
jne_0x f
jmp_0xffffffffffffff 13,</w>
call_0xfffffffffffff 2d
] _r10,</w>
8d 0,</w>
13+0x c],</w>
movzx_edx_byte_ptr_[r ax+2],</w>
mov_esi _r9d,</w>
lea_r8_[rip+0x 11
cvtsi2sd_xmm0 _eax,</w>
mov_ecx_dword_ptr_[r 14+0x28],</w>
je_0x fe,</w>
4 ]_8,</w>
mov_rdi_qword_ptr_[r dx+8],</w>
mov_qword_ptr_[rbp-0x2 0]_0,</w>
mov_edx_0x e
lea_r9_[rcx+r11 -0x10],</w>
cmp_al_0x2 b,</w>
call_qword_ptr_[rbp+0x 98],</w>
9f 0,</w>
mov_esi_0x4 000,</w>
8 ]_dx,</w>
3a 8,</w>
1a 8,</w>
shr_rax _0x20,</w>
mov_rbp_qword_ptr_[r di+0x
mov_edx_0x4 3
mov_ebp _r8d,</w>
jmp _0x40,</w>
je_0x ef,</w>
bx -0x10],</w>
shr _ebx
movsd _xmm4
movaps _xmm7
movaps _xmm3
mov_rdi_qword_ptr_[rdi+0x 20],</w>
mov_edi_0x5 c
call_0xfffffffffffff 35
call_0xfffffffffffff 25
58 2,</w>
4 0]_rdx,</w>
10 4,</w>
pu npck
mov_r10 _rsi,</w>
mov_qword_ptr_[rip+0x2 1a
mov_eax _0x20,</w>
mov_dword_ptr_[rax+0x 20]_edx,</w>
lea_rdx_[rip+0x f
lea_rdx_[r bp+0x
jle_ 9,</w>
f7 0,</w>
cmp_eax _r14d,</w>
call_0xfffffffffffff 27
mov_rax_qword_ptr_[rbp-0x2 48],</w>
mov_byte_ptr_[rbx ]_al,</w>
jmp_0xfffffffffffffe e0,</w>
cmp_r13d _2,</w>
19 8,</w>
test _ebx
mov_word_ptr_[r ip+0x2
mov_rdx_qword_ptr_[r 12+8],</w>
mov_rax_qword_ptr_[rax+0x 660],</w>
mov_qword_ptr_[rsp+0x38 ]_8,</w>
mov_edx_dword_ptr_[rbp-0x 20],</w>
mov_eax_dword_ptr_[r si+4],</w>
lea_rdx_[rip+0x 34
lea_rax_[r 13+0x10],</w>
je_0xd 7,</w>
cmp_dword_ptr_[rbp-0x 14
mov_rsi_qword_ptr_[r 13+0x18],</w>
mov_qword_ptr_[rsp+0x4 0]_rcx,</w>
mov_qword_ptr_[rax+0x4 8]_rdx,</w>
mov_dword_ptr_[rbp-0x 44]_eax,</w>
jmp_0x3 d,</w>
cmove _rbx_rax,</w>
mov_rdx_qword_ptr_[r dx+0x18],</w>
jmp_0xfffffffffffffe f3,</w>
jmp_0xfffffffffffffe bf,</w>
jl _0x1
jbe_0xffffffffffff fc
cmp_byte_ptr_[r 15+
neg _rdx,</w>
mov_rbp_qword_ptr_[r sp+0x10],</w>
mov_rax_qword_ptr_[r13+0x e0],</w>
mov_dword_ptr_[rsp+0x 28]_1,</w>
mov_dword_ptr_[rbx+ 4]_eax,</w>
mov_byte_ptr_[r bp+r
lea_rax_[rsp+0x c0],</w>
jmp_0xffffffffffffff0 d,</w>
jmp_0xffffffffffffff 21,</w>
97 0,</w>
12 *
mov_r12d _r15d,</w>
mov_qword_ptr_[rbp-0x8 8]_rax,</w>
lea_rdi_[rip+0x 3e
jne_0xa 1,</w>
jmp_0x4 b,</w>
call_0xfffffffffffe c0
30 8],</w>
mov_edi_0x4 1a
mov_ebx_dword_ptr_[r ip+0x
mov_dword_ptr_[rsp+0x18] _r8d,</w>
lea_rbp _[rax
lea_rax_[rsp+0x b0],</w>
add_rsi _8,</w>
mov_r8d _0x2
jne_0x 98,</w>
cmp_rcx _rsi,</w>
cmove _rsi_rax,</w>
shl _r8d
jne_0x 8d,</w>
jmp_0xffffffffffffff 11,</w>
je_0xfffffffffffffff 2,</w>
f 20],</w>
cmp_qword_ptr_[rax+0x1 0]_0,</w>
cmp_dword_ptr_[r 14+0x1
call_0xffffffffffffb 4
20 ]_8,</w>
sub_rax _r12,</w>
shr _ax
mov_rax_qword_ptr_[rbx+0x 60],</w>
mov_edi_0x40 a
mov_dword_ptr_[rax+ 8]_0,</w>
jmp_0xffffffffffffff0 1,</w>
je_0x1 1d,</w>
je_0x1 00,</w>
mov_rax_qword_ptr_[rbp-0x4 18],</w>
mov_ebp _r12d,</w>
mov_eax_dword_ptr_[rsp+0x 70],</w>
jne_0x 9d,</w>
je_0xffffffffffffff da,</w>
cmp_byte_ptr_[r 13]_0,</w>
call_0xfffffffffffff 24
and_rcx _0xfffffffffffffffa,</w>
sub_rax _r13,</w>
mov_qword_ptr_[rsp+0xe 0]_0,</w>
mov_qword_ptr_[rbp-0xd 8]_rax,</w>
e 80],</w>
cmp_dword_ptr_[r dx+
cmp_al _0x22,</w>
+rdx* 8+0x
sete _r12b,</w>
mov_rdi_qword_ptr_[rsp+0x1 b0],</w>
mov_rcx_qword_ptr_[r 12],</w>
mov_eax_dword_ptr_[rsp+0x 90],</w>
64 ]_1,</w>
movzx_edx_word_ptr_[r sp+0x
mov_rsi_qword_ptr_[rsp+0x 88],</w>
mov_edi_0x4 20
jne_0xa 3,</w>
cmp_qword_ptr_[rbx+0x1 0]_0,</w>
sub_rdx _qword_ptr_[r
lea_rax_[rbp-0x 90],</w>
lea_rax_[r sp+0x100],</w>
je_0xffffffffffffff e0,</w>
call_0xffffffffffffd 3
add_qword_ptr_[rbp-0x 18]_1,</w>
_0xf 7,</w>
6 24
sbb _cl
sbb_cl _0,</w>
lea_rsi_[rsp+0x 38],</w>
jmp_0xffffffffffff db
call_0xfffffffffffff 40
22 0]
mov_dword_ptr_[rbp- 8]_eax,</w>
mov_dword_ptr_[r di]_eax,</w>
jmp_0xffffffffffffff 12,</w>
jmp_0xfffffffffffffe b9,</w>
cmp_esi _2,</w>
cmp_ebp _ebx,</w>
cmp_dword_ptr_[rax+0x f0]_0,</w>
call_0xfffffffffffff 46
call_0xfffffffffffff 3b
_0xff 00,</w>
8_xmm 7,</w>
10 ]_xmm7,</w>
mov_rax_qword_ptr_[rdi+0x 40],</w>
mov_r8d_dword_ptr_[r sp+0x1c],</w>
mov_edi_0x4 9
mov_dword_ptr_[rsp+0x 44]_eax,</w>
lea_rcx_[rsp+0x 28],</w>
jg _0xa
je_0xffffffffffffff ec,</w>
add_qword_ptr_[r bx+0x
99 0,</w>
2d 8],</w>
00 6,</w>
test_ah _8,</w>
mov_rax_qword_ptr_[rip+0x20 7
mov_dword_ptr_[rsp+0x10] _r11d,</w>
lea_rax_[rbp-0x 18],</w>
jmp_0xfffffffffffffe d8,</w>
call_qword_ptr_[rax+0x 20],</w>
call_0xfffffffffffe b0
and_dword_ptr_[r bx+0x
add_rsi _rcx,</w>
1eb85 1f,</w>
jmp_0xffffffffffffff 1b,</w>
cx+0x 40],</w>
call_qword_ptr_[rax+0x 30],</w>
] _ebp,</w>
93 0,</w>
70 1,</w>
3 10],</w>
16 2,</w>
mov_qword_ptr_[rax+ 8]_rcx,</w>
jmp_0xfffffffffffffe f9,</w>
fe 8,</w>
mov_ecx_dword_ptr_[r di+0x
jne_0xffffffffffffff 98,</w>
jne_0x 9b,</w>
jne_0x 8b,</w>
jmp_0xfffffffffffff 7f
je_0xffffffffffffff de,</w>
je_0xffffffffffffff db,</w>
ax+0x 58],</w>
70 5,</w>
10_xmm 9,</w>
mov_rcx _r11,</w>
mov_rax_qword_ptr_[rbp-0x a
dec _ebx,</w>
99 9],</w>
16 8,</w>
push _0x
palignr _xmm0_xmmword_ptr_[rdi+rdx-0x
mov_ecx _r11d,</w>
je_0x fb,</w>
cmp_byte_ptr_[r 15]_0,</w>
add_rbx _0x20,</w>
9b a
1b 8,</w>
si +rdx
mov_r9 _qword_ptr_[rsp+0x40],</w>
mov_edx_dword_ptr_[rsp+0x 38],</w>
jne_0x 97,</w>
jmp_0xfffffffffffffe f6,</w>
cmp_ecx _-1,</w>
call_0xfffffffffffe db
sub_eax _3,</w>
mov_r12_qword_ptr_[r sp+0x10],</w>
mov_esi_0x40 4
mov_edi_0x4 17
mov_eax_dword_ptr_[rip+0x 4
lea_rax_[rip+0x b
jne_0x b2,</w>
jmp_0xfffffffffffffe fc,</w>
je_0x10 2,</w>
je_0x f3,</w>
call_0xfffffffffffff 3d
8_xmm 6,</w>
3 e0],</w>
movaps_xmmword_ptr_[r dx
mov_qword_ptr_[rsp+0x5 0]_rdx,</w>
mov_qword_ptr_[rax+0x 7
mov_eax_dword_ptr_[rip+0x2 a
jne_0xa 0,</w>
jmp_0xffffffffffffff 19,</w>
jmp_0x4 3,</w>
ed 0,</w>
7 ]_1,</w>
12 4],</w>
mov_rsi_qword_ptr_[r cx],</w>
mov_rax_qword_ptr_[rsp+0x d0],</w>
mov_edx_0x4 2
jmp_0xffffffffffffff 27,</w>
cmp_dword_ptr_[rbp-0x 2
cmovne _ebx_eax,</w>
4a 0,</w>
+ 6],</w>
shl _r14
movsxd_rdx _dword_ptr_[rip+0x2
mov_eax_dword_ptr_[rbp-0x 2
jmp_0xffffffffffffff 00,</w>
call_0x 85
rol _rax
mov_qword_ptr_[rbp-0x9 8]_rax,</w>
mov_byte_ptr_[rax+0x1 0]_0,</w>
58 8,</w>
22 8,</w>
mov_rax_qword_ptr_[r dx+0x10],</w>
mov_rax_qword_ptr_[r 12+0x1
mov_edx_0x d
jmp_0xfffffffffffffea 9,</w>
jmp_0xfffffffffffffe e6,</w>
je_0x f7,</w>
call_0x ea
_0x1 00
99 8,</w>
54 8,</w>
3f 8],</w>
mov_r13d _ebp,</w>
mov_r13 _qword_ptr_[rbp-0x
mov_qword_ptr_[rsp+0x30] _r9,</w>
jmp_0x4 c,</w>
je_0x e3,</w>
jbe_0x 1c,</w>
cmp_ebp _3,</w>
call_0xfffffffffffff 38
3 0]_rcx,</w>
00 8],</w>
vpcmpgtb_xmm 8
vpcmpgtb_xmm 7
vpcmpgtb_xmm 10
vpandn_xmm 8_xmm
vpandn_xmm8_xmm 8_xmm7,</w>
vpandn_xmm 10_xmm
vpandn_xmm10_xmm 10_xmm9,</w>
v por_xmm1_xmm
v pcmpgtb_xmm9
v pand_xmm8_xmm
vpand_xmm8_xmm 8_xmm6,</w>
v pand_xmm10_xmm
vpand_xmm10_xmm 10_xmm
vpand_xmm10_xmm10_xmm 6,</w>
lea_rcx_[rip+0x 9
lea_r9_[r ip-0x
jne_0xffffffffffffffa 6,</w>
jne_0xa f,</w>
jne_0xa 5,</w>
cmp_qword_ptr_[rax+0x c0]_0,</w>
cmp_qword_ptr_[r bp]_0,</w>
9 0]_rdx,</w>
64 0,</w>
mov_r9d _r15d,</w>
lea_rdx_[rip+0x 2a
lea_rax_[rip+0x 18
lea_r8_[r sp+0x10],</w>
lea_r13 _[rax
cmp_r13d _3,</w>
bs f
mov_r15 _qword_ptr_[rsp+0x30],</w>
cmp_r14 _rbx,</w>
8888 889,</w>
2a 8,</w>
jne_0xa d,</w>
cmp_edx _4,</w>
call_0xfffffffffffff 56
call_0xfffffffffffe ee
9d 8,</w>
95 8,</w>
8 2d
6c 8,</w>
sub_rax _0x10,</w>
sar_edx _0x1f,</w>
movnt dq
lea_rax_[rdx +1],</w>
jne_0xffffffffffffffa c,</w>
d ]_1,</w>
call_0xfffffffffffff 2e
90 8,</w>
mov_ecx _0x10
jne_0x c3,</w>
cmp_rdi _rcx,</w>
call_0xfffffffffff 58
bb 0,</w>
94 8,</w>
90 0],</w>
57 0,</w>
movzx_eax_byte_ptr_[r ax+1],</w>
movsx_edi _byte_ptr_[rbx],</w>
mov_rax_qword_ptr_[rip+0x2 27
mov_qword_ptr_[rsp+0x3 8]_0xc,</w>
mov_qword_ptr_[rbp ]_rbx,</w>
mov_ebp _0x16,</w>
mov_eax_dword_ptr_[r 13+8],</w>
jmp_0xffffffffffffff0 6,</w>
5b 0,</w>
mov_rdi_qword_ptr_[r cx+8],</w>
mov_rax_qword_ptr_[rbp-0x1 70],</w>
mov_rax_qword_ptr_[rbp-0x 207
mov_qword_ptr_[rbp- 8]_rdx,</w>
mov_dword_ptr_[rsp+0x 34]_0,</w>
jns _0xc,</w>
jne_0x 55
je_0x eb,</w>
mov_esi_0x40 c
mov_byte_ptr_[rdx ]
lea_rdi_[rsp+0x 80],</w>
jmp_0xffffffffffffff0 a,</w>
e 9
cmp_ax _1,</w>
add_eax _4,</w>
9b 8,</w>
jmp_0xffffffffffffff e3,</w>
14+0x 38],</w>
sub_rsi _rcx,</w>
mov_edi _0x2
mov_dword_ptr_[rip+0x2 13
je_0xffffffffffffff d4,</w>
call_0xfffffffffffff 2c
call_0xffffffffffff 1f
mov_rbp _qword_ptr_[rsp+0x20],</w>
mov_edx_dword_ptr_[rax+0x 30],</w>
jmp_0xffffffffffff dc
ec 0,</w>
call_0xfffffffffffff 32
call_0xfffffffffffff 2b
bx -4],</w>
4 8]_rdx,</w>
3b 0],</w>
00 5,</w>
mov_qword_ptr_[rsp+0xe 8]_rax,</w>
lea_rax_[rip+0x 13
add_rsp _-0x80,</w>
3e 8,</w>
0] _r12d,</w>
mov_rdx_qword_ptr_[rbp+0x 20],</w>
mov_rcx_qword_ptr_[r di],</w>
mov_rax_qword_ptr_[rbp+0x 120],</w>
mov_qword_ptr_[rsp+0x3 8]_r10,</w>
mov_edx_0x1 2,</w>
call_qword_ptr_[r 10],</w>
bx+0x1 58],</w>
bx +rax+1],</w>
jmp_0xffffffffffffff0 9,</w>
je_0xffffffffffffff df,</w>
je_0xffffffffffffff d8,</w>
add_rsi _rdi,</w>
_0x6 2,</w>
mov_rsi_qword_ptr_[rbp-0x 50],</w>
mov_r14_qword_ptr_[r ip+0x2
lea_rax_[rsp+0x 48],</w>
jne_0x 9e,</w>
je_0xffffffffffffff c2,</w>
cx+0x 30],</w>
ax -0x18],</w>
+rdx* 2
mov_rbx_qword_ptr_[r sp+0x1
mov_r12_qword_ptr_[r bx],</w>
lea_edx _[rdx
je_0xffffffffffffff ee,</w>
je_0x1 1c,</w>
fc 8,</w>
30 ]_xmm3,</w>
sub _dword_ptr_[rsp+0x
mov_qword_ptr_[rip+0x2 5
mov_ecx _0xd,</w>
lea_rdi_[r ax+0x18],</w>
jmp_0xffffffffffffff0 7,</w>
je_0x12 d,</w>
cmove _rbx
and_edx _2,</w>
_dword_ptr_fs:[0x 18],</w>
ucomi sd_xmm0_xmm1,</w>
mov_esi_0x4 22
mov_edx_dword_ptr_[rax+0x 20],</w>
mov_ebx _r13d,</w>
mov_eax_dword_ptr_[rip+0x2 19
mov_dword_ptr_[rsp+0x 20]_1,</w>
jmp_0xfffffffffffffe bd,</w>
je_0xffffffffffffff e1,</w>
je_0x f2,</w>
ja _9,</w>
or_eax _0x20,</w>
movsx_rbx _byte_ptr_[r
mov_dword_ptr_[rsp+0x4 c]
jne_0x 9f,</w>
cc 0],</w>
call_0xfffffffffffff 30
call _r10,</w>
mov_rdx_qword_ptr_[rsp+0x a8],</w>
mov_qword_ptr_[rbx+0x 20]
lea_rdx_[rip+0x 26
jne_0xffffffffffff f0
jmp_0xffffffffffffff0 3,</w>
je_0x12 c,</w>
je_0x10 e,</w>
sbb _ecx_ecx,</w>
mov_rdi_qword_ptr_[r 14+0x1
mov_edx_dword_ptr_[rsp+0x 40],</w>
mov_ecx_0x1 4,</w>
lea_rdi_[r bx+0x1
_dh ,</w>
48 0,</w>
1e 8,</w>
10 1,</w>
sub_rdx _0x80,</w>
sub_rax _2,</w>
mov_word_ptr_[r ax]
mov_rax_qword_ptr_[rbp+0x 40],</w>
mov_rax_qword_ptr_[rax+0x 78],</w>
and _r8
_rcx _rdx,</w>
9a 7,</w>
sbb _esi_esi,</w>
mul _edx,</w>
movaps _xmm3_xmmword_ptr_[r
mov_qword_ptr_[rdi ]_rdx,</w>
mov_qword_ptr_[rbp-0x 17
mov_edx_dword_ptr_[r ax+0x1
movzx_r14d _word_ptr_[r
movsxd_rax_dword_ptr_[r ip+0x20
jne_0xa c,</w>
cmp_dword_ptr_[r 15+0x1
29 ]_1,</w>
25 8,</w>
sp+ 7],</w>
mov_rdx_qword_ptr_[r dx+0x10],</w>
mov_r12d _dword_ptr_[rip+0x2
mov_ecx _0x7
jne_0x bd,</w>
dx+0x c],</w>
c0 d,</w>
b 9
5e 8,</w>
4 60,</w>
34 8,</w>
sub_rbx _1,</w>
mov_rbx_qword_ptr_[r bp-8],</w>
mov_rax_qword_ptr_[rip+0x20 e
jne_0x 96,</w>
jg_0xffffffffffff fd
cmp_byte_ptr_[r di+0x1
call_0xfffffffffffe 9c
bp+0x 40],</w>
98 8,</w>
mov_qword_ptr_[rdi+0x1 0]_0,</w>
mov_eax_dword_ptr_[r bx+0x14],</w>
jmp_0xfffffffffffff 6d
call_0xfffffffffffe ba
_0xf b,</w>
]_- 2,</w>
mov_ebx _r15d,</w>
mov_eax_dword_ptr_[r 15+0x1
mov_dword_ptr_[rbp-0x 11
lea_rcx_[rip+0x 15
je_0xffffffffffffff c6,</w>
je_0xffffffffffffff bd,</w>
je_0x10 3,</w>
call_0xfffffffffff 7f
95 0,</w>
3f 0,</w>
38 ]_xmm0,</w>
14 4,</w>
10 +1],</w>
mov_r15d _r14d,</w>
mov_edi_dword_ptr_[r ax+0x
lea_rsi_[rip+0x 25
lea_rbx_[r sp+0x1
jne_0xffffffffffffffa 0,</w>
and_rax _qword_ptr_[rbp-0x
9 +4],</w>
6 0]_rdx,</w>
13 4,</w>
test_bl _1,</w>
pxor _xmm2_xmm2,</w>
mov_esi_0x4 26
mov_edi_0x4 1e
lea_rdx_[rip+0x 27
jmp_0xfffffffffffffe d5,</w>
jmp_0xfffffffffffffe cc,</w>
ec 0],</w>
_ si
8] _r11d,</w>
movzx_edx_byte_ptr_[r ax+0x
mov_qword_ptr_[rbx+0x 38]_rax,</w>
mov_esi_0x40 a
mov_eax_dword_ptr_[rip+0x2 6
lea_eax_[r bx-1],</w>
jmp_0xffffffffffffff0 f,</w>
jmp_0xfffffffffffffe f7,</w>
je_0xfffffffffffffff 4,</w>
je_0x fa,</w>
cmp_al _4,</w>
call_0xfffffffffffe dc
_dword_ptr_[rip+0x 3
movaps_xmmword_ptr_[rbp-0x 50
mov_r15 _r9,</w>
mov_qword_ptr_[rax+0x 8
mov_qword_ptr_[rax+ 8]_rbx,</w>
mov_eax_dword_ptr_[r 12+8],</w>
jne_0xffffffffffffffa 5,</w>
jne_0xffffffffffffffa 4,</w>
jmp_0xfffffffffffffe f2,</w>
jmp_0xfffffffffffff 80
call_0xfffffffffffff 3a
test _r13d
mov_qword_ptr_[rbp- 8]_0,</w>
lea_rax_[rbp-0x 4b0
jne_0xa 9,</w>
jmp_0xffffffffffffff0 4,</w>
jle_0x 40,</w>
fd 8,</w>
and_al _0x7f,</w>
add_rax _0xc,</w>
4 ]_3,</w>
movzx_eax_word_ptr_[r ax+0x
mov_rdx_qword_ptr_[rbp+0x e0],</w>
mov_eax_dword_ptr_[rip+0x2 12
mov_dword_ptr_[rsp+0x 54]_eax,</w>
mov_dword_ptr_[rbp-0x2 c]_esi,</w>
lea_rsi_[rip+0x d0
lea_rax_[rip+0x 15
jmp_0xffffffffffffff0 c,</w>
jmp_0x4 8,</w>
cmp_qword_ptr_[r di+
and_edx _0xf,</w>
5c 8,</w>
4 24
15 *
14 *
11 9,</w>
movabs_rdx _0x4
mov_rsi_qword_ptr_[r di],</w>
mov_rdx_qword_ptr_[r 15+8],</w>
mov_rax_qword_ptr_[r 14+0x1
mov_esi_0x40 8
mov_dword_ptr_[rbp-0x c]_0,</w>
je_0x12 5,</w>
je_0x12 3,</w>
f0 ]_1,</w>
a ]_rax,</w>
97 8,</w>
2d 0,</w>
20 c],</w>
shl _ebx
cmp_rax _r14,</w>
cmp_dword_ptr_[rbp- 4]
mov_qword_ptr_[rbx+0x 40]_rax,</w>
mov_dword_ptr_[r 14]
jmp_0xffffffffffffff0 5,</w>
je_0xffffffffffffff ed,</w>
inc _rdi,</w>
add_r8d _1,</w>
5 4]
sar_rax _1,</w>
or_dword_ptr_[r ip+0x2
mov_edx_dword_ptr_[r bx+0x10],</w>
lea_rsi_[rip+0x 77
jmp_0xfffffffffffffe df,</w>
je_0xffffffffffffff d3,</w>
je_0xffffffffffffff d0,</w>
call_0xfffffffffff 54
15+0x c],</w>
000 2,</w>
mov_qword_ptr_[rsp+0x3 8]_rsi,</w>
mov_qword_ptr_[rdi ]_rcx,</w>
mov_edi_dword_ptr_[r sp+0x10],</w>
je_0xffffffffffffff cd,</w>
je_0xffffffffffffff cc,</w>
je_0xffffffffffffff c7,</w>
8d 8,</w>
or _qword_ptr_[rsp+0x
lea_rax_[r dx+r
je_0x10 6,</w>
cmp_dword_ptr_[r bp+
call_0xa c
16 0
sub_rsp_0x1 18,</w>
mov_qword_ptr_[rcx ]_0,</w>
lea_rsi_[rsp+0x a0],</w>
js_0xffffffffffff fe
jne_0xa 4,</w>
jne_0xa 2,</w>
jne_0x c2,</w>
12 4,</w>
00 3,</w>
shr_rax _4,</w>
mov_eax_dword_ptr_[rbx+0x 38],</w>
mov_eax _0xa,</w>
lea_rax_[rip+0x d
lea_rax_[rip+0x 14
jmp_0xfffffffffffffe cf,</w>
9c 8,</w>
9a 8,</w>
movdqu _xmm4
mov_rdx_qword_ptr_[r 12+0x10],</w>
mov_qword_ptr_[rip+0x2 10
mov_qword_ptr_[rbx+0x1 0
jb _0x5
call_0x db
bx +rax*4],</w>
bb 8,</w>
b0 ]_1,</w>
ax -1],</w>
mov_esi_0x6 0
jmp_0xfffffffffffff 78
je_0x8 5,</w>
cmp_rax_qword_ptr_[rbp-0x 28],</w>
mov_r15d _ebp,</w>
mov_ecx_dword_ptr_[rsp+0x 24],</w>
mov_eax_dword_ptr_[rsp+0x 44],</w>
70 0],</w>
6c 0],</w>
60 8,</w>
+rcx ]_0,</w>
movabs_rax_0x7 fffffffffffffff,</w>
mov_rdx_qword_ptr_[r 13+0x10],</w>
mov_rdi_qword_ptr_[rsp+0x1 30],</w>
mov_byte_ptr_[r 13+0x
jmp_0xffffffffffffff e1,</w>
cmp_eax _0x22,</w>
bx+0x 24],</w>
b 6d
1b d,</w>
mov_rax_qword_ptr_[rip+0x2 a
mov_qword_ptr_[rsp+0x1 8]_rbx,</w>
lea_rdx_[rax +r
jmp_0xffffffffffffff e4,</w>
jmp_0xfffffffffffffe d7,</w>
_dword_ptr_[r sp+8],</w>
_dword_ptr_[r ip+0x20
12 c,</w>
10 6,</w>
palignr _xmm5
mov_rdi_qword_ptr_[rsp+0x a8],</w>
mov_rcx_qword_ptr_[r ax+0x28],</w>
mov_rbp_qword_ptr_[r bx+8],</w>
lea_rdx_[rip+0x 30
jne_0xffffffffffffff 92,</w>
jne_0xa 6,</w>
je_0xffffffffffffff c8,</w>
cc 0,</w>
call_0xffffffffffffe eb
call_0xfffffffffffe 9a
5c 3,</w>
sub_eax _edi,</w>
movsxd_rsi _edx,</w>
mov_r8_qword_ptr_[r ip+0x20
mov_r10_qword_ptr_[r si-0x
mov_dword_ptr_[rsp+0x 3c]_0,</w>
jne_0xffffffffffffff 9c,</w>
jmp_0xfffffffffffffe d6,</w>
jmp_0xfffffffffffffe c8,</w>
add_r14 _0x10,</w>
add _al
movsx_eax_word_ptr_[r bp-0x
mov_qword_ptr_[rbp-0x5 8]_rdi,</w>
jne_0xffffffffffffff 9f,</w>
call_0xfffffffffffff 2f
call_0xfffffffffff 92
_r13 _rax,</w>
11 b,</w>
mov_rax_qword_ptr_[rip+0x2 26
mov_r14 _qword_ptr_[rsp+0x28],</w>
mov_byte_ptr_[r 14+r
lea_rdx_[rip+0x 3a
jmp_0x4 5,</w>
je_0xffffffffffffff cb,</w>
call_0xffffffffffffe ca
call_0xffffffffffffe 9
96 8,</w>
15 *4],</w>
mov_rdx_qword_ptr_[rax+0x 40],</w>
mov_edx_dword_ptr_[rsp+0x 24],</w>
mov_eax_dword_ptr_[rbp-0x 68],</w>
mov_byte_ptr_[rdi ]_al,</w>
lea_rax_[rip+0x 27
jne_0xffffffffffffffa 3,</w>
jmp_0xfffffffffffffe e9,</w>
call_0xfffffffffff 6e
add_r12 d_eax,</w>
_0xffffff df,</w>
95 7,</w>
si+0x 50],</w>
mov_qword_ptr_[rsp+0x5 8]_r9,</w>
mov_eax_dword_ptr_[r dx+rax*4],</w>
jne_0xa a,</w>
jmp_0xfffffffffff a
cmp_r13d _-1,</w>
cmp_dl _al,</w>
cmp_byte_ptr_[r dx+0x1
call_0xfffffffffffff 17
33 0,</w>
mov_rsi_qword_ptr_[rsp+0x a0],</w>
mov_eax_dword_ptr_[r dx+rax],</w>
jmp_0xfffffffffffffe eb,</w>
cmp_ecx _esi,</w>
call_0xffffffffffff0 d
call_0x 68
5d 8,</w>
3 ]_eax,</w>
*4 +4],</w>
mov_r15_qword_ptr_[r 15],</w>
je_0x10 9,</w>
je_0x10 4,</w>
cmp_al _5,</w>
call_0xfffffffffffe 9d
6 34
4c 8,</w>
movzx_eax_word_ptr_[rax+r ax+0x4
mov_rdx_qword_ptr_[rip+0x2 10
mov_esi_0x40 f
lea_rdx_[rip+0x 2d
add _rcx_rcx,</w>
_0x8 00000,</w>
6d ]_0,</w>
50 ]_3,</w>
rol _ax_8,</w>
lea_r13_[rsp+0x 30],</w>
jmp_0xfffffffffffffe f4,</w>
je_0x10 8,</w>
8e 0,</w>
3d 8,</w>
shr_al _5,</w>
pcmpeq b_xmm
mov_rdi_qword_ptr_[rsp+0x f0],</w>
mov_r8d _8,</w>
mov_r12 _qword_ptr_[rsp+0x20],</w>
mov_qword_ptr_[rbp-0xd 0]_rax,</w>
mov_qword_ptr_[r15 +8]_rax,</w>
mov_ecx _0xf,</w>
mov_eax_dword_ptr_[rbp-0x 74],</w>
jne_0x 8c,</w>
dx -8],</w>
15+0x 40],</w>
10 9,</w>
sub_rsp _0xf8,</w>
movzx_esi_byte_ptr_[r sp+0x
mov_qword_ptr_[rsp+0xf 0]_rax,</w>
mov_edx_dword_ptr_[r dx+4],</w>
lea_edx_[r ax+0x
jmp_0xfffffffffffffe e1,</w>
di+0x 98],</w>
bx+ 5],</w>
aaaaaa ab,</w>
_0x8 0000
24 8,</w>
sp+0x10 ]_1,</w>
jmp_0xfffffffffffffe c9,</w>
je_0x1 13,</w>
ea 8,</w>
cmp_byte_ptr_[r 14+
cmp_al _0x3d,</w>
4 8]
mov_rax_qword_ptr_[rip+0x20 6
mov_r14 _qword_ptr_[rsp+0x20],</w>
mov_esi_0x6 4,</w>
mov_edi_0x4 12
mov_dword_ptr_[rsp+0x1 0]_edx,</w>
lea_r8_[rip+0x 9
jmp_0xfffffffffffffe fb,</w>
jmp_0xfffffffffffff 75
cmp_dword_ptr_[r bx]
add _sil
_eax _ecx,</w>
_0x1 000000,</w>
shr_eax _0x18,</w>
mov_rbx_qword_ptr_[r 12],</w>
mov_rax_qword_ptr_[rip+0x20 f
mov_edi_0x40 d
lea_rsi_[r bx+8],</w>
jmp_0xfffffffffffffe ee,</w>
ff d,</w>
call_0xffffffffffff0 b
a0 ]_1,</w>
_0x7 d,</w>
mov_rax_qword_ptr_[rbp-0x 80
lea_rax_[rip+0x 26
jne_0xffffffffffffff 8a,</w>
jmp_0xfffffffffffffe fa,</w>
jmp_0x4 7,</w>
je_0xffffffffffffff d2,</w>
call_0xfffffffffff8 9
60 6,</w>
60 1,</w>
15 ]_1,</w>
13 b,</w>
12+0x1 c],</w>
si +rcx
mov_qword_ptr_[rsp+0xc 8]_0,</w>
jmp_0xfffffffffffffe ba,</w>
fb 8,</w>
cmp_byte_ptr_[r 14]_0,</w>
call_0xfffffffffffff 1f
11 4],</w>
mov_rax_qword_ptr_[rax*8+0x 6
mov_r8d_dword_ptr_[r sp+4],</w>
mov_esi_0x40 5
mov_esi_0x2 d,</w>
lea_r8_[r bp-0x
jne_0xffffffffffffffa 1,</w>
jne_0xffffffffffffff 9d,</w>
ff 8,</w>
call_0x4 3
mov_dword_ptr_[rsp+0x18] _r9d,</w>
cmp_r15 d_eax,</w>
36 8,</w>
shr_rax _cl,</w>
shr _r8
mov_r10 _qword_ptr_[rsp+0x30],</w>
mov_esi_0x40 e
mov_byte_ptr_[r 12+
cmp_rbx _r15,</w>
25 0,</w>
mov_edx_dword_ptr_[r bx+0x1
jmp_0xfffffffffffffe ed,</w>
cmp_qword_ptr_[r 13+0x1
and_ebx _1,</w>
92 9,</w>
44 0,</w>
-1] _0x2f,</w>
movsd_xmm2 _qword_ptr_[rip+0x
cmp_al_0x2 5,</w>
6 70],</w>
4] _r15d,</w>
13 +rax*8],</w>
11 c,</w>
mov_qword_ptr_[rbx -0x
lea_rsi_[r 12+0x
jmp_0xfffffffffffffe c
je_0x8 2,</w>
cmp_esi _-1,</w>
13+0x 40],</w>
sar_edx _2,</w>
mov_word_ptr_[r di
mov_r13_qword_ptr_[r sp+8],</w>
mov_edi _0x38,</w>
mov_dword_ptr_[rbp-0x 4c]_eax,</w>
jmp_0xfffffffffffffe f1,</w>
je_0xffffffffffffff c9,</w>
je_0x1 a
je_0x1 16,</w>
11 ]_0,</w>
test_al _0x80,</w>
prefetch t
mov_rdi_qword_ptr_[rip+0x2 13
mov_edi_dword_ptr_[r sp+0x14],</w>
mov_eax _0x3
lea_rdx_[rip+0x 2b
lea_rdx_[r cx
jmp_0xfffffffffffffe de,</w>
call_0xfffffffffffff 1d
c] _ebp,</w>
a ]_ax,</w>
55 0,</w>
10 e,</w>
mov_dword_ptr_[rax+0x1 8]_edx,</w>
lea_rsi_[r ax+0x10],</w>
jne_0xffffffffffffff 8b,</w>
jmp_0xfffffffffffffe e5,</w>
je_0x10 b,</w>
93 8,</w>
14 9,</w>
mov_rdx_qword_ptr_[rip+0x2 2
lea_esi _[rax-1],</w>
jne_0xa e,</w>
call_0x 65
add_dword_ptr_[r ax+0x
_0xf c,</w>
90 6,</w>
1c ]_0,</w>
13 d,</w>
11 4,</w>
10 2,</w>
sub_rdx _rdi,</w>
sub sd_xmm0_xmm1,</w>
mov_r8d_dword_ptr_[rsp+0x 28],</w>
mov_r12d _r14d,</w>
mov_r11_qword_ptr_[r sp],</w>
mov_esi_0x4 20
lea_rdx_[rsp+0x 90],</w>
jmp_0xfffffffffffffe b
je_0xffffffffffffff d1,</w>
cvttsd2si _eax_xmm0,</w>
bt _rax
add_rdi _rbp,</w>
_0x4 00
9e d,</w>
60 ]_xmm0,</w>
4] _0x40,</w>
mov_rdi_qword_ptr_[rsp+0x1 e0],</w>
call_0xb d
9d d,</w>
6c f,</w>
6 ed
15 4,</w>
mov_qword_ptr_[rsp+0xf 8]_rax,</w>
je_0x10 1,</w>
and_eax_0xfffffff b,</w>
5e 8],</w>
57 8,</w>
5 8]_rdx,</w>
or_edx _1,</w>
mov_rdx_qword_ptr_[rbx+0x 30],</w>
jmp_0xfffffffffffffe ff,</w>
9f 8,</w>
57 7,</w>
2c 8,</w>
mov_rax_qword_ptr_[r ax+rdx*8],</w>
mov_ecx _0xe,</w>
mov_eax_dword_ptr_[rip+0x2 14
jne_0xffffffffffffff 8f,</w>
jmp_0xfffffffffffffe f8,</w>
cmp_qword_ptr_[rsp+0x 50]_0,</w>
call_0xfffffffffffea a
and_eax_0xffffff df,</w>
add_qword_ptr_[rbp-0x 10]_1,</w>
4c ]_8,</w>
37 d,</w>
13 c],</w>
1 ]_sil,</w>
movdqu _xmm3_xmmword_ptr_[r
mov_rbx_qword_ptr_[r di+0x10],</w>
mov_r9d_dword_ptr_[r ax+0x18],</w>
mov_esi_0x2 c,</w>
jmp_0xfffffffffffffe b7,</w>
je_0x1 14,</w>
mov_rax_qword_ptr_[rbp-0x 1a0],</w>
mov_dword_ptr_[r12 ]_1,</w>
je_0x1 11,</w>
e 2
call_0xffffffffffffe f7
call_0xffffffffffff 11
add_r15 _0x10,</w>
34 c,</w>
23 f,</w>
mov_edi_dword_ptr_[r sp+0x1c],</w>
jne_0x b4,</w>
ea d,</w>
_xmm1_xmm 3,</w>
5c c,</w>
5b 8,</w>
13 3,</w>
mov_r15d _ebx,</w>
mov_edi_0x4 10
mov_dword_ptr_[rbp-0x1 0]_eax,</w>
lea_rdi_[rip+0x 2f
jne_0x b0,</w>
cmp_eax _0xff,</w>
8c 0,</w>
86 8,</w>
70 6,</w>
28 4,</w>
14+0x 98],</w>
mov_rsi_qword_ptr_[r ax+0x28],</w>
mov_rcx_qword_ptr_[rbp-0x 50],</w>
mov_rax_qword_ptr_[rsp+0x f0],</w>
mov_r8d_dword_ptr_[r bp+0x
lea_rsi_[rip+0x 8b
lea_rax_[rip+0x 2d
je_0x12 f,</w>
cmp_rcx _rdi,</w>
4b00 4],</w>
13+0x 98],</w>
10 b,</w>
mov_rdi_qword_ptr_[r 15+0x18],</w>
mov_eax_dword_ptr_[rsp+0x 88],</w>
mov_dword_ptr_[rip+0x2 3
call_0xffffffffffff 2f
call_0x4 2
add_dword_ptr_[r bp+0x
_dword_ptr_[rsp+0x 28],</w>
5a 8,</w>
19 b
or_dword_ptr_[r bx+0x1
movzx_r11d _word_ptr_[r
mov_r8 _qword_ptr_[rsp+0x50],</w>
mov_r12_qword_ptr_[r sp+0x18],</w>
mov_qword_ptr_[rax] _r13,</w>
mov_eax_dword_ptr_[rsp+0x 78],</w>
mov_eax_dword_ptr_[rip+0x2 15
mov_dword_ptr_[rbx+0x 20]_eax,</w>
jmp_0xfffffffffffffe e8,</w>
jmp_0xfffffffffffff 6a
inc _r15,</w>
cmp_qword_ptr_[rbp-0x 58]_0,</w>
70 8,</w>
50 8],</w>
35 8,</w>
35 2,</w>
23 8,</w>
14 *4],</w>
-0x 40],</w>
mov_rdi_qword_ptr_[rbp+0x 28],</w>
mov_esi_0x1 1,</w>
mov_dword_ptr_[rsp+0x2 8]_ecx,</w>
mov_dword_ptr_[rsp+0x 5c]_eax,</w>
lea_rsi_[rip+0x 5f
fc ]_0,</w>
add_rdx _rbx,</w>
add_rbx _2,</w>
7 ]
4 20]
14+0x 40],</w>
11 +8],</w>
cmp_rax _r15,</w>
cmp_r12d _edx,</w>
call_0xfffffffffffff 3e
call_0xfffffffffffff 26
3 00,</w>
mov_qword_ptr_[rdx+0x1 8]_rcx,</w>
mov_edx_dword_ptr_[r 14],</w>
mov_eax_dword_ptr_[rsp+0x 54],</w>
lea_rdx_[r ax+0x20],</w>
lea_rdi_[rax +4],</w>
jmp_0xfffffffffffffe d9,</w>
je_0x1 36,</w>
dd 0,</w>
d c]
3b 0,</w>
2 8]_rsi,</w>
shl_rdx _0x20,</w>
movsx_rax _al,</w>
mov_rax_qword_ptr_[r di+0x158],</w>
mov_r12d _2,</w>
mov_qword_ptr_[rbp-0x9 0]_r8,</w>
mov_qword_ptr_[rbp ]_rdx,</w>
mov_edx_0x d,</w>
lea_rdx_[rip+0x 3b
lea_rax_[rip+0x 16
imul _rdi
call_0xfffffffffffe 9b
55 5,</w>
5 1]_0,</w>
mov_r15 _qword_ptr_[rbp-0x
mov_esi_0x5 c
jmp_0xfffffffffffffe e7,</w>
jmp_0x6 1,</w>
je_0x12 4,</w>
add_eax _ebx,</w>
3c 8,</w>
mov_rdi_qword_ptr_[rsp+0x1 90],</w>
mov_r10_qword_ptr_[r ip+0x2
mov_qword_ptr_[rsp+0x1 18]_rax,</w>
jmp_0xfffffffffffff 7e
call_0x ec
and_eax _0x200,</w>
3b 8,</w>
14 d,</w>
sete _bpl,</w>
mov_eax_dword_ptr_[r di+0x18],</w>
cmp_qword_ptr_[rsp+0x 28]_0,</w>
sub_edx _2,</w>
not _esi,</w>
mov_rax_qword_ptr_[rbp-0x5 68],</w>
mov_rax_qword_ptr_[rax+0x 90],</w>
mov_eax_dword_ptr_[r 15+8],</w>
jg _0x3
je_0x1 1f,</w>
92 5,</w>
8 +rax],</w>
3f 8,</w>
setne_ dil,</w>
movaps _xmm6
mov_rdx_qword_ptr_[r cx],</w>
mov_r8d _0x5
mov_dword_ptr_[rbp-0x3 8]_eax,</w>
je_0x10 7,</w>
add_rax _r8,</w>
]_ ymm
54 4,</w>
movaps_xmmword_ptr_[rbp-0x 80]_xmm0,</w>
movaps_xmmword_ptr_[r di
mov_esi_0x1 00
mov_byte_ptr_[r 12+r
lea_rdi_[rip+0x 4a
lea_rdi_[r ax+0x20],</w>
add_rsp_0x1 18,</w>
5f 8,</w>
15 1,</w>
sub_eax _ebx,</w>
movsxd_rax _r15d,</w>
mov_rsi_qword_ptr_[r ax+0x1
mov_rcx_qword_ptr_[r si+0x18],</w>
mov_r9 _qword_ptr_[rsp+0x48],</w>
mov_edx _0x28,</w>
add_rsp _0xf8,</w>
8 27
70 d,</w>
6 20],</w>
5 38],</w>
1b 1,</w>
12 a,</w>
test_byte_ptr_[rdi+0x 5a6]_1,</w>
movsd_qword_ptr_[rsp+ 8]_xmm0,</w>
movapd _xmm0_xmm1,</w>
mov_dword_ptr_[rbp-0x 4b0
mov_dword_ptr_[r ax+r
lea_rdi_[rip+0x 4c
jle_0x e,</w>
je_0x1 1a,</w>
e ]_ax,</w>
call_0xffffffffffffe cb
call_0xfffffffffffe 9e
ax+0x1 3],</w>
60 7,</w>
18 d,</w>
12 5,</w>
11 c],</w>
mov_rax_qword_ptr_[rbp-0x8 10],</w>
mov_qword_ptr_[rsp+0x3 0]_rdi,</w>
mov_edx_0x4 4
cmp_byte_ptr_[r si+
16 d,</w>
16 7,</w>
mov_rdi_qword_ptr_[rsp+0x1 20],</w>
mov_r10d_dword_ptr_[r sp],</w>
mov_edi_0x5 a
mov_edi _0x14,</w>
mov_dword_ptr_[rbx+0x 2
lea_rsi_[rip+0x 23
lea_r15_[rsp+0x 20],</w>
jne_0x d4,</w>
call_0xfffffffffffff 2a
call_0xfffffffffffff 20
2e 8,</w>
1a 3,</w>
14 2,</w>
r or_eax
mov_r13 _qword_ptr_[rsp+0x20],</w>
mov_qword_ptr_[rip+0x2 1d
mov_qword_ptr_[rbp-0x3 0]_0,</w>
mov_esi_0x5 b
mov_ecx_dword_ptr_[r 15],</w>
lea_rsi_[rip+0x 35
cmp_r14d _2,</w>
sub_rsp _0xf0,</w>
mov_r13 _qword_ptr_[rsp+0x30],</w>
mov_qword_ptr_[r14 +8]_rax,</w>
mov_ebx _8,</w>
mov_byte_ptr_[r 15+0x
lea_rsi_[rip+0x 4f
jne_0x c7,</w>
jmp_0xfffffffffffffe ec,</w>
jmp_0xfffffffffffff 6f
je_0xffffffffffffff be,</w>
6c d,</w>
60 c,</w>
13 c,</w>
movaps_xmmword_ptr_[rbp-0x60 ]_xmm2,</w>
mov_rax_qword_ptr_[rip+0x20 4
mov_dword_ptr_[rbp-0x 14]_0,</w>
lea_rdx_[rip+0x 2c
jne_0x b8,</w>
je_0xffffffffffffff c1,</w>
ffffffff ffff
ec 8,</w>
call_0xfffffffffffe 8a
93 d,</w>
2 10,</w>
jne_0x c5,</w>
jmp_0xfffffffffffffe ef,</w>
je_0x1 12,</w>
jb _0x3
comi sd
call_0x fd
_qword_ptr_[rsp+0x b8],</w>
4e 0,</w>
movsx_esi _al,</w>
movaps_xmmword_ptr_[rbp-0x50 ]_xmm3,</w>
mov_rax _r10,</w>
mov_qword_ptr_[rsp] _rbp,</w>
lea_rcx_[rip+0x 57
jmp_0xfffffffffffff 65
